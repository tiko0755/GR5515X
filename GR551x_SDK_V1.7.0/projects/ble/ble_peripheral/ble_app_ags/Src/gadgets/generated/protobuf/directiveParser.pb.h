/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_DIRECTIVE_DIRECTIVEPARSER_PB_H_INCLUDED
#define PB_DIRECTIVE_DIRECTIVEPARSER_PB_H_INCLUDED
#include <pb.h>
#include "directiveHeader.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(2048) directive_DirectiveParserProto_Directive_payload_t;
typedef struct _directive_DirectiveParserProto_Directive {
    bool has_header;
    header_DirectiveHeaderProto header;
    directive_DirectiveParserProto_Directive_payload_t payload;
} directive_DirectiveParserProto_Directive;

typedef struct _directive_DirectiveParserProto {
    bool has_directive;
    directive_DirectiveParserProto_Directive directive;
} directive_DirectiveParserProto;


/* Initializer values for message structs */
#define directive_DirectiveParserProto_init_default {false, directive_DirectiveParserProto_Directive_init_default}
#define directive_DirectiveParserProto_Directive_init_default {false, header_DirectiveHeaderProto_init_default, {0, {0}}}
#define directive_DirectiveParserProto_init_zero {false, directive_DirectiveParserProto_Directive_init_zero}
#define directive_DirectiveParserProto_Directive_init_zero {false, header_DirectiveHeaderProto_init_zero, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define directive_DirectiveParserProto_Directive_header_tag 1
#define directive_DirectiveParserProto_Directive_payload_tag 2
#define directive_DirectiveParserProto_directive_tag 1

/* Struct field encoding specification for nanopb */
#define directive_DirectiveParserProto_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  directive,         1)
#define directive_DirectiveParserProto_CALLBACK NULL
#define directive_DirectiveParserProto_DEFAULT NULL
#define directive_DirectiveParserProto_directive_MSGTYPE directive_DirectiveParserProto_Directive

#define directive_DirectiveParserProto_Directive_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           2)
#define directive_DirectiveParserProto_Directive_CALLBACK NULL
#define directive_DirectiveParserProto_Directive_DEFAULT NULL
#define directive_DirectiveParserProto_Directive_header_MSGTYPE header_DirectiveHeaderProto

extern const pb_msgdesc_t directive_DirectiveParserProto_msg;
extern const pb_msgdesc_t directive_DirectiveParserProto_Directive_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define directive_DirectiveParserProto_fields &directive_DirectiveParserProto_msg
#define directive_DirectiveParserProto_Directive_fields &directive_DirectiveParserProto_Directive_msg

/* Maximum encoded size of messages (where known) */
#define directive_DirectiveParserProto_size      (2063 + header_DirectiveHeaderProto_size)
#define directive_DirectiveParserProto_Directive_size (2057 + header_DirectiveHeaderProto_size)

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
