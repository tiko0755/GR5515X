/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_NOTIFICATIONS_NOTIFICATIONSCLEARINDICATORDIRECTIVE_PB_H_INCLUDED
#define PB_NOTIFICATIONS_NOTIFICATIONSCLEARINDICATORDIRECTIVE_PB_H_INCLUDED
#include <pb.h>
#include "directiveHeader.pb.h"
#include "notificationsClearIndicatorDirectivePayload.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _notifications_ClearIndicatorDirectiveProto_Directive {
    bool has_header;
    header_DirectiveHeaderProto header;
    bool has_payload;
    notifications_ClearIndicatorDirectivePayloadProto payload;
} notifications_ClearIndicatorDirectiveProto_Directive;

typedef struct _notifications_ClearIndicatorDirectiveProto {
    bool has_directive;
    notifications_ClearIndicatorDirectiveProto_Directive directive;
} notifications_ClearIndicatorDirectiveProto;


/* Initializer values for message structs */
#define notifications_ClearIndicatorDirectiveProto_init_default {false, notifications_ClearIndicatorDirectiveProto_Directive_init_default}
#define notifications_ClearIndicatorDirectiveProto_Directive_init_default {false, header_DirectiveHeaderProto_init_default, false, notifications_ClearIndicatorDirectivePayloadProto_init_default}
#define notifications_ClearIndicatorDirectiveProto_init_zero {false, notifications_ClearIndicatorDirectiveProto_Directive_init_zero}
#define notifications_ClearIndicatorDirectiveProto_Directive_init_zero {false, header_DirectiveHeaderProto_init_zero, false, notifications_ClearIndicatorDirectivePayloadProto_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define notifications_ClearIndicatorDirectiveProto_Directive_header_tag 1
#define notifications_ClearIndicatorDirectiveProto_Directive_payload_tag 2
#define notifications_ClearIndicatorDirectiveProto_directive_tag 1

/* Struct field encoding specification for nanopb */
#define notifications_ClearIndicatorDirectiveProto_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  directive,         1)
#define notifications_ClearIndicatorDirectiveProto_CALLBACK NULL
#define notifications_ClearIndicatorDirectiveProto_DEFAULT NULL
#define notifications_ClearIndicatorDirectiveProto_directive_MSGTYPE notifications_ClearIndicatorDirectiveProto_Directive

#define notifications_ClearIndicatorDirectiveProto_Directive_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  payload,           2)
#define notifications_ClearIndicatorDirectiveProto_Directive_CALLBACK NULL
#define notifications_ClearIndicatorDirectiveProto_Directive_DEFAULT NULL
#define notifications_ClearIndicatorDirectiveProto_Directive_header_MSGTYPE header_DirectiveHeaderProto
#define notifications_ClearIndicatorDirectiveProto_Directive_payload_MSGTYPE notifications_ClearIndicatorDirectivePayloadProto

extern const pb_msgdesc_t notifications_ClearIndicatorDirectiveProto_msg;
extern const pb_msgdesc_t notifications_ClearIndicatorDirectiveProto_Directive_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define notifications_ClearIndicatorDirectiveProto_fields &notifications_ClearIndicatorDirectiveProto_msg
#define notifications_ClearIndicatorDirectiveProto_Directive_fields &notifications_ClearIndicatorDirectiveProto_Directive_msg

/* Maximum encoded size of messages (where known) */
#define notifications_ClearIndicatorDirectiveProto_size (14 + header_DirectiveHeaderProto_size)
#define notifications_ClearIndicatorDirectiveProto_Directive_size (8 + header_DirectiveHeaderProto_size)

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
