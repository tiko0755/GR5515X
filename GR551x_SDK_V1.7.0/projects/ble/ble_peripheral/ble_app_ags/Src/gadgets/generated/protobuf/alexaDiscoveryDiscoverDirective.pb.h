/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_ALEXADISCOVERY_ALEXADISCOVERYDISCOVERDIRECTIVE_PB_H_INCLUDED
#define PB_ALEXADISCOVERY_ALEXADISCOVERYDISCOVERDIRECTIVE_PB_H_INCLUDED
#include <pb.h>
#include "directiveHeader.pb.h"
#include "alexaDiscoveryDiscoverDirectivePayload.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _alexaDiscovery_DiscoverDirectiveProto_Directive {
    bool has_header;
    header_DirectiveHeaderProto header;
    bool has_payload;
    alexaDiscovery_DiscoverDirectivePayloadProto payload;
} alexaDiscovery_DiscoverDirectiveProto_Directive;

typedef struct _alexaDiscovery_DiscoverDirectiveProto {
    bool has_directive;
    alexaDiscovery_DiscoverDirectiveProto_Directive directive;
} alexaDiscovery_DiscoverDirectiveProto;


/* Initializer values for message structs */
#define alexaDiscovery_DiscoverDirectiveProto_init_default {false, alexaDiscovery_DiscoverDirectiveProto_Directive_init_default}
#define alexaDiscovery_DiscoverDirectiveProto_Directive_init_default {false, header_DirectiveHeaderProto_init_default, false, alexaDiscovery_DiscoverDirectivePayloadProto_init_default}
#define alexaDiscovery_DiscoverDirectiveProto_init_zero {false, alexaDiscovery_DiscoverDirectiveProto_Directive_init_zero}
#define alexaDiscovery_DiscoverDirectiveProto_Directive_init_zero {false, header_DirectiveHeaderProto_init_zero, false, alexaDiscovery_DiscoverDirectivePayloadProto_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define alexaDiscovery_DiscoverDirectiveProto_Directive_header_tag 1
#define alexaDiscovery_DiscoverDirectiveProto_Directive_payload_tag 2
#define alexaDiscovery_DiscoverDirectiveProto_directive_tag 1

/* Struct field encoding specification for nanopb */
#define alexaDiscovery_DiscoverDirectiveProto_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  directive,         1)
#define alexaDiscovery_DiscoverDirectiveProto_CALLBACK NULL
#define alexaDiscovery_DiscoverDirectiveProto_DEFAULT NULL
#define alexaDiscovery_DiscoverDirectiveProto_directive_MSGTYPE alexaDiscovery_DiscoverDirectiveProto_Directive

#define alexaDiscovery_DiscoverDirectiveProto_Directive_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  payload,           2)
#define alexaDiscovery_DiscoverDirectiveProto_Directive_CALLBACK NULL
#define alexaDiscovery_DiscoverDirectiveProto_Directive_DEFAULT NULL
#define alexaDiscovery_DiscoverDirectiveProto_Directive_header_MSGTYPE header_DirectiveHeaderProto
#define alexaDiscovery_DiscoverDirectiveProto_Directive_payload_MSGTYPE alexaDiscovery_DiscoverDirectivePayloadProto

extern const pb_msgdesc_t alexaDiscovery_DiscoverDirectiveProto_msg;
extern const pb_msgdesc_t alexaDiscovery_DiscoverDirectiveProto_Directive_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define alexaDiscovery_DiscoverDirectiveProto_fields &alexaDiscovery_DiscoverDirectiveProto_msg
#define alexaDiscovery_DiscoverDirectiveProto_Directive_fields &alexaDiscovery_DiscoverDirectiveProto_Directive_msg

/* Maximum encoded size of messages (where known) */
#define alexaDiscovery_DiscoverDirectiveProto_size (82 + header_DirectiveHeaderProto_size)
#define alexaDiscovery_DiscoverDirectiveProto_Directive_size (76 + header_DirectiveHeaderProto_size)

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
