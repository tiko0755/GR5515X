<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\oppo_pencil.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\oppo_pencil.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Jul 18 21:19:32 2023
<BR><P>
<H3>Maximum Stack Usage =       4816 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
flash_write &rArr; fatfs_flash_write &rArr; hal_flash_write &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5f6]">cortex_backtrace_fault_handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f6]">cortex_backtrace_fault_handler</a><BR>
 <LI><a href="#[7b]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">MemManage_Handler</a><BR>
 <LI><a href="#[7c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7c]">BusFault_Handler</a><BR>
 <LI><a href="#[7d]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d]">UsageFault_Handler</a><BR>
 <LI><a href="#[79]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[79]">NMI_Handler</a><BR>
 <LI><a href="#[7f]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f]">DebugMon_Handler</a><BR>
 <LI><a href="#[80]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[80]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[92]">AES_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[9e]">AON_WDT_IRQHandler</a> from maxeye_wdt.o(i.AON_WDT_IRQHandler) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[119]">BLESLEEP_IRQHandler_patch</a> from rwip_sleep_patch.o(RAM_CODE) referenced from rwip_sleep_patch.o(i.rwip_sleep_func_replace)
 <LI><a href="#[9b]">BLESLP_IRQHandler</a> from rom_symbol.txt(ABSOLUTE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[84]">BLE_IRQHandler</a> from rom_symbol.txt(ABSOLUTE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[117]">BLE_IRQHandler_patch</a> from rwble_patch.o(RAM_CODE) referenced from rwble_patch.o(i.rwble_replace)
 <LI><a href="#[83]">BLE_SDK_Handler</a> from rom_symbol.txt(ABSOLUTE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[127]">BLE_SDK_Handler_patch</a> from system_sdk_patch.o(TINY_RAM_SPACE) referenced from system_sdk_patch.o(i.system_sdk_replace)
 <LI><a href="#[7c]">BusFault_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[a3]">CALENDAR_IRQHandler</a> from app_rtc.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[9d]">COMP_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[85]">DMA_IRQHandler</a> from app_dma.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[8c]">DUAL_TIMER_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[7f]">DebugMon_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[88]">EXT0_IRQHandler</a> from app_gpiote.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[89]">EXT1_IRQHandler</a> from app_gpiote.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[94]">EXT2_IRQHandler</a> from app_gpiote.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[93]">HMAC_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[7a]">HardFault_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[90]">I2C0_IRQHandler</a> from app_i2c.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[91]">I2C1_IRQHandler</a> from app_i2c.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[9f]">I2S_M_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[a0]">I2S_S_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[a1]">ISO7816_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[7b]">MemManage_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[79]">NMI_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[97]">PKC_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[96]">PMU_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[a2]">PRESENT_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[9a]">PWR_CMD_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[80]">PendSV_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[8d]">QSPI0_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[99]">QSPI1_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[95]">RNG_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[78]">Reset_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[9c]">SLPTIMER_IRQHandler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[86]">SPI_M_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[87]">SPI_S_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[7e]">SVC_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[81]">SysTick_Handler</a> from interrupt_gr55xx.o(i.SysTick_Handler) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[a6]">SystemInit</a> from system_gr55xx.o(i.SystemInit) referenced from startup_gr55xx.o(.text)
 <LI><a href="#[8a]">TIMER0_IRQHandler</a> from app_tim.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[8b]">TIMER1_IRQHandler</a> from app_tim.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[8e]">UART0_IRQHandler</a> from app_uart.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[8f]">UART1_IRQHandler</a> from app_uart.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[7d]">UsageFault_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[82]">WDT_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[98]">XQSPI_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[a9]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[aa]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[a8]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[ad]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[ad]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[ae]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[5e]">app_assert_err_cb</a> from app_assert.o(i.app_assert_err_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[5f]">app_assert_param_cb</a> from app_assert.o(i.app_assert_param_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[60]">app_assert_warn_cb</a> from app_assert.o(i.app_assert_warn_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[12d]">app_gap_adv_start_cb</a> from user_gap_callback.o(i.app_gap_adv_start_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[12e]">app_gap_adv_stop_cb</a> from user_gap_callback.o(i.app_gap_adv_stop_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[130]">app_gap_connect_cb</a> from user_gap_callback.o(i.app_gap_connect_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[132]">app_gap_connection_update_cb</a> from user_gap_callback.o(i.app_gap_connection_update_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[133]">app_gap_connection_update_req_cb</a> from user_gap_callback.o(i.app_gap_connection_update_req_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[131]">app_gap_disconnect_cb</a> from user_gap_callback.o(i.app_gap_disconnect_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[12f]">app_gap_scan_req_ind_cb</a> from user_gap_callback.o(i.app_gap_scan_req_ind_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[b1]">app_i2c0_evt_handler</a> from maxeye_i2c0.o(i.app_i2c0_evt_handler) referenced from maxeye_i2c0.o(i.app_i2c0_master_init)
 <LI><a href="#[135]">app_sec_rcv_enc_ind_cb</a> from user_sm_callback.o(i.app_sec_rcv_enc_ind_cb) referenced from user_sm_callback.o(.constdata)
 <LI><a href="#[134]">app_sec_rcv_enc_req_cb</a> from user_sm_callback.o(i.app_sec_rcv_enc_req_cb) referenced from user_sm_callback.o(.constdata)
 <LI><a href="#[c8]">app_uart_evt_handler</a> from bsp.o(i.app_uart_evt_handler) referenced from bsp.o(i.bsp_uart_init)
 <LI><a href="#[159]">atts_execute_write_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[14f]">atts_find_by_type_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[14e]">atts_find_info_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[14d]">atts_mtu_exc_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[158]">atts_prepare_write_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[153]">atts_read_blob_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[151]">atts_read_by_grp_type_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[150]">atts_read_by_type_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[154]">atts_read_mult_req_patch</a> from atts_patch.o(i.atts_read_mult_req_patch) referenced from atts_patch.o(.constdata)
 <LI><a href="#[152]">atts_read_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[155]">atts_write_cmd</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[156]">atts_write_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[157]">atts_write_signed</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[70]">bas_cccd_set_cb</a> from bas.o(i.bas_cccd_set_cb) referenced 2 times from bas.o(.data)
 <LI><a href="#[6d]">bas_init</a> from bas.o(i.bas_init) referenced 2 times from bas.o(.data)
 <LI><a href="#[6e]">bas_read_att_cb</a> from bas.o(i.bas_read_att_cb) referenced 2 times from bas.o(.data)
 <LI><a href="#[6f]">bas_write_att_cb</a> from bas.o(i.bas_write_att_cb) referenced 2 times from bas.o(.data)
 <LI><a href="#[b2]">batt_charge_init_event_handler</a> from maxeye_battery.o(i.batt_charge_init_event_handler) referenced from maxeye_battery.o(i.batt_charge_init_event_register)
 <LI><a href="#[b3]">batt_charge_int_event_handler</a> from maxeye_battery.o(i.batt_charge_int_event_handler) referenced from maxeye_battery.o(i.batt_charge_int_event_register)
 <LI><a href="#[b4]">batt_meter_event_handler</a> from maxeye_battery.o(i.batt_meter_event_handler) referenced from maxeye_battery.o(i.batt_meter_event_register)
 <LI><a href="#[b5]">batt_meter_init_event_handler</a> from maxeye_battery.o(i.batt_meter_init_event_handler) referenced from maxeye_battery.o(i.batt_meter_init_event_register)
 <LI><a href="#[122]">bb_watch_timer_cbk_patch</a> from sch_prog_patch.o(i.bb_watch_timer_cbk_patch) referenced from sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
 <LI><a href="#[120]">bb_watch_timer_start_patch</a> from sch_prog_patch.o(RAM_CODE) referenced from sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
 <LI><a href="#[14b]">ble_bm_set_sec_info_patch</a> from ble_bondmgr_patch.o(i.ble_bm_set_sec_info_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[118]">ble_core_sleep_patch</a> from rwip_sleep_patch.o(RAM_CODE) referenced from rwip_sleep_patch.o(i.rwip_sleep_func_replace)
 <LI><a href="#[b6]">ble_idle_event_handler</a> from maxeye_sleep.o(i.ble_idle_event_handler) referenced from maxeye_sleep.o(i.ble_idle_event_register)
 <LI><a href="#[0]">ble_init_cmp_callback</a> from user_app.o(i.ble_init_cmp_callback) referenced 2 times from main.o(.data)
 <LI><a href="#[11c]">ble_irq_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[ba]">ble_nvds_del</a> from sdk_nvds_patch.o(i.ble_nvds_del) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[b8]">ble_nvds_get</a> from rom_symbol.txt(ABSOLUTE) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[b7]">ble_nvds_initialized</a> from rom_symbol.txt(ABSOLUTE) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[b9]">ble_nvds_put</a> from sdk_nvds_patch.o(i.ble_nvds_put) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[bf]">ble_rwip_wakeup</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[c0]">ble_rwip_wakeup_end</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[66e]">ble_rwip_wakeup_patch</a> from rwip_sleep_patch.o(RAM_CODE) referenced from rwip_sleep_patch.o(RAM_CODE)
 <LI><a href="#[d8]">ble_sdk_common_timeout_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch)
 <LI><a href="#[39]">ble_sdk_gatt_mtu_changed_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gatt_mtu_changed_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[37]">ble_sdk_gattc_event_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gattc_event_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[38]">ble_sdk_gatts_svc_changed_cfg_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gatts_svc_changed_cfg_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[11d]">ble_sdk_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[bd]">ble_sdk_init_patch</a> from ble_sdk_patch.o(i.ble_sdk_init_patch) referenced from ble_sdk_patch.o(i.ble_sdk_replace)
 <LI><a href="#[61]">ble_send_data</a> from dfu_port.o(i.ble_send_data) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[11b]">ble_sleep_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[11a]">ble_sleep_without_stack_init</a> from rwip_sleep_common.o(i.ble_sleep_without_stack_init) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[c6]">bsp_uart_flush</a> from bsp.o(i.bsp_uart_flush) referenced from bsp.o(i.bsp_log_init)
 <LI><a href="#[c7]">bsp_uart_send</a> from bsp.o(i.bsp_uart_send) referenced from bsp.o(i.bsp_log_init)
 <LI><a href="#[fe]">code_uart_evt_handler</a> from maxeye_uart.o(i.code_uart_evt_handler) referenced from maxeye_uart.o(i.maxeye_code_uart_init)
 <LI><a href="#[c2]">config_1M_tx_gain_value</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[c3]">config_2M_tx_gain_value</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[c4]">config_coded_tx_gain_value</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[10c]">cpll_calibration</a> from platform_sdk.o(i.cpll_calibration) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[17]">dfu_program_end_callback</a> from maxeye_dfu.o(i.dfu_program_end_callback) referenced 2 times from maxeye_dfu.o(.data)
 <LI><a href="#[15]">dfu_program_start_callback</a> from maxeye_dfu.o(i.dfu_program_start_callback) referenced 2 times from maxeye_dfu.o(.data)
 <LI><a href="#[16]">dfu_programing_callback</a> from maxeye_dfu.o(i.dfu_programing_callback) referenced 2 times from maxeye_dfu.o(.data)
 <LI><a href="#[71]">dis_init</a> from dis.o(i.dis_init) referenced 2 times from dis.o(.data)
 <LI><a href="#[72]">dis_read_att_cb</a> from dis.o(i.dis_read_att_cb) referenced 2 times from dis.o(.data)
 <LI><a href="#[b0]">dma_err_callback</a> from app_dma.o(i.dma_err_callback) referenced from app_dma.o(i.app_dma_init)
 <LI><a href="#[136]">dma_prepare_for_sleep</a> from app_dma.o(i.dma_prepare_for_sleep) referenced from app_dma.o(.constdata)
 <LI><a href="#[137]">dma_sleep_canceled</a> from app_dma.o(i.dma_sleep_canceled) referenced from app_dma.o(.constdata)
 <LI><a href="#[af]">dma_tfr_callback</a> from app_dma.o(i.dma_tfr_callback) referenced from app_dma.o(i.app_dma_init)
 <LI><a href="#[138]">dma_wake_up_ind</a> from app_dma.o(RAM_CODE) referenced from app_dma.o(.constdata)
 <LI><a href="#[18]">flash_initialize</a> from flash_diskio.o(i.flash_initialize) referenced 2 times from flash_diskio.o(.data)
 <LI><a href="#[1c]">flash_ioctl</a> from flash_diskio.o(i.flash_ioctl) referenced 2 times from flash_diskio.o(.data)
 <LI><a href="#[1a]">flash_read</a> from flash_diskio.o(i.flash_read) referenced 2 times from flash_diskio.o(.data)
 <LI><a href="#[19]">flash_status</a> from flash_diskio.o(i.flash_status) referenced 2 times from flash_diskio.o(.data)
 <LI><a href="#[1b]">flash_write</a> from flash_diskio.o(i.flash_write) referenced 2 times from flash_diskio.o(.data)
 <LI><a href="#[108]">fpb_patch_enable</a> from fpb_patch_init.o(i.fpb_patch_enable) referenced from platform_gr55xx.o(i.platform_init)
 <LI><a href="#[ac]">fputc</a> from app_log.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[cc]">g_sensor_init_event_handler</a> from maxeye_sensor.o(i.g_sensor_init_event_handler) referenced from maxeye_sensor.o(i.g_sensor_init_event_register)
 <LI><a href="#[cd]">g_sensor_int_event_handler</a> from maxeye_sensor.o(i.g_sensor_int_event_handler) referenced from maxeye_sensor.o(i.g_sensor_int_event_register)
 <LI><a href="#[ce]">g_sensor_int_rep_event_handler</a> from maxeye_sensor.o(i.g_sensor_int_rep_event_handler) referenced from maxeye_sensor.o(i.g_sensor_int_rep_event_register)
 <LI><a href="#[1e]">gap_activity_stopped_ind_handler_patch</a> from ble_sdk_gapm_patch.o(i.gap_activity_stopped_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[35]">gap_cmp_evt_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_cmp_evt_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[32]">gap_connection_req_ind_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_connection_req_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[1f]">gap_dev_bdaddr_ind_handler_patch</a> from ble_sdk_gapm_patch.o(i.gap_dev_bdaddr_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[bb]">gap_device_config_params_init_patch</a> from ble_sdk_gapm_patch.o(i.gap_device_config_params_init_patch) referenced from ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
 <LI><a href="#[33]">gap_disconnect_ind_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_disconnect_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[bc]">gap_init_fsm_next_func_patch</a> from ble_sdk_gapm_patch.o(i.gap_init_fsm_next_func_patch) referenced from ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
 <LI><a href="#[31]">gapc_hci_handler_patch</a> from gapc_hci_patch.o(i.gapc_hci_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[3a]">gapm_activity_create_cmd_handler_patch</a> from gapm_actv_patch.o(i.gapm_activity_create_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[cf]">gapm_adv_check_param_func_patch</a> from gapm_adv_patch.o(i.gapm_adv_check_param_func_patch) referenced from gapm_adv_patch.o(i.gapm_adv_replace)
 <LI><a href="#[1d]">gapm_cmp_evt_handler_patch</a> from ble_sdk_gapm_patch.o(i.gapm_cmp_evt_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[3b]">gapm_hci_handler_patch</a> from gapm_task_patch.o(i.gapm_hci_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[d3]">gapm_init_connection_ind_func_patch</a> from gapm_init_patch.o(i.gapm_init_connection_ind_func_patch) referenced from gapm_init_patch.o(i.gapm_init_replace)
 <LI><a href="#[d2]">gapm_init_delete</a> from rom_symbol.txt(ABSOLUTE) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[d0]">gapm_init_start_patch</a> from gapm_init_patch.o(i.gapm_init_start_patch) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[d1]">gapm_init_stop_patch</a> from gapm_init_patch.o(i.gapm_init_stop_patch) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[d4]">gatt_on_disconnection_func_patch</a> from ble_sdk_gatts_patch.o(i.gatt_on_disconnection_func_patch) referenced from ble_sdk_gatts_patch.o(i.gatt_on_disconnection_replace)
 <LI><a href="#[123]">gattc_write_req_ind_handler_patch</a> from ble_sdk_prf_patch.o(i.gattc_write_req_ind_handler_patch) referenced from ble_sdk_prf_patch.o(i.sdk_prf_msg_handler_tab_replace)
 <LI><a href="#[c9]">get_info</a> from dfu_cmd_handler_patch.o(i.get_info) referenced from dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace)
 <LI><a href="#[139]">gpiote_prepare_for_sleep</a> from app_gpiote.o(i.gpiote_prepare_for_sleep) referenced from app_gpiote.o(.constdata)
 <LI><a href="#[13a]">gpiote_sleep_canceled</a> from app_gpiote.o(i.gpiote_sleep_canceled) referenced from app_gpiote.o(.constdata)
 <LI><a href="#[13b]">gpiote_wake_up_ind</a> from app_gpiote.o(RAM_CODE) referenced from app_gpiote.o(.constdata)
 <LI><a href="#[46]">hal_aon_gpio_callback</a> from app_gpiote.o(i.hal_aon_gpio_callback) referenced 2 times from gr55xx_hal_aon_gpio.o(.data)
 <LI><a href="#[5a]">hal_aon_wdt_alarm_callback</a> from maxeye_wdt.o(i.hal_aon_wdt_alarm_callback) referenced 2 times from gr55xx_hal_aon_wdt.o(.data)
 <LI><a href="#[14a]">hal_exflash_erase</a> from gr55xx_hal_exflash_patch.o(RAM_CODE) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[149]">hal_exflash_write</a> from gr55xx_hal_exflash_patch.o(RAM_CODE) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[64]">hal_flash_erase</a> from hal_flash_patch.o(i.hal_flash_erase) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[65]">hal_flash_erase_chip</a> from hal_flash_patch.o(i.hal_flash_erase_chip) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[68]">hal_flash_get_info</a> from rom_symbol.txt(ABSOLUTE) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[67]">hal_flash_get_security</a> from rom_symbol.txt(ABSOLUTE) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[62]">hal_flash_read</a> from hal_flash_patch.o(i.hal_flash_read) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[66]">hal_flash_set_security</a> from rom_symbol.txt(ABSOLUTE) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[63]">hal_flash_write</a> from hal_flash_patch.o(i.hal_flash_write) referenced 2 times from dfu_port.o(.data)
 <LI><a href="#[45]">hal_gpio_exti_callback</a> from app_gpiote.o(i.hal_gpio_exti_callback) referenced 2 times from gr55xx_hal_gpio.o(.data)
 <LI><a href="#[59]">hal_i2c_abort_cplt_callback</a> from gr55xx_hal_i2c.o(i.hal_i2c_abort_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[58]">hal_i2c_error_callback</a> from app_i2c.o(i.hal_i2c_error_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[55]">hal_i2c_listen_cplt_callback</a> from gr55xx_hal_i2c.o(i.hal_i2c_listen_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[52]">hal_i2c_master_rx_cplt_callback</a> from app_i2c.o(i.hal_i2c_master_rx_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[51]">hal_i2c_master_tx_cplt_callback</a> from app_i2c.o(i.hal_i2c_master_tx_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[57]">hal_i2c_mem_rx_cplt_callback</a> from app_i2c.o(i.hal_i2c_mem_rx_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[56]">hal_i2c_mem_tx_cplt_callback</a> from app_i2c.o(i.hal_i2c_mem_tx_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[50]">hal_i2c_msp_deinit</a> from gr55xx_hal_i2c.o(i.hal_i2c_msp_deinit) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[4f]">hal_i2c_msp_init</a> from gr55xx_hal_i2c.o(i.hal_i2c_msp_init) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[54]">hal_i2c_slave_rx_cplt_callback</a> from app_i2c.o(i.hal_i2c_slave_rx_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[53]">hal_i2c_slave_tx_cplt_callback</a> from app_i2c.o(i.hal_i2c_slave_tx_cplt_callback) referenced 2 times from gr55xx_hal_i2c.o(.data)
 <LI><a href="#[44]">hal_msp_deinit</a> from gr55xx_hal.o(i.hal_msp_deinit) referenced 2 times from gr55xx_hal.o(.data)
 <LI><a href="#[43]">hal_msp_init</a> from gr55xx_hal.o(i.hal_msp_init) referenced 2 times from gr55xx_hal.o(.data)
 <LI><a href="#[d5]">hal_pwr_sleep_timer_elapsed_callback</a> from app_timer.o(RAM_CODE) referenced from gr55xx_hal_pwr.o(i.hal_pwr_config_timer_wakeup)
 <LI><a href="#[5c]">hal_timer_base_msp_deinit</a> from gr55xx_hal_tim.o(i.hal_timer_base_msp_deinit) referenced 2 times from gr55xx_hal_tim.o(.data)
 <LI><a href="#[5b]">hal_timer_base_msp_init</a> from gr55xx_hal_tim.o(i.hal_timer_base_msp_init) referenced 2 times from gr55xx_hal_tim.o(.data)
 <LI><a href="#[5d]">hal_timer_period_elapsed_callback</a> from app_tim.o(i.hal_timer_period_elapsed_callback) referenced 2 times from gr55xx_hal_tim.o(.data)
 <LI><a href="#[4c]">hal_uart_abort_cplt_callback</a> from gr55xx_hal_uart.o(i.hal_uart_abort_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[4e]">hal_uart_abort_rx_cplt_callback</a> from app_uart.o(i.hal_uart_abort_rx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[4d]">hal_uart_abort_tx_cplt_callback</a> from app_uart.o(i.hal_uart_abort_tx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[4b]">hal_uart_error_callback</a> from app_uart.o(i.hal_uart_error_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[48]">hal_uart_msp_deinit</a> from gr55xx_hal_uart.o(i.hal_uart_msp_deinit) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[47]">hal_uart_msp_init</a> from gr55xx_hal_uart.o(i.hal_uart_msp_init) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[4a]">hal_uart_rx_cplt_callback</a> from app_uart.o(i.hal_uart_rx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[49]">hal_uart_tx_cplt_callback</a> from app_uart.o(i.hal_uart_tx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[3]">hci_auth_payl_to_exp_evt_handler</a> from rom_symbol.txt(ABSOLUTE) referenced 2 times from app_gapc_hci_patch.o(.data)
 <LI><a href="#[1]">hci_disc_cmp_evt_handler_patch</a> from app_gapc_hci_patch.o(i.hci_disc_cmp_evt_handler_patch) referenced 2 times from app_gapc_hci_patch.o(.data)
 <LI><a href="#[4]">hci_enc_chg_evt_handler</a> from rom_symbol.txt(ABSOLUTE) referenced 2 times from app_gapc_hci_patch.o(.data)
 <LI><a href="#[5]">hci_enc_key_refr_evt_handler</a> from rom_symbol.txt(ABSOLUTE) referenced 2 times from app_gapc_hci_patch.o(.data)
 <LI><a href="#[3c]">hci_le_add_dev_to_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_add_dev_to_wlst_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[3e]">hci_le_clear_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_clear_wlst_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[42]">hci_le_cmd_cmp_evt_init_handler_patch</a> from gapm_init_patch.o(i.hci_le_cmd_cmp_evt_init_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[e2]">hci_le_con_upd_cmd_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_hci_patch.o(i.llc_hci_new_handler_find)
 <LI><a href="#[e3]">hci_le_con_upd_cmd_handler_patch</a> from llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch) referenced from llc_hci_patch.o(i.llc_hci_new_handler_find)
 <LI><a href="#[3f]">hci_le_ext_create_con_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_ext_create_con_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[3d]">hci_le_rmv_dev_from_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_rmv_dev_from_wlst_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[41]">hci_le_set_ext_scan_en_cmd_handler_patch</a> from llm_scan_patch.o(i.hci_le_set_ext_scan_en_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[40]">hci_le_set_ext_scan_param_cmd_handler_patch</a> from llm_scan_patch.o(i.hci_le_set_ext_scan_param_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[30]">hci_nb_cmp_pkts_evt_handler_patch</a> from l2cc_task_patch.o(i.hci_nb_cmp_pkts_evt_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[2]">hci_rd_rem_ver_info_cmp_evt_handler</a> from rom_symbol.txt(ABSOLUTE) referenced 2 times from app_gapc_hci_patch.o(.data)
 <LI><a href="#[148]">hci_send_2_controller_patch</a> from hci_patch.o(i.hci_send_2_controller_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[d7]">hid_service_event_process</a> from maxeye_public_services.o(i.hid_service_event_process) referenced from maxeye_public_services.o(i.hids_init)
 <LI><a href="#[6c]">hids_cccd_set_cb</a> from hids.o(i.hids_cccd_set_cb) referenced 2 times from hids.o(.data)
 <LI><a href="#[69]">hids_init</a> from hids.o(i.hids_init) referenced 2 times from hids.o(.data)
 <LI><a href="#[6a]">hids_read_att_cb</a> from hids.o(i.hids_read_att_cb) referenced 2 times from hids.o(.data)
 <LI><a href="#[6b]">hids_write_att_cb</a> from hids.o(i.hids_write_att_cb) referenced 2 times from hids.o(.data)
 <LI><a href="#[22]">host_to_sdk_msg_handler_patch</a> from ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[d9]">i2c_dma_abort</a> from gr55xx_hal_i2c_patch.o(i.i2c_dma_abort) referenced from gr55xx_hal_i2c_patch.o(i.i2c_it_error)
 <LI><a href="#[142]">i2c_prepare_for_sleep</a> from app_i2c.o(i.i2c_prepare_for_sleep) referenced from app_i2c.o(.constdata)
 <LI><a href="#[da]">i2c_slave_isr_it</a> from gr55xx_hal_i2c_patch.o(i.i2c_slave_isr_it) referenced from gr55xx_hal_i2c_patch.o(i.i2c_it_error)
 <LI><a href="#[143]">i2c_sleep_canceled</a> from app_i2c.o(i.i2c_sleep_canceled) referenced from app_i2c.o(.constdata)
 <LI><a href="#[144]">i2c_wake_up_ind</a> from app_i2c.o(RAM_CODE) referenced from app_i2c.o(.constdata)
 <LI><a href="#[ab]">isspace</a> from isspace_c.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[14c]">ke_task_schedule_patch</a> from ke_task_patch.o(i.ke_task_schedule_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[23]">l2cc_pdu_recv_ind_handler_patch</a> from gattc_task_patch.o(i.l2cc_pdu_recv_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[db]">l2cm_l2cap_tx_handler_patch</a> from l2cm_patch.o(i.l2cm_l2cap_tx_handler_patch) referenced from l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace)
 <LI><a href="#[e7]">ll_channel_map_ind_handler_patch</a> from llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[e9]">ll_connection_param_req_handler_patch</a> from llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[e8]">ll_connection_update_ind_handler_patch</a> from llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[ea]">ll_phy_req_handler_patch</a> from llc_phy_upd_patch.o(i.ll_phy_req_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[2d]">llc_auth_payl_nearly_to_handler_patch</a> from llc_le_ping_patch.o(i.llc_auth_payl_nearly_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[2e]">llc_auth_payl_real_to_handler_patch</a> from llc_le_ping_patch.o(i.llc_auth_payl_real_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[dc]">llc_ch_map_up_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch)
 <LI><a href="#[21]">llc_hci_command_handler_patch</a> from llc_hci_patch.o(i.llc_hci_command_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[e5]">llc_ll_enc_rsp_ack_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
 <LI><a href="#[e4]">llc_ll_reject_ind_ack_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
 <LI><a href="#[e6]">llc_ll_start_enc_rsp_ack_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
 <LI><a href="#[d6]">llc_loc_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch)
 <LI><a href="#[d6]">llc_loc_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch)
 <LI><a href="#[24]">llc_loc_llcp_rsp_to_handler_patch</a> from llc_task_patch.o(i.llc_loc_llcp_rsp_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[2f]">llc_op_dl_upd_ind_handler_patch</a> from llc_dl_upd_patch.o(i.llc_op_dl_upd_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[df]">llc_pref_param_compute_func_patch</a> from llc_con_upd_patch.o(i.llc_pref_param_compute_func_patch) referenced from llc_con_upd_patch.o(i.llc_con_upd_replace)
 <LI><a href="#[e0]">llc_rem_con_upd_proc_continue_patch</a> from llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch) referenced from llc_con_upd_patch.o(i.llc_con_upd_replace)
 <LI><a href="#[dd]">llc_rem_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch)
 <LI><a href="#[dd]">llc_rem_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch)
 <LI><a href="#[e1]">llc_rem_encrypt_proc_continue_patch</a> from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch) referenced from llc_encrypt_patch.o(i.llc_encrypt_replace)
 <LI><a href="#[25]">llc_rem_llcp_rsp_to_handler_patch</a> from llc_task_patch.o(i.llc_rem_llcp_rsp_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[de]">llc_rem_phy_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_phy_upd_patch.o(i.ll_phy_req_handler_patch)
 <LI><a href="#[28]">lld_acl_rx_ind_handler_patch</a> from llc_task_patch.o(i.lld_acl_rx_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[eb]">lld_adv_frm_cbk_func_patch</a> from lld_adv_patch.o(i.lld_adv_frm_cbk_func_patch) referenced from lld_adv_patch.o(i.lld_adv_replace)
 <LI><a href="#[f7]">lld_adv_start_func_patch</a> from lld_scan_patch.o(i.lld_adv_start_func_patch) referenced from lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
 <LI><a href="#[15c]">lld_bi_frm_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[2a]">lld_ch_map_upd_cfm_handler_patch</a> from llc_chmap_upd_patch.o(i.lld_ch_map_upd_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[15d]">lld_ci_frm_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[f0]">lld_con_evt_start_cbk_patch</a> from lld_con_patch.o(RAM_CODE) referenced from lld_con_patch.o(i.lld_con_start_patch)
 <LI><a href="#[ee]">lld_con_frm_cbk_patch</a> from lld_con_patch.o(RAM_CODE) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[2c]">lld_con_offset_upd_ind_handler_patch</a> from llc_con_upd_patch.o(i.lld_con_offset_upd_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[29]">lld_con_param_upd_cfm_handler_patch</a> from llc_con_upd_patch.o(i.lld_con_param_upd_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[ec]">lld_con_sched_patch</a> from lld_con_patch.o(RAM_CODE) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[ed]">lld_con_start_patch</a> from lld_con_patch.o(i.lld_con_start_patch) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[ef]">lld_con_tx_prog_patch</a> from lld_con_patch.o(i.lld_con_tx_prog_patch) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[f2]">lld_init_evt_canceled_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from lld_init_patch.o(i.lld_init_start_patch)
 <LI><a href="#[f3]">lld_init_evt_start_cbk_patch</a> from lld_init_patch.o(RAM_CODE) referenced from lld_init_patch.o(i.lld_init_start_patch)
 <LI><a href="#[f1]">lld_init_patch</a> from lld_patch.o(i.lld_init_patch) referenced from lld_patch.o(i.lld_init_replace)
 <LI><a href="#[f4]">lld_init_start_patch</a> from lld_init_patch.o(i.lld_init_start_patch) referenced from lld_init_patch.o(i.lld_init_start_replace)
 <LI><a href="#[26]">lld_llcp_rx_ind_handler_patch</a> from llc_llcp_patch.o(i.lld_llcp_rx_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[27]">lld_llcp_tx_cfm_handler_patch</a> from llc_llcp_patch.o(i.lld_llcp_tx_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[2b]">lld_phy_upd_cfm_handler_patch</a> from llc_phy_upd_patch.o(i.lld_phy_upd_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[f8]">lld_scan_evt_start_cbk_patch</a> from lld_scan_patch.o(RAM_CODE) referenced from lld_scan_patch.o(i.lld_scan_start_func_patch)
 <LI><a href="#[f5]">lld_scan_frm_cbk_func_patch</a> from lld_scan_patch.o(RAM_CODE) referenced from lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
 <LI><a href="#[f6]">lld_scan_start_func_patch</a> from lld_scan_patch.o(i.lld_scan_start_func_patch) referenced from lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
 <LI><a href="#[15e]">lld_supervision_to_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from lld_con_patch.o(RAM_CODE)
 <LI><a href="#[15b]">lld_test_frm_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[20]">llm_hci_command_handler_patch</a> from llm_hci_patch.o(i.llm_hci_command_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[15a]">lp_cali_watch_alarm_cb</a> from sch_prog_patch.o(RAM_CODE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[a4]">main</a> from platform_gr55xx.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[a7]">main_init</a> from system_gr55xx.o(i.main_init) referenced from startup_gr55xx.o(.text)
 <LI><a href="#[fc]">maxeye_aging_event_handler</a> from maxeye_product_test.o(i.maxeye_aging_event_handler) referenced from maxeye_product_test.o(i.maxeye_aging_event_register)
 <LI><a href="#[fd]">maxeye_charge_int_callback</a> from maxeye_io_it.o(i.maxeye_charge_int_callback) referenced from maxeye_io_it.o(i.maxeye_charge_int_cfg)
 <LI><a href="#[ff]">maxeye_g_int_callback</a> from maxeye_io_it.o(i.maxeye_g_int_callback) referenced from maxeye_io_it.o(i.maxeye_g_int_cfg)
 <LI><a href="#[100]">maxeye_meter_int_callback</a> from maxeye_io_it.o(i.maxeye_meter_int_callback) referenced from maxeye_io_it.o(i.maxeye_meter_int_cfg)
 <LI><a href="#[110]">maxeye_pcba_event_handler</a> from maxeye_product_test.o(i.maxeye_pcba_event_handler) referenced from maxeye_product_test.o(i.qfy_maxeye_pcba_event_register)
 <LI><a href="#[101]">maxeye_srv_event_handler</a> from maxeye_notify.o(i.maxeye_srv_event_handler) referenced from maxeye_notify.o(i.maxeye_srv_event_register)
 <LI><a href="#[a]">maxeye_srvc1_cccd_set_cb</a> from maxeye_18092d_services.o(i.maxeye_srvc1_cccd_set_cb) referenced 2 times from maxeye_18092d_services.o(.data)
 <LI><a href="#[6]">maxeye_srvc1_db_create</a> from maxeye_18092d_services.o(i.maxeye_srvc1_db_create) referenced 2 times from maxeye_18092d_services.o(.data)
 <LI><a href="#[f9]">maxeye_srvc1_event_handler</a> from maxeye_18092d_services.o(i.maxeye_srvc1_event_handler) referenced from maxeye_18092d_services.o(i.maxeye_18092D_srvc_init)
 <LI><a href="#[9]">maxeye_srvc1_ntf_ind_cb</a> from maxeye_18092d_services.o(i.maxeye_srvc1_ntf_ind_cb) referenced 2 times from maxeye_18092d_services.o(.data)
 <LI><a href="#[7]">maxeye_srvc1_read_att_cb</a> from maxeye_18092d_services.o(i.maxeye_srvc1_read_att_cb) referenced 2 times from maxeye_18092d_services.o(.data)
 <LI><a href="#[8]">maxeye_srvc1_write_att_cb</a> from maxeye_18092d_services.o(i.maxeye_srvc1_write_att_cb) referenced 2 times from maxeye_18092d_services.o(.data)
 <LI><a href="#[f]">maxeye_srvc2_cccd_set_cb</a> from maxeye_180933_services.o(i.maxeye_srvc2_cccd_set_cb) referenced 2 times from maxeye_180933_services.o(.data)
 <LI><a href="#[b]">maxeye_srvc2_db_create</a> from maxeye_180933_services.o(i.maxeye_srvc2_db_create) referenced 2 times from maxeye_180933_services.o(.data)
 <LI><a href="#[fa]">maxeye_srvc2_event_handler</a> from maxeye_180933_services.o(i.maxeye_srvc2_event_handler) referenced from maxeye_180933_services.o(i.maxeye_180933_srvc_init)
 <LI><a href="#[e]">maxeye_srvc2_ntf_ind_cb</a> from maxeye_180933_services.o(i.maxeye_srvc2_ntf_ind_cb) referenced 2 times from maxeye_180933_services.o(.data)
 <LI><a href="#[c]">maxeye_srvc2_read_att_cb</a> from maxeye_180933_services.o(i.maxeye_srvc2_read_att_cb) referenced 2 times from maxeye_180933_services.o(.data)
 <LI><a href="#[d]">maxeye_srvc2_write_att_cb</a> from maxeye_180933_services.o(i.maxeye_srvc2_write_att_cb) referenced 2 times from maxeye_180933_services.o(.data)
 <LI><a href="#[14]">maxeye_srvc3_cccd_set_cb</a> from maxeye_540500_services.o(i.maxeye_srvc3_cccd_set_cb) referenced 2 times from maxeye_540500_services.o(.data)
 <LI><a href="#[10]">maxeye_srvc3_db_create</a> from maxeye_540500_services.o(i.maxeye_srvc3_db_create) referenced 2 times from maxeye_540500_services.o(.data)
 <LI><a href="#[fb]">maxeye_srvc3_event_handler</a> from maxeye_540500_services.o(i.maxeye_srvc3_event_handler) referenced from maxeye_540500_services.o(i.maxeye_540500_srvc_init)
 <LI><a href="#[13]">maxeye_srvc3_ntf_ind_cb</a> from maxeye_540500_services.o(i.maxeye_srvc3_ntf_ind_cb) referenced 2 times from maxeye_540500_services.o(.data)
 <LI><a href="#[11]">maxeye_srvc3_read_att_cb</a> from maxeye_540500_services.o(i.maxeye_srvc3_read_att_cb) referenced 2 times from maxeye_540500_services.o(.data)
 <LI><a href="#[12]">maxeye_srvc3_write_att_cb</a> from maxeye_540500_services.o(i.maxeye_srvc3_write_att_cb) referenced 2 times from maxeye_540500_services.o(.data)
 <LI><a href="#[111]">maxeye_time1s_event_handler</a> from maxeye_product_test.o(i.maxeye_time1s_event_handler) referenced from maxeye_product_test.o(i.qfy_maxeye_time1s_event_register)
 <LI><a href="#[102]">maxeye_touch_int_callback</a> from maxeye_io_it.o(i.maxeye_touch_int_callback) referenced from maxeye_io_it.o(i.maxeye_touch_int_cfg)
 <LI><a href="#[104]">maxeye_wdt_event_handler</a> from maxeye_wdt.o(i.maxeye_wdt_event_handler) referenced from maxeye_wdt.o(i.maxeye_wdt_event_register)
 <LI><a href="#[125]">maxeye_wlc_init_proc</a> from maxeye_wlc.o(i.maxeye_wlc_init_proc) referenced from maxeye_wlc.o(i.start_wlc_init)
 <LI><a href="#[105]">maxeye_wlc_int_callback</a> from maxeye_io_it.o(i.maxeye_wlc_int_callback) referenced from maxeye_io_it.o(i.maxeye_wlc_int_cfg)
 <LI><a href="#[106]">mcu_init_event_handler</a> from maxeye_mcu_stylus.o(i.mcu_init_event_handler) referenced from maxeye_mcu_stylus.o(i.mcu_init_event_register)
 <LI><a href="#[107]">mcu_upgrade_event_handler</a> from maxeye_mcu_stylus.o(i.mcu_upgrade_event_handler) referenced from maxeye_mcu_stylus.o(i.mcu_upgrade_event_register)
 <LI><a href="#[77]">otas_cccd_set_cb</a> from otas.o(i.otas_cccd_set_cb) referenced 2 times from otas.o(.data)
 <LI><a href="#[cb]">otas_evt_process</a> from dfu_port.o(i.otas_evt_process) referenced from dfu_port.o(i.dfu_service_init)
 <LI><a href="#[76]">otas_gatts_cmpl_cb</a> from otas.o(i.otas_gatts_cmpl_cb) referenced 2 times from otas.o(.data)
 <LI><a href="#[73]">otas_init</a> from otas.o(i.otas_init) referenced 2 times from otas.o(.data)
 <LI><a href="#[74]">otas_read_att_cb</a> from otas.o(i.otas_read_att_cb) referenced 2 times from otas.o(.data)
 <LI><a href="#[75]">otas_write_att_cb</a> from otas.o(i.otas_write_att_cb) referenced 2 times from otas.o(.data)
 <LI><a href="#[126]">pmu_calibration</a> from pmu_calibration.o(i.pmu_calibration) referenced from pmu_calibration.o(i.system_pmu_calibration_init)
 <LI><a href="#[ca]">program_end_replace</a> from dfu_port.o(i.program_end_replace) referenced from dfu_port.o(i.dfu_port_init)
 <LI><a href="#[10f]">pwr_enter_sleep_check</a> from app_pwr_mgmt.o(i.pwr_enter_sleep_check) referenced from app_pwr_mgmt.o(i.pwr_register_sleep_cb)
 <LI><a href="#[10d]">pwr_mgmt_shutdown_patch</a> from sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE) referenced from sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace)
 <LI><a href="#[10e]">pwr_wake_up_ind</a> from app_pwr_mgmt.o(RAM_CODE) referenced from app_pwr_mgmt.o(i.pwr_register_sleep_cb)
 <LI><a href="#[103]">qfy_maxeye_mcu_int_callback</a> from maxeye_gpio.o(i.qfy_maxeye_mcu_int_callback) referenced from maxeye_gpio.o(i.maxeye_wakeup_ble_pin_cfg)
 <LI><a href="#[112]">rf_init_patch</a> from rf_gdx_patch.o(i.rf_init_patch) referenced from rf_gdx_patch.o(i.rf_gdx_replace)
 <LI><a href="#[c5]">rf_recalibrate</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[115]">rf_txpwr_cs_get_patch</a> from rf_gdx_patch.o(i.rf_txpwr_cs_get_patch) referenced from rf_gdx_patch.o(i.rf_init_patch)
 <LI><a href="#[114]">rf_txpwr_dbm_get_patch</a> from rf_gdx_patch.o(i.rf_txpwr_dbm_get_patch) referenced from rf_gdx_patch.o(i.rf_init_patch)
 <LI><a href="#[113]">rf_wakeup_init_patch</a> from rf_gdx_patch.o(RAM_CODE) referenced from rf_gdx_patch.o(i.rf_gdx_replace)
 <LI><a href="#[116]">rom_callback_patch</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rom_callback_replace)
 <LI><a href="#[be]">rwip_us_2_lpcycles</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[11f]">sch_arb_event_start_isr_patch</a> from sch_arb_patch.o(RAM_CODE) referenced from sch_arb_patch.o(i.sch_arb_replace)
 <LI><a href="#[11e]">sch_arb_insert_patch</a> from sch_arb_patch.o(RAM_CODE) referenced from sch_arb_patch.o(i.sch_arb_replace)
 <LI><a href="#[121]">sch_prog_activity_isr_patch</a> from sch_prog_patch.o(RAM_CODE) referenced from sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
 <LI><a href="#[36]">sec_rcv_encrypt_req_ind_handler_patch</a> from ble_sdk_sec_patch.o(i.sec_rcv_encrypt_req_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[34]">sec_rcv_sec_req_ind_handler_patch</a> from ble_sdk_sec_patch.o(i.sec_rcv_sec_req_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[a5]">set_msp</a> from system_gr55xx.o(i.set_msp) referenced from startup_gr55xx.o(.text)
 <LI><a href="#[c1]">set_sdk_schedule_event</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[124]">smpc_handle_enc_change_evt_func_patch</a> from smpc_patch.o(i.smpc_handle_enc_change_evt_func_patch) referenced from smpc_patch.o(i.smpc_handle_enc_change_evt_func_replace)
 <LI><a href="#[10a]">sys_context_restore_func</a> from platform_sys_context.o(RAM_CODE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[109]">sys_context_save_func</a> from platform_sys_context.o(RAM_CODE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[13f]">systick_prepare_for_sleep</a> from app_systick.o(i.systick_prepare_for_sleep) referenced from app_systick.o(.constdata)
 <LI><a href="#[140]">systick_sleep_canceled</a> from app_systick.o(i.systick_sleep_canceled) referenced from app_systick.o(.constdata)
 <LI><a href="#[141]">systick_wake_up_ind</a> from app_systick.o(RAM_CODE) referenced from app_systick.o(.constdata)
 <LI><a href="#[145]">tim_prepare_for_sleep</a> from app_tim.o(i.tim_prepare_for_sleep) referenced from app_tim.o(.constdata)
 <LI><a href="#[146]">tim_sleep_canceled</a> from app_tim.o(i.tim_sleep_canceled) referenced from app_tim.o(.constdata)
 <LI><a href="#[147]">tim_wake_up_ind</a> from app_tim.o(RAM_CODE) referenced from app_tim.o(.constdata)
 <LI><a href="#[128]">touch_init_event_handler</a> from maxeye_touch.o(i.touch_init_event_handler) referenced from maxeye_touch.o(i.touch_init_event_register)
 <LI><a href="#[129]">touch_int_event_handler</a> from maxeye_touch.o(i.touch_int_event_handler) referenced from maxeye_touch.o(i.touch_int_event_register)
 <LI><a href="#[12a]">touch_upgrade_event_handler</a> from maxeye_touch.o(i.touch_upgrade_event_handler) referenced from maxeye_touch.o(i.touch_upgrade_event_register)
 <LI><a href="#[13c]">uart_prepare_for_sleep</a> from app_uart.o(i.uart_prepare_for_sleep) referenced from app_uart.o(.constdata)
 <LI><a href="#[13d]">uart_sleep_canceled</a> from app_uart.o(i.uart_sleep_canceled) referenced from app_uart.o(.constdata)
 <LI><a href="#[13e]">uart_wake_up_ind</a> from app_uart.o(RAM_CODE) referenced from app_uart.o(.constdata)
 <LI><a href="#[10b]">ultra_wfi</a> from rom_symbol.txt(ABSOLUTE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[12c]">wlc_ask_task_handler</a> from maxeye_wlc.o(i.wlc_ask_task_handler) referenced from maxeye_wlc.o(i.wlc_prop_event_register)
 <LI><a href="#[12b]">wlc_int_event_handler</a> from maxeye_wlc.o(i.wlc_int_event_handler) referenced from maxeye_wlc.o(i.wlc_int_event_register)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5a4]"></a>bl1_srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen (via Veneer)
</UL>

<P><STRONG><a name="[189]"></a>assert_err</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init (via Veneer)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_tx_prog_patch (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_start_cbk_patch
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_start_func_patch (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_start_func_patch (via Veneer)
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_rx_isr_patch
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery (via Veneer)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_evt_start_cbk_patch
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[413]"></a>assert_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_cbk_func_patch (via Veneer)
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[427]"></a>assert_warn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
</UL>

<P><STRONG><a name="[44c]"></a>attc_l2cc_pdu_recv_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[24d]"></a>attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len (via Veneer)
</UL>

<P><STRONG><a name="[24e]"></a>attmdb_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len (via Veneer)
</UL>

<P><STRONG><a name="[259]"></a>atts_clear_read_cache</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[159]"></a>atts_execute_write_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>atts_find_by_type_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>atts_find_info_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[256]"></a>atts_get_att_chk_perm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[257]"></a>atts_get_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[250]"></a>atts_hdl_value_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[14d]"></a>atts_mtu_exc_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>atts_prepare_write_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[253]"></a>atts_process_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[153]"></a>atts_read_blob_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[151]"></a>atts_read_by_grp_type_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>atts_read_by_type_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>atts_read_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[25c]"></a>atts_send_error</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[25b]"></a>atts_send_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[155]"></a>atts_write_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[156]"></a>atts_write_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>atts_write_signed</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[641]"></a>ble_get_role_and_cs_idx_from_et</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[426]"></a>ble_util_buf_acl_tx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
</UL>

<P><STRONG><a name="[4a8]"></a>ble_util_buf_adv_tx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_try_to_free_old_buffer (via Veneer)
</UL>

<P><STRONG><a name="[487]"></a>ble_util_buf_rx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch (via Veneer)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[410]"></a>co_bdaddr_compare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[4a6]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_discard_last_rx_buff (via Veneer)
</UL>

<P><STRONG><a name="[4a5]"></a>co_list_find</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_discard_last_rx_buff (via Veneer)
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
</UL>

<P><STRONG><a name="[448]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[252]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[254]"></a>co_list_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[1c8]"></a>dbg_log_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put (via Veneer)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch (via Veneer)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch (via Veneer)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch (via Veneer)
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch (via Veneer)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch (via Veneer)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item (via Veneer)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items (via Veneer)
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item (via Veneer)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds (via Veneer)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch (via Veneer)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch (via Veneer)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch (via Veneer)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_check_param_func_patch (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[613]"></a>exflash_check_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[630]"></a>exflash_deepsleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[62a]"></a>exflash_enable_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
</UL>

<P><STRONG><a name="[65e]"></a>exflash_erase_chip</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>

<P><STRONG><a name="[65f]"></a>exflash_erase_sector</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>

<P><STRONG><a name="[65d]"></a>exflash_page_program</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[663]"></a>exflash_resume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[662]"></a>exflash_suspend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
</UL>

<P><STRONG><a name="[628]"></a>exflash_wait_busy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[611]"></a>exflash_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[62d]"></a>exflash_write_status</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
</UL>

<P><STRONG><a name="[685]"></a>force_dpad_le_high</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_restore_func
</UL>

<P><STRONG><a name="[416]"></a>gapc_get_conidx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch (via Veneer)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3fd]"></a>gapc_get_dest_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[417]"></a>gapc_get_operation</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[5d1]"></a>gapc_link_encrypted</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[5d0]"></a>gapc_send_complete_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[3fe]"></a>gapc_send_disconect_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ff]"></a>gapc_send_error_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3a6]"></a>gapc_set_local_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[5cf]"></a>gapc_update_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ad]"></a>gapm_actv_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[39a]"></a>gapm_actv_check_create_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3af]"></a>gapm_actv_created</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[39b]"></a>gapm_actv_get_free_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[408]"></a>gapm_actv_retrieve_cmd_cmp_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[443]"></a>gapm_actv_started</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[39c]"></a>gapm_adv_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[400]"></a>gapm_con_cleanup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3a5]"></a>gapm_get_address_type</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[3a0]"></a>gapm_get_att_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ae]"></a>gapm_get_requester</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[3b0]"></a>gapm_init_check_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch (via Veneer)
</UL>

<P><STRONG><a name="[d2]"></a>gapm_init_delete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[3b2]"></a>gapm_init_send_hci_le_create_con_cancel_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop_patch (via Veneer)
</UL>

<P><STRONG><a name="[3aa]"></a>gapm_init_send_hci_le_ext_create_con_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ab]"></a>gapm_init_stopped</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ac]"></a>gapm_is_addr_type_valid</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[39e]"></a>gapm_per_sync_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[399]"></a>gapm_process_op</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[39d]"></a>gapm_scan_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[255]"></a>gattc_get_mtu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[3cc]"></a>hal_aon_gpio_br_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler (via Veneer)
</UL>

<P><STRONG><a name="[4e3]"></a>hal_aon_gpio_read_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb (via Veneer)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_get (via Veneer)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_mcu_int_get (via Veneer)
</UL>

<P><STRONG><a name="[3c7]"></a>hal_aon_gpio_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init (via Veneer)
</UL>

<P><STRONG><a name="[187]"></a>hal_aon_wdt_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AON_WDT_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[3ce]"></a>hal_aon_wdt_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init (via Veneer)
</UL>

<P><STRONG><a name="[436]"></a>hal_dma_abort_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt (via Veneer)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error (via Veneer)
</UL>

<P><STRONG><a name="[343]"></a>hal_dma_get_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_prepare_for_sleep (via Veneer)
</UL>

<P><STRONG><a name="[5fc]"></a>hal_dma_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>

<P><STRONG><a name="[5fb]"></a>hal_dma_resume_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_wake_up_ind
</UL>

<P><STRONG><a name="[344]"></a>hal_dma_suspend_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_prepare_for_sleep (via Veneer)
</UL>

<P><STRONG><a name="[5da]"></a>hal_efuse_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo (via Veneer)
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync (via Veneer)
</UL>

<P><STRONG><a name="[3d5]"></a>hal_exflash_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init (via Veneer)
</UL>

<P><STRONG><a name="[5fa]"></a>hal_exflash_read_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
</UL>

<P><STRONG><a name="[610]"></a>hal_exflash_set_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
</UL>

<P><STRONG><a name="[3d8]"></a>hal_gpio_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit (via Veneer)
</UL>

<P><STRONG><a name="[5fd]"></a>hal_gpio_exti_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT1_IRQHandler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT0_IRQHandler
</UL>

<P><STRONG><a name="[3d9]"></a>hal_gpio_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init (via Veneer)
</UL>

<P><STRONG><a name="[4e4]"></a>hal_gpio_read_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb (via Veneer)
</UL>

<P><STRONG><a name="[3d7]"></a>hal_gpio_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init (via Veneer)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit (via Veneer)
</UL>

<P><STRONG><a name="[4f3]"></a>hal_gpio_write_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_pin_init (via Veneer)
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup (via Veneer)
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep (via Veneer)
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_mcu_firmware_version (via Veneer)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_enable (via Veneer)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_wakeup_int_set (via Veneer)
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_control (via Veneer)
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_pin_init (via Veneer)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_reset (via Veneer)
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_rst_control (via Veneer)
</UL>

<P><STRONG><a name="[3da]"></a>hal_i2c_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit (via Veneer)
</UL>

<P><STRONG><a name="[3eb]"></a>hal_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init (via Veneer)
</UL>

<P><STRONG><a name="[4e5]"></a>hal_msio_read_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb (via Veneer)
</UL>

<P><STRONG><a name="[4da]"></a>hal_msio_write_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerup (via Veneer)
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerdown (via Veneer)
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb (via Veneer)
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_pin_init (via Veneer)
</UL>

<P><STRONG><a name="[1e3]"></a>hal_nvic_clear_pending_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init (via Veneer)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init (via Veneer)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init (via Veneer)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_wake_up_ind
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_wake_up_ind
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wake_up_ind
</UL>

<P><STRONG><a name="[1e4]"></a>hal_nvic_enable_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init (via Veneer)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init (via Veneer)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_wake_up_ind
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init (via Veneer)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_wake_up_ind
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_wake_up_ind
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wake_up_ind
</UL>

<P><STRONG><a name="[3ee]"></a>hal_pwr_config_timer_wakeup_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup (via Veneer)
</UL>

<P><STRONG><a name="[69d]"></a>hal_pwr_enter_chip_deepsleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ed]"></a>hal_pwr_register_timer_elaspsed_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup (via Veneer)
</UL>

<P><STRONG><a name="[5f7]"></a>hal_pwr_sleep_timer_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLPTIMER_IRQHandler
</UL>

<P><STRONG><a name="[3ea]"></a>hal_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init (via Veneer)
</UL>

<P><STRONG><a name="[3f5]"></a>hal_timer_base_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_deinit (via Veneer)
</UL>

<P><STRONG><a name="[3f7]"></a>hal_timer_base_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_init (via Veneer)
</UL>

<P><STRONG><a name="[601]"></a>hal_timer_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[3f4]"></a>hal_timer_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_init (via Veneer)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_deinit (via Veneer)
</UL>

<P><STRONG><a name="[236]"></a>hal_uart_abort_transmit_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush (via Veneer)
</UL>

<P><STRONG><a name="[3fa]"></a>hal_uart_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit (via Veneer)
</UL>

<P><STRONG><a name="[3fb]"></a>hal_uart_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init (via Veneer)
</UL>

<P><STRONG><a name="[5ff]"></a>hal_uart_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[23f]"></a>hal_uart_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync (via Veneer)
</UL>

<P><STRONG><a name="[3f9]"></a>hal_uart_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init (via Veneer)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit (via Veneer)
</UL>

<P><STRONG><a name="[5fe]"></a>hal_uart_resume_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
</UL>

<P><STRONG><a name="[5ed]"></a>hal_uart_suspend_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_prepare_for_sleep (via Veneer)
</UL>

<P><STRONG><a name="[237]"></a>hal_uart_transmit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync (via Veneer)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush (via Veneer)
</UL>

<P><STRONG><a name="[241]"></a>hal_uart_transmit_dma</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async (via Veneer)
</UL>

<P><STRONG><a name="[240]"></a>hal_uart_transmit_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async (via Veneer)
</UL>

<P><STRONG><a name="[625]"></a>hal_xqspi_command_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>

<P><STRONG><a name="[605]"></a>hal_xqspi_msp_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[606]"></a>hal_xqspi_set_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[627]"></a>hal_xqspi_transmit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[3]"></a>hci_auth_payl_to_exp_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_gapc_hci_patch.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>hci_enc_chg_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_gapc_hci_patch.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>hci_enc_key_refr_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_gapc_hci_patch.o(.data)
</UL>
<P><STRONG><a name="[40a]"></a>init_hci_le_cmd_cmp_evt_started_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[40b]"></a>init_hci_le_cmd_cmp_evt_stopping_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[e2]"></a>hci_le_con_upd_cmd_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_hci_patch.o(i.llc_hci_new_handler_find)
</UL>
<P><STRONG><a name="[425]"></a>hci_look_for_cmd_desc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
</UL>

<P><STRONG><a name="[2]"></a>hci_rd_rem_ver_info_cmp_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_gapc_hci_patch.o(.data)
</UL>
<P><STRONG><a name="[615]"></a>jump_app</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[44f]"></a>ke_event_callback_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace (via Veneer)
</UL>

<P><STRONG><a name="[44b]"></a>ke_event_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[424]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[64c]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[449]"></a>ke_is_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
</UL>

<P><STRONG><a name="[258]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch (via Veneer)
</UL>

<P><STRONG><a name="[3a7]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch (via Veneer)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch (via Veneer)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[414]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[3a8]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch (via Veneer)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch (via Veneer)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[251]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_patch (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[44a]"></a>ke_task_handler_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
</UL>

<P><STRONG><a name="[3a9]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop_patch (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3b1]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch (via Veneer)
</UL>

<P><STRONG><a name="[44d]"></a>l2cc_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[25a]"></a>l2cc_pdu_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[422]"></a>l2cm_get_nb_buffer_available</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3d2]"></a>ll_dma_struct_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init (via Veneer)
</UL>

<P><STRONG><a name="[3f0]"></a>ll_rng_deinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_deinit_ext (via Veneer)
</UL>

<P><STRONG><a name="[3f2]"></a>ll_rng_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number (via Veneer)
</UL>

<P><STRONG><a name="[462]"></a>llc_auth_payl_nearly_to_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_nearly_to_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[463]"></a>llc_auth_payl_real_to_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_real_to_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[dc]"></a>llc_ch_map_up_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch)
</UL>
<P><STRONG><a name="[40e]"></a>llc_cmd_stat_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[40c]"></a>llc_con_upd_param_in_range</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[467]"></a>llc_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[474]"></a>llc_hci_con_param_req_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[476]"></a>llc_hci_con_upd_info_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[485]"></a>llc_hci_enc_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish (via Veneer)
</UL>

<P><STRONG><a name="[480]"></a>llc_hci_ltk_request_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[47d]"></a>llc_iv_skd_rand_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[486]"></a>llc_le_ping_restart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish (via Veneer)
</UL>

<P><STRONG><a name="[475]"></a>llc_ll_connection_param_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[e5]"></a>llc_ll_enc_rsp_ack_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
</UL>
<P><STRONG><a name="[47f]"></a>llc_ll_enc_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[47c]"></a>llc_ll_pause_enc_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[e4]"></a>llc_ll_reject_ind_ack_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
</UL>
<P><STRONG><a name="[473]"></a>llc_ll_reject_ind_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[483]"></a>llc_ll_start_enc_req_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[e6]"></a>llc_ll_start_enc_rsp_ack_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
</UL>
<P><STRONG><a name="[484]"></a>llc_ll_start_enc_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[47b]"></a>llc_llcp_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish (via Veneer)
</UL>

<P><STRONG><a name="[d6]"></a>llc_loc_con_upd_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 2]<UL><LI> llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch)
<LI> llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch)
</UL>
<P><STRONG><a name="[468]"></a>llc_op_dl_upd_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_op_dl_upd_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[45a]"></a>llc_proc_collision_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[45b]"></a>llc_proc_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish (via Veneer)
</UL>

<P><STRONG><a name="[455]"></a>llc_proc_id_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[457]"></a>llc_proc_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[45c]"></a>llc_proc_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[40d]"></a>llc_proc_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[479]"></a>llc_proc_timer_pause_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish (via Veneer)
</UL>

<P><STRONG><a name="[471]"></a>llc_proc_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[477]"></a>llc_proc_unreg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish (via Veneer)
</UL>

<P><STRONG><a name="[458]"></a>llc_rem_ch_map_proc_continue_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[dd]"></a>llc_rem_con_upd_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 2]<UL><LI> llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch)
<LI> llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch)
</UL>
<P><STRONG><a name="[de]"></a>llc_rem_phy_upd_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_phy_upd_patch.o(i.ll_phy_req_handler_patch)
</UL>
<P><STRONG><a name="[481]"></a>llc_sk_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
</UL>

<P><STRONG><a name="[49e]"></a>lld_aa_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch (via Veneer)
</UL>

<P><STRONG><a name="[488]"></a>lld_acl_rx_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[40f]"></a>lld_addr_is_in_ral_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[491]"></a>lld_adv_adv_data_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
</UL>

<P><STRONG><a name="[495]"></a>lld_adv_aux_ch_idx_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
</UL>

<P><STRONG><a name="[48e]"></a>lld_adv_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
</UL>

<P><STRONG><a name="[494]"></a>lld_adv_ext_chain_construct</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
</UL>

<P><STRONG><a name="[48a]"></a>lld_adv_frm_skip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_cbk_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[48f]"></a>lld_adv_pkt_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
</UL>

<P><STRONG><a name="[492]"></a>lld_adv_scan_rsp_data_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
</UL>

<P><STRONG><a name="[496]"></a>lld_adv_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_start_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[15c]"></a>lld_bi_frm_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[64a]"></a>lld_calc_aux_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[497]"></a>lld_ch_map_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[15d]"></a>lld_ci_frm_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[46c]"></a>lld_con_activity_offset_compute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[656]"></a>lld_con_cleanup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_end_cleanup
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[655]"></a>lld_con_clear_ccmcnt_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[654]"></a>lld_con_clear_ccmcnt_tx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[478]"></a>lld_con_data_flow_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[482]"></a>lld_con_enc_key_load</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[657]"></a>lld_con_frm_cbk_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_frm_cbk_patch
</UL>

<P><STRONG><a name="[652]"></a>lld_con_max_lat_calc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[469]"></a>lld_con_offset_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[498]"></a>lld_con_offset_upd_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler_patch
</UL>

<P><STRONG><a name="[499]"></a>lld_con_param_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[472]"></a>lld_con_param_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
</UL>

<P><STRONG><a name="[47a]"></a>lld_con_rx_enc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[49a]"></a>lld_con_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_start_patch
</UL>

<P><STRONG><a name="[47e]"></a>lld_con_tx_enc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[470]"></a>lld_con_tx_len_update_for_intv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
</UL>

<P><STRONG><a name="[695]"></a>lld_init_compute_winoffset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[49f]"></a>lld_init_connect_req_pack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[f2]"></a>lld_init_evt_canceled_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lld_init_patch.o(i.lld_init_start_patch)
</UL>
<P><STRONG><a name="[49c]"></a>lld_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_patch
</UL>

<P><STRONG><a name="[658]"></a>lld_instant_proc_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[694]"></a>lld_iso_hop_accel_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[4a2]"></a>lld_llcp_rx_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[4a3]"></a>lld_llcp_tx_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler_patch
</UL>

<P><STRONG><a name="[4a4]"></a>lld_phy_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[4a0]"></a>lld_ral_search</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[49d]"></a>lld_read_clock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[41e]"></a>lld_res_list_is_empty</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[48d]"></a>lld_rxdesc_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[48c]"></a>lld_rxdesc_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[64f]"></a>lld_scan_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
</UL>

<P><STRONG><a name="[646]"></a>lld_scan_evt_start_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[651]"></a>lld_scan_frm_skip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[648]"></a>lld_scan_get_adv_data_len</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[41d]"></a>lld_scan_params_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[4a7]"></a>lld_scan_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_start_func_patch
</UL>

<P><STRONG><a name="[41c]"></a>lld_scan_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[649]"></a>lld_scan_sync_accept</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[64b]"></a>lld_scan_sync_info_unpack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[650]"></a>lld_scan_trunc_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
</UL>

<P><STRONG><a name="[15e]"></a>lld_supervision_to_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[15b]"></a>lld_test_frm_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[405]"></a>lld_white_list_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[407]"></a>lld_white_list_rem</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[411]"></a>llm_activity_free_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[406]"></a>llm_cmd_cmp_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[415]"></a>llm_cmd_stat_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[403]"></a>llm_dev_list_empty_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[402]"></a>llm_dev_list_search</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[404]"></a>llm_is_dev_connected</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[41f]"></a>llm_is_wl_empty</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[459]"></a>llm_le_evt_mask_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[420]"></a>llm_scan_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[421]"></a>llm_update_dbg_act_state_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[68d]"></a>prevent_sleep_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[2f6]"></a>register_config_1M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2f7]"></a>register_config_2M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2f8]"></a>register_config_coded_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2f2]"></a>register_rwip_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2f3]"></a>register_rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[2f4]"></a>register_rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[653]"></a>rwip_active_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[691]"></a>rwip_crypt_isr_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[692]"></a>rwip_sw_int_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[5c8]"></a>rwip_sw_int_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[291]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[690]"></a>rwip_timer_10ms_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[68c]"></a>rwip_timer_hs_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[68b]"></a>rwip_timer_hus_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[68f]"></a>rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[68e]"></a>rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[639]"></a>sch_alarm_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[292]"></a>sch_alarm_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
</UL>

<P><STRONG><a name="[686]"></a>sch_arb_allow_activity_notify</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[689]"></a>sch_arb_insert_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_insert_patch
</UL>

<P><STRONG><a name="[688]"></a>sch_arb_prog_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[48b]"></a>sch_arb_remove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[46a]"></a>sch_plan_chk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[412]"></a>sch_plan_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[642]"></a>sch_prog_convert_cs_idx_to_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[640]"></a>sch_prog_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[63c]"></a>sch_prog_rx_iso_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[63b]"></a>sch_prog_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[63e]"></a>sch_prog_skip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[63d]"></a>sch_prog_tx_iso_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[63a]"></a>sch_prog_tx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[696]"></a>sch_slice_bg_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[41a]"></a>smpc_generate_stk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[418]"></a>smpc_secure_connections_enabled</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[419]"></a>smpc_send_ltk_req_rsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[41b]"></a>smpc_send_pairing_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[5d3]"></a>smpc_tkdp_rcp_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[5d2]"></a>smpc_tkdp_send_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[2e1]"></a>svc_get_nvds_api_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[2e4]"></a>svc_rwip_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[2e3]"></a>svc_set_heaps_table_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[2f5]"></a>sys_signal_handler_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[60c]"></a>xqspi_send_inst_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
</UL>

<P><STRONG><a name="[607]"></a>xqspi_wait_flag_state_until_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[623]"></a>pwr_mgmt_load_context</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[6a3]"></a>pwr_mgmt_save_ctx_lvl_two</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[5a5]"></a>sdk_srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>

<P><STRONG><a name="[9b]"></a>BLESLP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ble_wakeup (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>BLE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>BLE_SDK_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5f5]"></a>SVC_handler_proc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[3ba]"></a>ble_attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[3bb]"></a>ble_attmdb_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[444]"></a>ble_bm_get_bond_devs</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
</UL>

<P><STRONG><a name="[3b4]"></a>ble_bm_get_gatt_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[37d]"></a>ble_bm_get_ral_dev_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[445]"></a>ble_bm_get_sec_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_bond_info_miss_check
</UL>

<P><STRONG><a name="[3a2]"></a>ble_bm_get_sec_info_by_peer_irk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[2dc]"></a>ble_bm_set_gatt_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[67a]"></a>ble_env_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>

<P><STRONG><a name="[2c5]"></a>ble_gap_addr_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[1cb]"></a>ble_gap_adv_data_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_params_init
</UL>

<P><STRONG><a name="[1ce]"></a>ble_gap_adv_param_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_params_init
</UL>

<P><STRONG><a name="[4d6]"></a>ble_gap_adv_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_adv_start
</UL>

<P><STRONG><a name="[4fe]"></a>ble_gap_adv_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_to_sleep
</UL>

<P><STRONG><a name="[397]"></a>ble_gap_appearance_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[2ee]"></a>ble_gap_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2b4]"></a>ble_gap_conn_param_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_idle_connection_parameter_set
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connection_parameter_set
</UL>

<P><STRONG><a name="[1e7]"></a>ble_gap_conn_param_update_reply</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connection_update_req_cb
</UL>

<P><STRONG><a name="[393]"></a>ble_gap_device_name_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[4fd]"></a>ble_gap_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_to_sleep
</UL>

<P><STRONG><a name="[392]"></a>ble_gap_pair_enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[394]"></a>ble_gap_ppcp_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[396]"></a>ble_gap_privacy_params_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[5cb]"></a>ble_gapc_auth_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[37c]"></a>ble_gapc_role_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2f0]"></a>ble_gatt_common_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2b9]"></a>ble_gatt_mtu_get_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_get
</UL>

<P><STRONG><a name="[1d9]"></a>ble_gatt_mtu_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
</UL>

<P><STRONG><a name="[2f1]"></a>ble_gattc_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2bb]"></a>ble_gattc_indicate_cfm_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>

<P><STRONG><a name="[2bc]"></a>ble_gattc_mtu_exchange_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange
</UL>

<P><STRONG><a name="[2d9]"></a>ble_gattm_svc_start_hdl_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
</UL>

<P><STRONG><a name="[2bd]"></a>ble_gatts_noti_ind_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>

<P><STRONG><a name="[2be]"></a>ble_gatts_read_cfm_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
</UL>

<P><STRONG><a name="[59a]"></a>ble_gatts_service_changed</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
</UL>

<P><STRONG><a name="[266]"></a>ble_gatts_srvc_db_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_db_create
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_db_create
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_db_create
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_init
</UL>

<P><STRONG><a name="[2bf]"></a>ble_gatts_write_cfm_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
</UL>

<P><STRONG><a name="[2ed]"></a>ble_init_cmp_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[384]"></a>ble_ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[382]"></a>ble_ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[5ca]"></a>ble_ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[5cc]"></a>ble_ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[b8]"></a>ble_nvds_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[b7]"></a>ble_nvds_initialized</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[3bc]"></a>ble_prf_get_id_from_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2f9]"></a>ble_rf_calibration_func_cb_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2ec]"></a>ble_rom_prf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[bf]"></a>ble_rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[c0]"></a>ble_rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[2fa]"></a>ble_schedule_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[d8]"></a>ble_sdk_common_timeout_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch)
</UL>
<P><STRONG><a name="[672]"></a>ble_sdk_core_reinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[2dd]"></a>ble_sdk_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_init_patch
</UL>

<P><STRONG><a name="[2e0]"></a>ble_sdk_rf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[671]"></a>ble_sdk_rf_wakeup_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[697]"></a>ble_sdk_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2ef]"></a>ble_sec_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[21f]"></a>ble_sec_enc_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_rcv_enc_req_cb
</UL>

<P><STRONG><a name="[395]"></a>ble_sec_params_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[269]"></a>ble_server_prf_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_init
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_init
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_init
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_service_init
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_service_init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_service_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_service_init
</UL>

<P><STRONG><a name="[c2]"></a>config_1M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[c3]"></a>config_2M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[c4]"></a>config_coded_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[56b]"></a>dfu_ble_receive_data_process</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_evt_process
</UL>

<P><STRONG><a name="[56c]"></a>dfu_ble_send_data_cmpl_process</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_evt_process
</UL>

<P><STRONG><a name="[56a]"></a>dfu_cmd_parse_state_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_evt_process
</UL>

<P><STRONG><a name="[33e]"></a>dfu_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_port_init
</UL>

<P><STRONG><a name="[59b]"></a>dfu_program_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
</UL>

<P><STRONG><a name="[4bd]"></a>dfu_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3be]"></a>dfu_send_frame</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_info
</UL>

<P><STRONG><a name="[33b]"></a>dfu_set_cmd_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_port_init
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_cmd_handler_replace
</UL>

<P><STRONG><a name="[298]"></a>find_peer_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[29a]"></a>find_unused_bond_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[58f]"></a>fpb_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[2d5]"></a>fpb_load_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[583]"></a>fpb_register_patch_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2d6]"></a>fpb_save_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[38d]"></a>gap_activity_opera_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[37a]"></a>gap_cache_data_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[37b]"></a>gap_cache_data_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[383]"></a>gap_cache_data_save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[38c]"></a>gap_create_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[38e]"></a>gap_delete_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[381]"></a>gap_get_actv_type_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[378]"></a>gap_get_adv_idx_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch
</UL>

<P><STRONG><a name="[379]"></a>gap_get_per_sync_idx_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch
</UL>

<P><STRONG><a name="[380]"></a>gap_reslv_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[38f]"></a>gap_start_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[390]"></a>gap_stop_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[3a1]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[2da]"></a>gatt_add_bond_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[3b7]"></a>gatt_clear_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[38a]"></a>gatt_on_disconnection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[3b6]"></a>gatt_recovery_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[3b3]"></a>gattc_on_connection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[3b8]"></a>gattc_on_disconnection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
</UL>

<P><STRONG><a name="[246]"></a>get_align_bytes</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_find
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[391]"></a>get_conn_idx_by_hdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[42f]"></a>get_msg_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_to_sdk_msg_handler_patch
</UL>

<P><STRONG><a name="[676]"></a>get_rf_api</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
</UL>

<P><STRONG><a name="[5db]"></a>hal_efuse_deinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>

<P><STRONG><a name="[5dc]"></a>hal_efuse_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>

<P><STRONG><a name="[68]"></a>hal_flash_get_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>hal_flash_get_security</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_img_info_erase
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_info_erase
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_img_info_erase
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[569]"></a>hal_flash_sector_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[66]"></a>hal_flash_set_security</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[29c]"></a>nvds_del</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_del
</UL>

<P><STRONG><a name="[507]"></a>nvds_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_product_test
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_pcba_test
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_device_sn
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test_number
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
</UL>

<P><STRONG><a name="[568]"></a>nvds_get_start_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[4f9]"></a>nvds_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_nvds_init
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[506]"></a>nvds_tag_length</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_product_test
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_pcba_test
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_device_sn
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test_number
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test
</UL>

<P><STRONG><a name="[3b9]"></a>prf_get_prf_cb_by_task_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[5a0]"></a>pwr_mgmt_dev_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>

<P><STRONG><a name="[622]"></a>pwr_mgmt_dev_resume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[6a5]"></a>pwr_mgmt_dev_suspend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[3c4]"></a>pwr_mgmt_get_wakeup_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_callback
</UL>

<P><STRONG><a name="[591]"></a>pwr_mgmt_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[6a0]"></a>pwr_mgmt_locker</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[5ac]"></a>pwr_mgmt_mode_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
</UL>

<P><STRONG><a name="[218]"></a>pwr_mgmt_mode_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[22b]"></a>pwr_mgmt_notify_timer_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[5a1]"></a>pwr_mgmt_set_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>

<P><STRONG><a name="[69b]"></a>pwr_mgmt_set_wakeup_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[6a4]"></a>pwr_mgmt_unlocker</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[1aa]"></a>pwr_mgmt_update_wkup_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
</UL>

<P><STRONG><a name="[1ec]"></a>pwr_mgmt_wakeup_source_setup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[5aa]"></a>rf_SX_Enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
</UL>

<P><STRONG><a name="[5b9]"></a>rf_SX_Tune</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
</UL>

<P><STRONG><a name="[5ab]"></a>rf_SX_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
</UL>

<P><STRONG><a name="[5b5]"></a>rf_agc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[5b1]"></a>rf_api_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[5b2]"></a>rf_em_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[5af]"></a>rf_freq_table_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
</UL>

<P><STRONG><a name="[326]"></a>rf_get_recalibration_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>

<P><STRONG><a name="[5bb]"></a>rf_mat_cir_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_dbm_get_patch
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_cs_get_patch
</UL>

<P><STRONG><a name="[5b4]"></a>rf_misc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[c5]"></a>rf_recalibrate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[592]"></a>rf_recalibration_handler_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[322]"></a>rf_set_recalibration_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration
</UL>

<P><STRONG><a name="[5b6]"></a>rf_trim_calibration</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[5ba]"></a>rf_tx_mode_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_dbm_get_patch
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_cs_get_patch
</UL>

<P><STRONG><a name="[684]"></a>rf_wakeup_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init_patch
</UL>

<P><STRONG><a name="[666]"></a>rwip_lpcycles_2_hus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remain_sleep_dur
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[682]"></a>rwip_prevent_sleep_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
</UL>

<P><STRONG><a name="[be]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[6a6]"></a>save_context_and_enter_sleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[670]"></a>sdk_blecore_postsleep_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[677]"></a>sdk_blecore_presleep_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
</UL>

<P><STRONG><a name="[387]"></a>sec_build_rand16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[38b]"></a>sec_clear_bond_info_env</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[5ce]"></a>sec_enc_link</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2d7]"></a>sec_get_bond_dev_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[37e]"></a>sec_on_conn_complete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[389]"></a>sec_on_disconn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[5cd]"></a>sec_send_pair_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[3a3]"></a>sec_update_bond_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[c1]"></a>set_sdk_schedule_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[582]"></a>svc_table_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[1d6]"></a>sys_assert_cb_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_init
</UL>

<P><STRONG><a name="[2b6]"></a>sys_ble_heartbeat_period_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>

<P><STRONG><a name="[59c]"></a>sys_delay_ms</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
</UL>

<P><STRONG><a name="[1c5]"></a>sys_delay_us</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_communication_core_init_patch
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_low_power_set
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
</UL>

<P><STRONG><a name="[673]"></a>sys_ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_is_in_active_state
</UL>

<P><STRONG><a name="[22e]"></a>sys_lpclk_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
</UL>

<P><STRONG><a name="[58d]"></a>sys_lpclk_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_param_adjust
</UL>

<P><STRONG><a name="[699]"></a>sys_lpcycles_2_hus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[66f]"></a>sys_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[65b]"></a>sys_security_data_use_present</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[3d4]"></a>sys_security_enable_status_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[675]"></a>sys_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
</UL>

<P><STRONG><a name="[67b]"></a>sys_sleep_env_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>

<P><STRONG><a name="[229]"></a>sys_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[10b]"></a>ultra_wfi</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[29b]"></a>update_lru_bond_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[7e]"></a>SVC_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_handler_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>HardFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cortex_backtrace_fault_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5f6]"></a>cortex_backtrace_fault_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cortex_backtrace_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cortex_backtrace_fault_handler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[7b]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>SLPTIMER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5f8]"></a>hal_xqspi_init_ext</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr55xx_hal_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_operation
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[3d6]"></a>hal_exflash_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr55xx_hal_exflash.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read_rom
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>

<P><STRONG><a name="[85]"></a>DMA_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_dma.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>EXT0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>EXT1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>EXT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXT2_IRQHandler &rArr; hal_aon_gpio_irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[10e]"></a>pwr_wake_up_ind</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_pwr_mgmt.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwr_wake_up_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwr_mgmt.o(i.pwr_register_sleep_cb)
</UL>
<P><STRONG><a name="[8e]"></a>UART0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_uart.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>UART1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[43e]"></a>hal_i2c_suspend_reg</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_i2c.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_prepare_for_sleep
</UL>

<P><STRONG><a name="[600]"></a>hal_i2c_resume_reg</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_i2c.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wake_up_ind
</UL>

<P><STRONG><a name="[90]"></a>I2C0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_i2c.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C0_IRQHandler &rArr; hal_i2c_irq_handler &rArr; i2c_it_error &rArr; hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>I2C1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_i2c.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C1_IRQHandler &rArr; hal_i2c_irq_handler &rArr; i2c_it_error &rArr; hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_tim.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_tim.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>hal_pwr_sleep_timer_elapsed_callback</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, app_timer.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hal_pwr_sleep_timer_elapsed_callback &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_timer
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_pwr.o(i.hal_pwr_config_timer_wakeup)
</UL>
<P><STRONG><a name="[602]"></a>app_timer_stop_and_ret</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, app_timer.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_get
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>

<P><STRONG><a name="[26f]"></a>app_timer_start</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, app_timer.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_get
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_register
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_start
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_wlc_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_start
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_start
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_start
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_start
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_start
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_start
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_start
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_start
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_start
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_start
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_handler
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_start
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_start
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_start
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_start
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_time1s_event_handler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_start
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_handler
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_start
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
</UL>

<P><STRONG><a name="[a3]"></a>CALENDAR_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_rtc.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CALENDAR_IRQHandler &rArr; calendar_irq_handler &rArr; hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[603]"></a>hal_pwr_disable_ext_wakeup</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
</UL>

<P><STRONG><a name="[1eb]"></a>hal_pwr_config_ext_wakeup</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_config_ext_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>

<P><STRONG><a name="[22d]"></a>hal_pwr_get_timer_current_value</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_get_timer_current_value
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[4e2]"></a>hal_nvic_system_reset</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, gr55xx_hal_cortex_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
</UL>

<P><STRONG><a name="[6a7]"></a>hal_xqspi_set_xip_present_status_patch</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)

<P><STRONG><a name="[5f9]"></a>hal_xqspi_init_ext_patch</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_msp_init
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_set_retry
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_init_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>

<P><STRONG><a name="[60b]"></a>hal_xqspi_command_receive_patch</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_send_inst_addr
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[60d]"></a>hal_xqspi_command_receive_align_word</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_send_inst_addr
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
</UL>

<P><STRONG><a name="[60f]"></a>hal_exflash_warm_init</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, warm_boot_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_set_retry
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[614]"></a>warm_boot_patch</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, warm_boot_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = warm_boot_patch &rArr; hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_app
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_callback_patch
</UL>

<P><STRONG><a name="[617]"></a>xo_offset_slowly_set</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
</UL>

<P><STRONG><a name="[618]"></a>boot_xo_bias_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = boot_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_save_func
</UL>

<P><STRONG><a name="[5bd]"></a>work_xo_bias_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = work_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
</UL>
<BR>[Called By]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
</UL>

<P><STRONG><a name="[61a]"></a>sys_is_adjust_boot_digldo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_digldo_dcdc_set
</UL>

<P><STRONG><a name="[619]"></a>boot_digldo_dcdc_set</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = boot_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_adjust_boot_digldo
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_save_func
</UL>

<P><STRONG><a name="[61b]"></a>work_digldo_dcdc_set</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = work_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_adjust_boot_digldo
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_restore_func
</UL>

<P><STRONG><a name="[621]"></a>hal_pm_resume</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[61c]"></a>warm_boot_second</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, platform_sdk.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_is_enabled_it
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_get_ext_wakeup_status
</UL>

<P><STRONG><a name="[59f]"></a>warm_boot_first</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = warm_boot_first &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_resume
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_load_context
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pm_resume
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_restore_func
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
</UL>

<P><STRONG><a name="[59e]"></a>warm_boot</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_resume
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_load_context
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pm_resume
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_restore_func
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_is_enabled_it
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_get_ext_wakeup_status
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
</UL>

<P><STRONG><a name="[2cb]"></a>platform_rng2_calibration_is_busy</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_prevent_sleep_without_stack_init
</UL>

<P><STRONG><a name="[624]"></a>enable_quad_stat</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[626]"></a>enable_quad_xmc</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = enable_quad_xmc &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>

<P><STRONG><a name="[629]"></a>enable_quad_mode2</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enable_quad_mode2
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_enable_write
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[62b]"></a>enable_quad_mode1</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enable_quad_mode1
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_enable_write
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[62c]"></a>enable_quad_mode0</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_write_status
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[62e]"></a>enable_quad_normal</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>

<P><STRONG><a name="[62f]"></a>enable_quad</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[579]"></a>platform_exflash_enable_quad</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = platform_exflash_enable_quad &rArr; enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_enable_quad
</UL>

<P><STRONG><a name="[631]"></a>platform_interrupt_protection_push</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_exflash.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
</UL>

<P><STRONG><a name="[633]"></a>platform_interrupt_protection_pop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_exflash.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[635]"></a>get_sram_size</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_sram_get
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>

<P><STRONG><a name="[636]"></a>system_calculate_sram_size</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
</UL>

<P><STRONG><a name="[561]"></a>mem_pwr_mgmt_work_state_set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mem_pwr_mgmt_work_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
</UL>

<P><STRONG><a name="[562]"></a>mem_pwr_mgmt_sleep_state_set</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
</UL>

<P><STRONG><a name="[637]"></a>mem_pwr_mgmt_check_processs</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = mem_pwr_mgmt_check_processs &rArr; mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[15a]"></a>lp_cali_watch_alarm_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[638]"></a>lp_cali_watch_alarm_start</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_find
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_clear
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
</UL>

<P><STRONG><a name="[5c6]"></a>ble_rx_desc_rx_done_clean</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_rx_desc_rx_done_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[63f]"></a>sch_prog_et_idx_correct_patch</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[121]"></a>sch_prog_activity_isr_patch</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sch_prog_activity_isr_patch &rArr; sch_arb_event_start_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_tx_isr
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_tx_iso_isr
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_skip_isr
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_rx_isr
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_rx_iso_isr
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_end_isr
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_convert_cs_idx_to_handle
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_role_and_cs_idx_from_et
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_clear
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rx_desc_rx_done_clean
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_et_idx_correct_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
</UL>
<P><STRONG><a name="[645]"></a>lld_test_frm_cbk_replace</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_start_patch
</UL>

<P><STRONG><a name="[643]"></a>bb_watch_timer_update</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bb_watch_timer_update
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_clear
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_start_patch
</UL>

<P><STRONG><a name="[644]"></a>bb_watch_timer_is_needed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_start_patch
</UL>

<P><STRONG><a name="[120]"></a>bb_watch_timer_start_patch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bb_watch_timer_start_patch &rArr; bb_watch_timer_update
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_is_needed
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_test_frm_cbk_replace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
</UL>
<P><STRONG><a name="[ec]"></a>lld_con_sched_patch</STRONG> (Thumb, 1216 bytes, Stack size 56 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lld_con_sched_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_active_check
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_max_lat_calc
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_clear_ccmcnt_tx
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_clear_ccmcnt_rx
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_cleanup
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_req
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[ee]"></a>lld_con_frm_cbk_patch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lld_con_frm_cbk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_frm_cbk_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[f0]"></a>lld_con_evt_start_cbk_patch</STRONG> (Thumb, 1038 bytes, Stack size 72 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lld_con_evt_start_cbk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_instant_proc_end
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_start_patch)
</UL>
<P><STRONG><a name="[687]"></a>lld_con_is_con_evt_end</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[659]"></a>lld_con_evt_end_cleanup</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[65a]"></a>ll_cgc_disable_secu_clk</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[65c]"></a>ll_cgc_enable_secu_clk</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[57b]"></a>hal_exflash_operation_protection</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_exflash_operation_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_protection
</UL>

<P><STRONG><a name="[149]"></a>hal_exflash_write</STRONG> (Thumb, 532 bytes, Stack size 576 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_page_program
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_data_use_present
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_cgc_enable_secu_clk
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_cgc_disable_secu_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>hal_exflash_erase</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_erase_sector
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_erase_chip
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_chip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[612]"></a>exflash_check_id_patch</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = exflash_check_id_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
</UL>

<P><STRONG><a name="[660]"></a>hal_exflash_deepsleep_patch</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_exflash_deepsleep_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[661]"></a>hal_exflash_wakeup_patch</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_exflash_wakeup_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[632]"></a>hal_exflash_suspend</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_interrupt_protection_push
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[634]"></a>hal_exflash_resume</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_exflash_resume &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_interrupt_protection_pop
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[664]"></a>hal_exflash_operation</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>

<P><STRONG><a name="[608]"></a>ll_xqspi_init_patch</STRONG> (Thumb, 652 bytes, Stack size 16 bytes, gr55xx_ll_xqspi_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_disable_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[69c]"></a>ble_core_power_off</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[66b]"></a>ble_core_power_on</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[668]"></a>rwip_clkn_set</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[2e7]"></a>ble_sleep_time_record</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_go_to_deep_sleep
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[18b]"></a>ble_wakup_time_check</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_wakup_time_check &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_clkn_set
</UL>
<BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
</UL>

<P><STRONG><a name="[2e8]"></a>ble_wait_for_core_sleep_stat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[18a]"></a>ble_wait_for_core_wakeup_stat</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
</UL>

<P><STRONG><a name="[2e9]"></a>ble_is_in_sleep_state</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[11b]"></a>ble_sleep_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_sleep_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[11d]"></a>ble_sdk_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_sdk_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_IRQ_Handler_without_stack_init
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[11c]"></a>ble_irq_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_irq_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQ_Handler_without_stack_init
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[616]"></a>rom_cbk_execute</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rom_cbk_execute &rArr; work_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[116]"></a>rom_callback_patch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = rom_callback_patch &rArr; warm_boot_patch &rArr; hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rom_callback_replace)
</UL>
<P><STRONG><a name="[66c]"></a>get_remain_sleep_dur</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_remain_sleep_dur
</UL>
<BR>[Calls]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[66d]"></a>rng2_lp_cali_alarm_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rng2_lp_cali_alarm_start &rArr; lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[66e]"></a>ble_rwip_wakeup_patch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_rwip_wakeup_patch &rArr; ble_wakup_time_check &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_end
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_wakeup_stat
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[119]"></a>BLESLEEP_IRQHandler_patch</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BLESLEEP_IRQHandler_patch &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_wakeup
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_prevent_sleep_set
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_blecore_postsleep_task
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rf_wakeup_init
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_core_reinit
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ke_sleep_check
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_patch.o(i.rwip_sleep_func_replace)
</UL>
<P><STRONG><a name="[674]"></a>ble_sleep_request</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sleep_request
</UL>
<BR>[Calls]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sleep_enter
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_blecore_presleep_task
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rf_api
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_sleep_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_go_to_deep_sleep
</UL>

<P><STRONG><a name="[678]"></a>ble_go_to_deep_sleep</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_go_to_deep_sleep &rArr; ble_sleep_request
</UL>
<BR>[Calls]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
</UL>

<P><STRONG><a name="[67c]"></a>ble_core_sleep_hus_get</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_core_sleep_hus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>

<P><STRONG><a name="[679]"></a>rwip_sleep_duration_get</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = rwip_sleep_duration_get &rArr; ble_core_sleep_hus_get
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sleep_env_get
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_env_get
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_hus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
</UL>

<P><STRONG><a name="[67d]"></a>ble_peform_sleep_successfully</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ble_peform_sleep_successfully &rArr; rwip_sleep_duration_get &rArr; ble_core_sleep_hus_get
</UL>
<BR>[Calls]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sleep_env_get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_go_to_deep_sleep
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
</UL>

<P><STRONG><a name="[67e]"></a>rng2_lp_cali_state_get</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rng2_lp_cali_state_get &rArr; rng2_lp_cali_alarm_start &rArr; lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_ready (via Veneer)
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ble_wakeup (via Veneer)
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
</UL>
<BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
</UL>

<P><STRONG><a name="[681]"></a>ble_is_in_prevent_sleep_state</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_is_in_prevent_sleep_state &rArr; rng2_lp_cali_state_get &rArr; rng2_lp_cali_alarm_start &rArr; lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_get
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
</UL>

<P><STRONG><a name="[683]"></a>ble_stack_is_in_active_state</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_stack_is_in_active_state
</UL>
<BR>[Calls]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ke_sleep_check
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
</UL>

<P><STRONG><a name="[118]"></a>ble_core_sleep_patch</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ble_core_sleep_patch &rArr; ble_peform_sleep_successfully &rArr; rwip_sleep_duration_get &rArr; ble_core_sleep_hus_get
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_is_in_active_state
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_sleep_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_patch.o(i.rwip_sleep_func_replace)
</UL>
<P><STRONG><a name="[5b8]"></a>rf_perform_enhance</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rf_gdx_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init_patch
</UL>

<P><STRONG><a name="[5b7]"></a>rf_timing_cfg</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rf_gdx_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init_patch
</UL>

<P><STRONG><a name="[109]"></a>sys_context_save_func</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_context_save_func &rArr; boot_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_digldo_dcdc_set
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[10a]"></a>sys_context_restore_func</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_context_restore_func &rArr; work_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;force_dpad_le_high
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[620]"></a>system_priority_restore_func</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_priority_restore_func
</UL>
<BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[11f]"></a>sch_arb_event_start_isr_patch</STRONG> (Thumb, 540 bytes, Stack size 64 bytes, sch_arb_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sch_arb_event_start_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_allow_activity_notify
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_prog_timer
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_req
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_convert_cs_idx_to_handle
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_end_cleanup
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_is_con_evt_end
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_arb_patch.o(i.sch_arb_replace)
</UL>
<P><STRONG><a name="[11e]"></a>sch_arb_insert_patch</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sch_arb_patch.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_insert_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_arb_patch.o(i.sch_arb_replace)
</UL>
<P><STRONG><a name="[68a]"></a>rwip_isr_patch</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, rwble_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwip_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_handler
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_isr_handler
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prevent_sleep_get
</UL>
<BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[693]"></a>rwble_isr_patch</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, rwble_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rwble_isr_patch &rArr; rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_iso_hop_accel_isr
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[117]"></a>BLE_IRQHandler_patch</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, rwble_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BLE_IRQHandler_patch &rArr; rwble_isr_patch &rArr; rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwble_patch.o(i.rwble_replace)
</UL>
<P><STRONG><a name="[f3]"></a>lld_init_evt_start_cbk_patch</STRONG> (Thumb, 284 bytes, Stack size 72 bytes, lld_init_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lld_init_evt_start_cbk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_slice_bg_add
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_compute_winoffset
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_init_patch.o(i.lld_init_start_patch)
</UL>
<P><STRONG><a name="[15f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_init
</UL>

<P><STRONG><a name="[6a8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry3.o(.ARM.Collect$$$$00000002))

<P><STRONG><a name="[160]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[183]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6a9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6aa]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6ab]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[6ac]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[6ad]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6ae]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[78]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>DUAL_TIMER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[162]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>

<P><STRONG><a name="[93]"></a>HMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>I2S_M_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>I2S_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>ISO7816_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>PKC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>PMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>PRESENT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>PWR_CMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>SPI_M_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>SPI_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>XQSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[163]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[493]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[2eb]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[1c9]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_common_cli
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mcu_ramcode
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_touch_romboot
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_pressure_test_resp
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_no_pressure_test_resp
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_half_product_test_resp
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_debug_msg
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_push
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_pop
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_model_id_notify
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_hw_version_notify
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_write
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_write_att_cb
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cp_hdr_incr
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[1cc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_params_init
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_register
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_register
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_register
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_register
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_register
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_register
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_register
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_register
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_register
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_register
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_register
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_register
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_register
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_register
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_service_init
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_service_init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_product_sn_notify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_register
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_prop_event_register
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_register
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_seconds2time
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llcp_pdu_handler_tab_replace
</UL>

<P><STRONG><a name="[6af]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[6b0]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6b1]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_raw_base
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[1ad]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_rcv_enc_req_cb
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_db_create
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_db_create
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX_raw
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_db_create
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_disable_preload
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_pressure_test_resp
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_no_pressure_test_resp
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_half_product_test_resp
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_touch_int
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_handler
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_wdt_rst_ack_notify
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_to_sleep_ack_notify
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_voltage_notify
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_touch_version_notify
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_temp_notify
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_set_mmi_flag_notify
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_rst_voltameter_notify
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_value_notify
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_test_notify
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_result_notify
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_notify
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pencil_status_notify
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_mmi_flag_notify
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_value_notify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_calibration_value_notify
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_disable_preload_notify
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_result_notify
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_ack_notify
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_decoding_test_notify
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_dbclick_notify
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_current_notify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_coding_rate_notify
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_charge_coefficient_notify
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_result_notify
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_ack_notify
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_number_notify
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_flag_notify
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_ack_notify
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_product_sn_notify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_model_id_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_hw_version_notify
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fw_version_notify
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fp24_version_notify
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_charge_notify
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_capacity_notify
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_TouchUinformityTest
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_TouchDiffTest
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_RawDataTest
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_CbTest
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_rawdata
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_raw_base
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_cb
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_callback
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_clean
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[6b2]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4aa]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
</UL>

<P><STRONG><a name="[1d1]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_log_notify
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_int_log
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_model_id_notify
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_hw_version_notify
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
</UL>

<P><STRONG><a name="[81]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[6b3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1c7]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ltk_again
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[52e]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_event_handler
</UL>

<P><STRONG><a name="[169]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_event_handler
</UL>

<P><STRONG><a name="[16b]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[16d]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[170]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[171]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[173]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[177]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[178]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[17b]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[17c]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[17d]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ul2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
</UL>

<P><STRONG><a name="[667]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[17e]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[17f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[180]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b4]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[1d0]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_shape_set
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_period_1V_set
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_voltage_set
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_2p2uH
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_1p5uH
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[1bd]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retention_mem_set
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_shape_set
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_period_1V_set
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_voltage_set
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_2p2uH
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_1p5uH
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b5]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[165]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6b6]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6b7]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6b8]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[16c]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[16a]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[a8]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[16f]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[16e]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[176]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[175]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[182]"></a>_drnd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[161]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6b9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>isspace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isspace_c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[181]"></a>__vfscanf</STRONG> (Thumb, 810 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[184]"></a>__ctype_lookup</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[6ba]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6bb]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, platform_gr55xx.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = main &rArr; system_platform_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[9e]"></a>AON_WDT_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_wdt.o(i.AON_WDT_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_irq_handler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[188]"></a>BLESLP_Handler_without_stack_init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.BLESLP_Handler_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BLESLP_Handler_without_stack_init &rArr; ble_wakup_time_check &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_wakeup_stat
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
</UL>

<P><STRONG><a name="[66a]"></a>BLE_IRQ_Handler_without_stack_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.BLE_IRQ_Handler_without_stack_init))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
</UL>

<P><STRONG><a name="[669]"></a>BLE_SDK_IRQ_Handler_without_stack_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.BLE_SDK_IRQ_Handler_without_stack_init))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
</UL>

<P><STRONG><a name="[18c]"></a>Detect_I2C_Address</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, maxeye_mp2662.o(i.Detect_I2C_Address))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Detect_I2C_Address &rArr; MP2662_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_Init
</UL>

<P><STRONG><a name="[18f]"></a>Hw_version_pin_init</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, maxeye_gpio.o(i.Hw_version_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Hw_version_pin_init &rArr; hal_msio_init &rArr; ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pin_init
</UL>

<P><STRONG><a name="[191]"></a>I2cPlatformRead</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, maxeye_ft3308.o(i.I2cPlatformRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read
</UL>

<P><STRONG><a name="[193]"></a>I2cPlatformWrite</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maxeye_ft3308.o(i.I2cPlatformWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = I2cPlatformWrite &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write
</UL>

<P><STRONG><a name="[195]"></a>LIS2DH12TR_MoveIntInit</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, lis2dh12.o(i.LIS2DH12TR_MoveIntInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS2DH12TR_MoveIntInit &rArr; LIS2DH12TR_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_ReadRegister
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_handler
</UL>

<P><STRONG><a name="[196]"></a>LIS2DH12TR_ReadRegister</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lis2dh12.o(i.LIS2DH12TR_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LIS2DH12TR_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_MoveIntInit
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_sensor_xyz_parameter
</UL>

<P><STRONG><a name="[197]"></a>LIS2DH12TR_WriteRegister</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, lis2dh12.o(i.LIS2DH12TR_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LIS2DH12TR_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_write
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_MoveIntInit
</UL>

<P><STRONG><a name="[199]"></a>MP2662_DisableCharge</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_mp2662.o(i.MP2662_DisableCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MP2662_DisableCharge &rArr; MP2662_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[19b]"></a>MP2662_EnableCharge</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_mp2662.o(i.MP2662_EnableCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MP2662_EnableCharge &rArr; MP2662_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[19c]"></a>MP2662_GetEvent</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_mp2662.o(i.MP2662_GetEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MP2662_GetEvent &rArr; MP2662_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_handler
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_aging_test_handler
</UL>

<P><STRONG><a name="[19d]"></a>MP2662_Init</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, maxeye_mp2662.o(i.MP2662_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = MP2662_Init &rArr; Detect_I2C_Address &rArr; MP2662_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_I2C_Address
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
</UL>

<P><STRONG><a name="[19e]"></a>MP2662_SetChargeCurrent</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, maxeye_mp2662.o(i.MP2662_SetChargeCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MP2662_SetChargeCurrent &rArr; MP2662_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_WriteRegister
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_GenerateTerm
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_GenerateCc
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_set_chg_cc_to_target
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[1a1]"></a>MP2662_SetChargeVoltage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_mp2662.o(i.MP2662_SetChargeVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MP2662_SetChargeVoltage &rArr; MP2662_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_SetChargeVoltage
</UL>

<P><STRONG><a name="[1a2]"></a>RA9520_ReadRegister</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_ra9520.o(i.RA9520_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = RA9520_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_chip_type
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_system_interruput
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_prop_data_in
</UL>

<P><STRONG><a name="[1a3]"></a>RA9520_WriteRegister</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_ra9520.o(i.RA9520_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = RA9520_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_write
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_write_prop_data_out
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_send_prop_data
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_interrupt_clear
</UL>

<P><STRONG><a name="[328]"></a>SystemCoreGetClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_gr55xx.o(i.SystemCoreGetClock))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[1a9]"></a>SystemCoreSetClock</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_gr55xx.o(i.SystemCoreSetClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreSetClock
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_update_wkup_param
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[3df]"></a>SystemCoreUpdateClock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, system_gr55xx.o(i.SystemCoreUpdateClock))
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init_ext
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_flag_until_timeout
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_start_transmit
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number
</UL>

<P><STRONG><a name="[a6]"></a>SystemInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, system_gr55xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; sdk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(.text)
</UL>
<P><STRONG><a name="[1ac]"></a>TestItem_CbTest</STRONG> (Thumb, 140 bytes, Stack size 96 bytes, maxeye_ft3308.o(i.TestItem_CbTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = TestItem_CbTest &rArr; fts_get_cb &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_cb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_no_pressure_test
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_product_test
</UL>

<P><STRONG><a name="[1af]"></a>TestItem_RawDataTest</STRONG> (Thumb, 156 bytes, Stack size 96 bytes, maxeye_ft3308.o(i.TestItem_RawDataTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = TestItem_RawDataTest &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_rawdata
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_no_pressure_test
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_product_test
</UL>

<P><STRONG><a name="[1b1]"></a>TestItem_ShortTest</STRONG> (Thumb, 342 bytes, Stack size 136 bytes, maxeye_ft3308.o(i.TestItem_ShortTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = TestItem_ShortTest &rArr; fts_get_raw_base &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write_reg
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_reg
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_raw_base
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_cb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_no_pressure_test
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_product_test
</UL>

<P><STRONG><a name="[1b3]"></a>TestItem_TouchDiffTest</STRONG> (Thumb, 218 bytes, Stack size 96 bytes, maxeye_ft3308.o(i.TestItem_TouchDiffTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = TestItem_TouchDiffTest &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_rawdata
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_pressure_test
</UL>

<P><STRONG><a name="[1b4]"></a>TestItem_TouchUinformityTest</STRONG> (Thumb, 156 bytes, Stack size 96 bytes, maxeye_ft3308.o(i.TestItem_TouchUinformityTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TestItem_TouchUinformityTest
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_pressure_test
</UL>

<P><STRONG><a name="[1b5]"></a>Touch_Recv_nByte</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, maxeye_touch_upgrade.o(i.Touch_Recv_nByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_package_verify
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_firmware_ecc
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_erase_falsh
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_romboot_verify
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;romboot_mode_verify
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset_reboot
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset
</UL>

<P><STRONG><a name="[1b6]"></a>Touch_Send_nByte</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, maxeye_touch_upgrade.o(i.Touch_Send_nByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Touch_Send_nByte &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_touch_romboot
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_write_touch_firmware
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_reset
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_firmware_ecc
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_erase_falsh
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_soft_reset
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;romboot_run
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_romboot_mode
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset_reboot
</UL>

<P><STRONG><a name="[1b7]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6bc]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[2c6]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_handler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_test_start
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
</UL>

<P><STRONG><a name="[6bd]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[6be]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[1b9]"></a>__0snprintf</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6bf]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[206]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[6c0]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[6c1]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[1ba]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6c2]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[1d3]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_register
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_int_log
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_meter_log
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_SetChargeVoltage
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_handler
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_handler
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_start
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_handler
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_sleep
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_handler
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_aging_test_handler
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_sensor_aging_test_handler
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asic_aging_test_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_time1s_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[6c3]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[6c4]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[1bb]"></a>__0vsnprintf</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6c5]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[6c6]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[6c7]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[207]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX_raw
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
</UL>

<P><STRONG><a name="[53e]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc1.o(i.__free$1region))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_debug_msg
</UL>

<P><STRONG><a name="[53d]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc1.o(i.__malloc$1region))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_debug_msg
</UL>

<P><STRONG><a name="[6c8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6c9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[6ca]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1c1]"></a>a_sensor_aging_test_handler</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, maxeye_product_test.o(i.a_sensor_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = a_sensor_aging_test_handler &rArr; get_g_sensor_xyz_parameter &rArr; LIS2DH12TR_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_sensor_xyz_parameter
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[1c3]"></a>adc_conversion</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, platform_adc.o(i.adc_conversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adc_conversion
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_adc_disable_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[1c6]"></a>add_ltk_item</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ble_bondmgr_patch.o(i.add_ltk_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = add_ltk_item &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[3cb]"></a>aon_gpio_read_flag_it_patch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_aon_gpio_patch.o(i.aon_gpio_read_flag_it_patch))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler
</UL>

<P><STRONG><a name="[1cf]"></a>aon_voltage_set</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, platform_sdk.o(i.aon_voltage_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = aon_voltage_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[5e]"></a>app_assert_err_cb</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_assert.o(i.app_assert_err_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = app_assert_err_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[1d5]"></a>app_assert_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_assert.o(i.app_assert_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_assert_cb_register
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[5f]"></a>app_assert_param_cb</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, app_assert.o(i.app_assert_param_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = app_assert_param_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>app_assert_warn_cb</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, app_assert.o(i.app_assert_warn_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = app_assert_warn_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[1d7]"></a>app_connected_handler</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, user_app.o(i.app_connected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = app_connected_handler &rArr; maxeye_pencil_wakeup &rArr; maxeye_stylus_wakeup &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_set
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_cb
</UL>

<P><STRONG><a name="[4af]"></a>app_disc_cmp_evt_replace</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_gapc_hci_patch.o(i.app_disc_cmp_evt_replace))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1de]"></a>app_disconnected_handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, user_app.o(i.app_disconnected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = app_disconnected_handler &rArr; maxeye_ble_adv_start &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_msg_queue_clean
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_disconnect_cb
</UL>

<P><STRONG><a name="[1f0]"></a>app_dma_get_handle</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_dma.o(i.app_dma_get_handle))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_config_dma
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_config_dma
</UL>

<P><STRONG><a name="[1e1]"></a>app_dma_init</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, app_dma.o(i.app_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_config_dma
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_config_dma
</UL>

<P><STRONG><a name="[1cd]"></a>app_error_fault_handler</STRONG> (Thumb, 122 bytes, Stack size 536 bytes, app_error.o(i.app_error_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_params_init
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_register
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_register
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_register
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_register
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_register
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_register
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_register
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_register
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_register
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_register
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_register
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_register
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_register
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_register
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_register
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_prop_event_register
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_register
</UL>

<P><STRONG><a name="[1e8]"></a>app_gpiote_init</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, app_gpiote.o(i.app_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_ext_wakeup
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_int_cfg
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wakeup_ble_pin_cfg
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_cfg
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_meter_int_cfg
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_cfg
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_charge_int_cfg
</UL>

<P><STRONG><a name="[1ed]"></a>app_i2c0_master_init</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, maxeye_i2c0.o(i.app_i2c0_master_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = app_i2c0_master_init &rArr; app_i2c_init &rArr; app_i2c_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[1ee]"></a>app_i2c_init</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, app_i2c.o(i.app_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = app_i2c_init &rArr; app_i2c_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_gpio_config
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_config_dma
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c0_master_init
</UL>

<P><STRONG><a name="[1f5]"></a>app_i2c_mem_read_sync</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, app_i2c.o(i.app_i2c_mem_read_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_read
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>

<P><STRONG><a name="[1f7]"></a>app_i2c_mem_write_sync</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, app_i2c.o(i.app_i2c_mem_write_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_write
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_write
</UL>

<P><STRONG><a name="[1f9]"></a>app_i2c_transmit_sync</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_i2c.o(i.app_i2c_transmit_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_transmit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_master_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_transmit
</UL>

<P><STRONG><a name="[1fc]"></a>app_img_info_erase</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, maxeye_dfu.o(i.app_img_info_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_img_info_erase &rArr; hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_get_security
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[1e9]"></a>app_io_deinit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_io.o(i.app_io_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_deinit &rArr; hal_aon_gpio_deinit &rArr; hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_deinit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>

<P><STRONG><a name="[1ea]"></a>app_io_init</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, app_io.o(i.app_io_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_gpio_config
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_gpio_config
</UL>

<P><STRONG><a name="[1d4]"></a>app_log_flush</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_log.o(i.app_log_flush))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[202]"></a>app_log_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_log.o(i.app_log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_log_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[18e]"></a>app_log_output</STRONG> (Thumb, 382 bytes, Stack size 48 bytes, app_log.o(i.app_log_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_strcpy
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_is_fmt_set
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_idle_connection_parameter_set
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_disconnect_cb
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connection_update_cb
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_cb
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_adv_stop_cb
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_adv_start_cb
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c0_master_init
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_fatfs_init
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_fw_img_info
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_boot_info
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_programing_callback
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_program_start_callback
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_program_end_callback
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_register
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_info_get
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_img_info_erase
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_info_get
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_info_erase
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_img_info_erase
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connection_parameter_set
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_low_power_int_enable
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_register
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_MoveIntInit
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_register
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_handler
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_device_sn
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_discern_ic_addr
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_time1s_event_handler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_alarm_callback
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_I2C_Address
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[209]"></a>app_log_raw_info</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, app_log.o(i.app_log_raw_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX_raw
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
</UL>

<P><STRONG><a name="[20a]"></a>app_paring_succeed_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_app.o(i.app_paring_succeed_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_paring_succeed_handler &rArr; pencil_run_connection_parameter_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_rcv_enc_ind_cb
</UL>

<P><STRONG><a name="[20c]"></a>app_periph_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, user_periph_setup.o(i.app_periph_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = app_periph_init &rArr; bsp_log_init &rArr; bsp_uart_init &rArr; app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_set
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pin_init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_pin_init
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_int_cfg
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wakeup_ble_pin_cfg
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_cfg
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_meter_int_cfg
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_cfg
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_dfu_init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_code_uart_init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_charge_int_cfg
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c0_master_init
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[219]"></a>app_queue_clean</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_queue.o(i.app_queue_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_queue_clean
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_msg_queue_clean
</UL>

<P><STRONG><a name="[4f8]"></a>app_queue_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_queue.o(i.app_queue_init))
<BR><BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_msg_queue_init
</UL>

<P><STRONG><a name="[21c]"></a>app_queue_items_count_get</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, app_queue.o(i.app_queue_items_count_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_queue_items_count_get
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[21d]"></a>app_queue_pop</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, app_queue.o(i.app_queue_pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_queue_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[21e]"></a>app_queue_push</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, app_queue.o(i.app_queue_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_queue_push
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_write_attr_parse
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[1f1]"></a>app_systick_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_systick.o(i.app_systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_systick_init &rArr; pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>

<P><STRONG><a name="[221]"></a>app_timer_create</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_set_var
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_get_valid_node
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_register
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_register
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_register
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_register
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_register
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_wlc_init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_register
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_register
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_register
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_register
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_register
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_register
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_register
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_register
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_register
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_register
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_prop_event_register
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_register
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
</UL>

<P><STRONG><a name="[226]"></a>app_timer_delete</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_timer_delete &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_timer
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_handler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_handler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_handler
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
</UL>

<P><STRONG><a name="[224]"></a>app_timer_get_valid_node</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_get_valid_node))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>

<P><STRONG><a name="[225]"></a>app_timer_set_var</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_set_var))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>

<P><STRONG><a name="[22c]"></a>app_timer_stop</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_get
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_timer
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_start
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_stop
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_start
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_handler
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_start
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_test
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_start
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_start
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_start
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_start
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[c8]"></a>app_uart_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp.o(i.app_uart_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_uart_init)
</UL>
<P><STRONG><a name="[233]"></a>app_uart_flush</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, app_uart.o(i.app_uart_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_uart_flush &rArr; app_systick_init &rArr; pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_items_count_get
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit (via Veneer)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_get_state
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_transmit_it (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_flush
</UL>

<P><STRONG><a name="[239]"></a>app_uart_init</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, app_uart.o(i.app_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq (via Veneer)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_gpio_config
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_config_dma
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_code_uart_init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_init
</UL>

<P><STRONG><a name="[23e]"></a>app_uart_receive_sync</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_uart.o(i.app_uart_receive_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_uart_receive_sync
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_receive (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_cirel_reg
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_cirel_reg
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_reset_cirel
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_common_cli
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_mcu_firmware_version
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_downlink_status
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_decoding_status
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mcu_ramcode
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgraded_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_uart_baudrate_set
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ramcode_run
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_firmware_checksum
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_tp_erase
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_programming
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_check_blank
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_enter_romboot
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_start_decoding_test
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_pressure_cali
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure_cali_result
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_disable_preload
</UL>

<P><STRONG><a name="[242]"></a>app_uart_transmit_async</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_uart.o(i.app_uart_transmit_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_uart_transmit_async &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_write
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_send
</UL>

<P><STRONG><a name="[244]"></a>app_uart_transmit_sync</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_uart.o(i.app_uart_transmit_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_uart_transmit_sync
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_cirel_reg
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_cirel_reg
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_reset_cirel
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_common_cli
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_mcu_firmware_version
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_downlink_status
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_decoding_status
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mcu_ramcode
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgraded_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_uart_baudrate_set
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ramcode_run
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_firmware_checksum
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_tp_erase
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_programming
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_check_blank
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_enter_romboot
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_start_decoding_test
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_pressure_cali
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure_cali_result
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_disable_preload
</UL>

<P><STRONG><a name="[249]"></a>asic_aging_test_handler</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, maxeye_product_test.o(i.asic_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = asic_aging_test_handler &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_cirel_reg
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[24f]"></a>atts_l2cc_pdu_recv_handler_patch</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, atts_patch.o(i.atts_l2cc_pdu_recv_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = atts_l2cc_pdu_recv_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu (via Veneer)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_hdl_value_cfm (via Veneer)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
</UL>

<P><STRONG><a name="[2af]"></a>atts_pdu_handler_table_replace</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, atts_patch.o(i.atts_pdu_handler_table_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[25d]"></a>auto_discern_ic_addr</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, maxeye_cw221x.o(i.auto_discern_ic_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = auto_discern_ic_addr &rArr; cw221x_get_chip_id &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_chip_id
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_init
</UL>

<P><STRONG><a name="[25f]"></a>bas_batt_lvl_update</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bas.o(i.bas_batt_lvl_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bas_batt_lvl_update &rArr; prf_find_handle_by_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_capacity_notify
</UL>

<P><STRONG><a name="[265]"></a>bas_service_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bas.o(i.bas_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bas_service_init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_server_prf_add
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
</UL>

<P><STRONG><a name="[26c]"></a>bat_set_chg_cc_to_target</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, maxeye_battery.o(i.bat_set_chg_cc_to_target))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bat_set_chg_cc_to_target &rArr; MP2662_SetChargeCurrent &rArr; MP2662_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_SetChargeCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_strategy
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_start
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
</UL>

<P><STRONG><a name="[26d]"></a>batt_aging_test_handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, maxeye_product_test.o(i.batt_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = batt_aging_test_handler &rArr; cw_update_data &rArr; cw221x_get_vol &rArr; cw221x_read_word &rArr; cw_read_nbyte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[273]"></a>batt_charge_init_event_register</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, maxeye_battery.o(i.batt_charge_init_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = batt_charge_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_start
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_battery_event_register
</UL>

<P><STRONG><a name="[274]"></a>batt_charge_init_event_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, maxeye_battery.o(i.batt_charge_init_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = batt_charge_init_event_start &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_register
</UL>

<P><STRONG><a name="[271]"></a>batt_charge_int_event_register</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, maxeye_battery.o(i.batt_charge_int_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = batt_charge_int_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_charge_int_enable
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
</UL>

<P><STRONG><a name="[279]"></a>batt_charge_int_event_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_battery.o(i.batt_charge_int_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = batt_charge_int_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_charge_int_callback
</UL>

<P><STRONG><a name="[27a]"></a>batt_meter_aging_test_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, maxeye_product_test.o(i.batt_meter_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = batt_meter_aging_test_handler &rArr; cw221x_profile_verify &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_profile_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[281]"></a>batt_meter_event_register</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, maxeye_battery.o(i.batt_meter_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = batt_meter_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[1dc]"></a>batt_meter_event_start</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, maxeye_battery.o(i.batt_meter_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = batt_meter_event_start &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_start
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_register
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_meter_int_callback
</UL>

<P><STRONG><a name="[282]"></a>batt_meter_event_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_battery.o(i.batt_meter_event_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = batt_meter_event_stop &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[272]"></a>batt_meter_init_event_register</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, maxeye_battery.o(i.batt_meter_init_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = batt_meter_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_start
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
</UL>

<P><STRONG><a name="[28a]"></a>batt_meter_init_event_start</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, maxeye_battery.o(i.batt_meter_init_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = batt_meter_init_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
</UL>

<P><STRONG><a name="[28b]"></a>battery_SetChargeVoltage</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, maxeye_battery.o(i.battery_SetChargeVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = battery_SetChargeVoltage &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_SetChargeVoltage
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_strategy
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[28c]"></a>battery_charge_start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, maxeye_battery.o(i.battery_charge_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = battery_charge_start &rArr; srvc2_battery_charge_notify &rArr; maxeye_srvc2_char3_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_charge_notify
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_set_chg_cc_to_target
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[27e]"></a>battery_charging_strategy</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, maxeye_battery.o(i.battery_charging_strategy))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = battery_charging_strategy &rArr; battery_SetChargeVoltage &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_SetChargeVoltage
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_set_chg_cc_to_target
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_refresh_battery_paramenter
</UL>

<P><STRONG><a name="[277]"></a>battery_discharge</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, maxeye_battery.o(i.battery_discharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = battery_discharge &rArr; srvc2_log_notify &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_write_prop_data_out
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_send_prop_data
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_log_notify
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_charge_notify
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_DisableCharge
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_set_chg_cc_to_target
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_strategy
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[27d]"></a>battery_meter_log</STRONG> (Thumb, 44 bytes, Stack size 112 bytes, maxeye_battery.o(i.battery_meter_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = battery_meter_log &rArr; srvc2_log_notify &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_log_notify
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
</UL>

<P><STRONG><a name="[122]"></a>bb_watch_timer_cbk_patch</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, sch_prog_patch.o(i.bb_watch_timer_cbk_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bb_watch_timer_cbk_patch &rArr; rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_abort_recovery
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
</UL>
<P><STRONG><a name="[295]"></a>ble_adv_env_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cold_patch.o(i.ble_adv_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_adv_env_init
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_replace
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[4c7]"></a>ble_aging_test_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_product_test.o(i.ble_aging_test_handler))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[14b]"></a>ble_bm_set_sec_info_patch</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, ble_bondmgr_patch.o(i.ble_bm_set_sec_info_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = ble_bm_set_sec_info_patch &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_lru_bond_list
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_unused_bond_idx
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_peer_addr
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[29d]"></a>ble_common_env_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cold_patch.o(i.ble_common_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_common_env_init &rArr; ble_sdk_env_init &rArr; ble_con_env_init &rArr; llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gapm_replace
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sdk_replace
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_frm_cbk_replace
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_replace
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_func_replace
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_replace
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_gdx_replace
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2a7]"></a>ble_communication_core_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.ble_communication_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_communication_core_init_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
</UL>

<P><STRONG><a name="[2a9]"></a>ble_con_env_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cold_patch.o(i.ble_con_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_con_env_init &rArr; llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_replace
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llcp_pdu_handler_tab_replace
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_replace
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_prf_msg_handler_tab_replace
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_replace
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_encrypt_replace
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_replace
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_pdu_handler_table_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[2b3]"></a>ble_connection_parameter_set</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, maxeye_ble.o(i.ble_connection_parameter_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_connection_parameter_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[2b5]"></a>ble_core_init_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.ble_core_init_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ble_heartbeat_period_set
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_without_stack_init_replace
</UL>

<P><STRONG><a name="[2d4]"></a>ble_gatt_mtu_exch_allow</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_sdk_gatt_task_patch.o(i.ble_gatt_mtu_exch_allow))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>

<P><STRONG><a name="[2b7]"></a>ble_gatt_mtu_get</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gatt_mtu_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gatt_mtu_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_get_rom
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[2ba]"></a>ble_gattc_indicate_cfm</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_indicate_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gattc_indicate_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm_rom
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
</UL>

<P><STRONG><a name="[1da]"></a>ble_gattc_mtu_exchange</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_mtu_exchange))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gattc_mtu_exchange
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange_rom
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
</UL>

<P><STRONG><a name="[261]"></a>ble_gatts_noti_ind</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gatts_noti_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gatts_noti_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind_rom
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_char1_notify
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char3_notify
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char2_notify
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char1_notify
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_batt_lvl_update
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_notify_tx_data
</UL>

<P><STRONG><a name="[267]"></a>ble_gatts_read_cfm</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gatts_read_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gatts_read_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm_rom
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_read_att_cb
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_read_att_cb
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_read_att_cb
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_read_att_cb
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_read_att_cb
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_read_att_cb
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_read_att_cb
</UL>

<P><STRONG><a name="[26a]"></a>ble_gatts_write_cfm</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gatts_write_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gatts_write_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm_rom
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_write_att_cb
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_write_att_cb
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_write_att_cb
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_write_att_cb
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_write_att_cb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_write_att_cb
</UL>

<P><STRONG><a name="[2c3]"></a>ble_idle_event_register</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, maxeye_sleep.o(i.ble_idle_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = ble_idle_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_idle_event_register
</UL>

<P><STRONG><a name="[1dd]"></a>ble_idle_event_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, maxeye_sleep.o(i.ble_idle_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_idle_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_program_start_callback
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_register
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_start
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_start
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[0]"></a>ble_init_cmp_callback</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, user_app.o(i.ble_init_cmp_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = ble_init_cmp_callback &rArr; services_init &rArr; public_service_init &rArr; dis_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_data_generate
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sdk_verison_get
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_get
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_params_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[2ca]"></a>ble_is_prevent_sleep_without_stack_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.ble_is_prevent_sleep_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_is_prevent_sleep_without_stack_init &rArr; platform_rng2_calibration_is_busy
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[ba]"></a>ble_nvds_del</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.ble_nvds_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_nvds_del
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[b9]"></a>ble_nvds_put</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.ble_nvds_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = ble_nvds_put &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[2e2]"></a>ble_nvds_set_entry</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.ble_nvds_set_entry))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[2cc]"></a>ble_scan_env_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cold_patch.o(i.ble_scan_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_scan_env_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_replace
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_replace
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_replace
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[2a6]"></a>ble_sdk_env_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, platform_gr55xx.o(i.ble_sdk_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_sdk_env_init &rArr; ble_con_env_init &rArr; llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_msg_patch_tab
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_hci_cmd_patch_tab
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_gapm_hci_evt_patch_tab
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_env_init
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[2a5]"></a>ble_sdk_gapm_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[39]"></a>ble_sdk_gatt_mtu_changed_ind_handler_patch</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gatt_mtu_changed_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_exch_allow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>ble_sdk_gattc_event_ind_handler_patch</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gattc_event_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_sdk_gattc_event_ind_handler_patch &rArr; ble_gattc_indicate_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>ble_sdk_gatts_svc_changed_cfg_ind_handler_patch</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gatts_svc_changed_cfg_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_sdk_gatts_svc_changed_cfg_ind_handler_patch &rArr; sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_get_bond_dev_addr
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_bond_cccd
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattm_svc_start_hdl_get
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_gatt_info
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[bd]"></a>ble_sdk_init_patch</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ble_sdk_patch.o(i.ble_sdk_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ble_sdk_init_patch &rArr; rand_seed_gen &rArr; rng_rand_get &rArr; hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_init_func
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_patch.o(i.ble_sdk_replace)
</UL>
<P><STRONG><a name="[2a3]"></a>ble_sdk_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_sdk_patch.o(i.ble_sdk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[2df]"></a>ble_sdk_rwip_init</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, system_sdk_patch.o(i.ble_sdk_rwip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_sdk_rwip_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_set_heaps_table_entry
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_rwip_init
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rf_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_get_nvds_api_entry
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_set_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2e6]"></a>ble_sleep_successfully_without_stack_init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rwip_sleep_common.o(i.ble_sleep_successfully_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_sleep_successfully_without_stack_init &rArr; ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_sleep_stat
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[11a]"></a>ble_sleep_without_stack_init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rwip_sleep_common.o(i.ble_sleep_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_sleep_without_stack_init &rArr; ble_sleep_successfully_without_stack_init &rArr; ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_prevent_sleep_without_stack_init
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_sleep_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[2ea]"></a>ble_stack_init</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, system_sdk_patch.o(i.ble_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_stack_init &rArr; ble_sdk_rwip_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_wakeup_end
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_us_2_lpcycles
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_config_coded_tx_gain_value
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_config_2M_tx_gain_value
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_config_1M_tx_gain_value
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_callback_register
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_schedule_start
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rom_prf_init
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_callback_register
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_common_callback_register
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_callback_register
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_wakeup
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rf_calibration_func_cb_register
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback_register
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_signal_handler_register
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[57e]"></a>ble_wakeup_osc_time_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, platform_sdk.o(i.ble_wakeup_osc_time_get))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[57f]"></a>ble_wakeup_osc_time_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, platform_sdk.o(i.ble_wakeup_osc_time_set))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[2fb]"></a>boot_info_erase</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, maxeye_dfu.o(i.boot_info_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = boot_info_erase &rArr; hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_get_security
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[2fc]"></a>bootloader_info_get</STRONG> (Thumb, 250 bytes, Stack size 120 bytes, maxeye_dfu.o(i.bootloader_info_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bootloader_info_get &rArr; log_fw_img_info &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_fw_img_info
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_boot_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[20d]"></a>bsp_log_init</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, bsp.o(i.bsp_log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = bsp_log_init &rArr; bsp_uart_init &rArr; app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[c6]"></a>bsp_uart_flush</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(i.bsp_uart_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_uart_flush &rArr; app_uart_flush &rArr; app_systick_init &rArr; pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_log_init)
</UL>
<P><STRONG><a name="[2ff]"></a>bsp_uart_init</STRONG> (Thumb, 88 bytes, Stack size 96 bytes, bsp.o(i.bsp_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = bsp_uart_init &rArr; app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[c7]"></a>bsp_uart_send</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp.o(i.bsp_uart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_uart_send &rArr; app_uart_transmit_async &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_async
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_log_init)
</UL>
<P><STRONG><a name="[303]"></a>calendar_irq_handler</STRONG> (Thumb, 570 bytes, Stack size 56 bytes, gr55xx_hal_calendar_patch.o(i.calendar_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = calendar_irq_handler &rArr; hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_overflow_callback
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_tick_callback
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_alarm_callback
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_reload_alarm
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_counter
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_alarm
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_get_timer_value
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_time2seconds
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_seconds2time
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CALENDAR_IRQHandler
</UL>

<P><STRONG><a name="[30b]"></a>charge_aging_test_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, maxeye_product_test.o(i.charge_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = charge_aging_test_handler &rArr; MP2662_GetEvent &rArr; MP2662_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_GetEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[53a]"></a>checksum_algo</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, maxeye_touch_cli.o(i.checksum_algo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checksum_algo
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[313]"></a>cirel_pin_init</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, maxeye_gpio.o(i.cirel_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cirel_pin_init &rArr; hal_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pin_init
</UL>

<P><STRONG><a name="[316]"></a>clk_period_1V_set</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, platform_sdk.o(i.clk_period_1V_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clk_period_1V_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[fe]"></a>code_uart_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, maxeye_uart.o(i.code_uart_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> maxeye_uart.o(i.maxeye_code_uart_init)
</UL>
<P><STRONG><a name="[317]"></a>cold_patch_apply</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cold_patch.o(i.cold_patch_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cold_patch_apply &rArr; rwip_sleep_without_stack_init_replace &rArr; ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_replace
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_without_stack_init_replace
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_callback_replace
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_cmd_handler_replace
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_conf_correction
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[46b]"></a>compute_pref_period</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, llc_con_upd_patch.o(i.compute_pref_period))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[10c]"></a>cpll_calibration</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_sdk.o(i.cpll_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = cpll_calibration &rArr; cpll_lock_check_recover &rArr; cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_set_recalibration_flag
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[324]"></a>cpll_calibration_init</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, platform_sdk.o(i.cpll_calibration_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = cpll_calibration_init &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[323]"></a>cpll_lock_check_recover</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, platform_sdk.o(i.cpll_lock_check_recover))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = cpll_lock_check_recover &rArr; cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_get_recalibration_flag
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration
</UL>

<P><STRONG><a name="[329]"></a>current_shape_set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, platform_sdk.o(i.current_shape_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = current_shape_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[27c]"></a>cw2215_read_byte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_cw221x.o(i.cw2215_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cw2215_read_byte &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_low_power_int_enable
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
</UL>

<P><STRONG><a name="[32b]"></a>cw2215_write_byte</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw2215_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cw2215_write_byte &rArr; cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_write
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_low_power_int_enable
</UL>

<P><STRONG><a name="[32d]"></a>cw221x_active</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, maxeye_cw221x.o(i.cw221x_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = cw221x_active &rArr; cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_config_start_ic
</UL>

<P><STRONG><a name="[331]"></a>cw221x_get_capacity</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_get_capacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = cw221x_get_capacity &rArr; cw221x_read_word &rArr; cw_read_nbyte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_read_word
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
</UL>

<P><STRONG><a name="[25e]"></a>cw221x_get_chip_id</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_get_chip_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cw221x_get_chip_id &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_discern_ic_addr
</UL>

<P><STRONG><a name="[333]"></a>cw221x_get_current</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_get_current))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = cw221x_get_current &rArr; cw221x_read_word &rArr; cw_read_nbyte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_complement_code
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_read_word
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
</UL>

<P><STRONG><a name="[336]"></a>cw221x_get_temp</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_get_temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cw221x_get_temp &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
</UL>

<P><STRONG><a name="[337]"></a>cw221x_get_vol</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_get_vol))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = cw221x_get_vol &rArr; cw221x_read_word &rArr; cw_read_nbyte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_read_word
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
</UL>

<P><STRONG><a name="[283]"></a>cw221x_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, maxeye_cw221x.o(i.cw221x_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = cw221x_init &rArr; cw221x_config_start_ic &rArr; cw221x_sleep &rArr; cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_discern_ic_addr
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_state
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_config_start_ic
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[27b]"></a>cw221x_profile_verify</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_profile_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cw221x_profile_verify &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_state
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_config_start_ic
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_aging_test_handler
</UL>

<P><STRONG><a name="[332]"></a>cw221x_read_word</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, maxeye_cw221x.o(i.cw221x_read_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = cw221x_read_word &rArr; cw_read_nbyte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read_nbyte
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_vol
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_current
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_capacity
</UL>

<P><STRONG><a name="[32f]"></a>cw221x_sleep</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, maxeye_cw221x.o(i.cw221x_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = cw221x_sleep &rArr; cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_write
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_config_start_ic
</UL>

<P><STRONG><a name="[32a]"></a>cw_read</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_cw221x.o(i.cw_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_init_status
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw2215_read_byte
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_temp
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_chip_id
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_state
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_profile_verify
</UL>

<P><STRONG><a name="[338]"></a>cw_read_nbyte</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_cw221x.o(i.cw_read_nbyte))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cw_read_nbyte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_read_word
</UL>

<P><STRONG><a name="[26e]"></a>cw_update_data</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, maxeye_cw221x.o(i.cw_update_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = cw_update_data &rArr; cw221x_get_vol &rArr; cw221x_read_word &rArr; cw_read_nbyte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_vol
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_temp
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_current
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_capacity
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_refresh_battery_paramenter
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_capacity_notify
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_aging_test_handler
</UL>

<P><STRONG><a name="[32c]"></a>cw_write</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_cw221x.o(i.cw_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_write
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw2215_write_byte
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_sleep
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_write_profile
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_config_start_ic
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_active
</UL>

<P><STRONG><a name="[31b]"></a>dfu_cmd_handler_replace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace))
<BR><BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_set_cmd_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[33c]"></a>dfu_img_info_erase</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, maxeye_dfu.o(i.dfu_img_info_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = dfu_img_info_erase &rArr; hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_get_security
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[33d]"></a>dfu_port_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dfu_port.o(i.dfu_port_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dfu_port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_set_cmd_handler
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_init
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_dfu_init
</UL>

<P><STRONG><a name="[33f]"></a>dfu_service_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dfu_port.o(i.dfu_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dfu_service_init
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_service_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_dfu_service_init
</UL>

<P><STRONG><a name="[342]"></a>dis_service_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dis.o(i.dis_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dis_service_init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_server_prf_add
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
</UL>

<P><STRONG><a name="[351]"></a>disk_initialize</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[352]"></a>disk_ioctl</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[564]"></a>disk_read</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[364]"></a>disk_status</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[357]"></a>disk_write</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
</UL>

<P><STRONG><a name="[b0]"></a>dma_err_callback</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_dma.o(i.dma_err_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_err_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(i.app_dma_init)
</UL>
<P><STRONG><a name="[af]"></a>dma_tfr_callback</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_dma.o(i.dma_tfr_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_tfr_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(i.app_dma_init)
</UL>
<P><STRONG><a name="[345]"></a>enter_romboot_mode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, maxeye_touch_upgrade.o(i.enter_romboot_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = enter_romboot_mode &rArr; Touch_Send_nByte &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[348]"></a>ext_hp_gain_calibration</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, rf_gdx_patch.o(i.ext_hp_gain_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ext_hp_gain_calibration &rArr; round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_lp_gain_offset_2m_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sx_frequence
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_disable
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_F_value_patch
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[34f]"></a>f_mkfs</STRONG> (Thumb, 1422 bytes, Stack size 96 bytes, ff.o(i.f_mkfs))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = f_mkfs &rArr; get_ldnumber
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_fatfs_init
</UL>

<P><STRONG><a name="[358]"></a>f_mount</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_fatfs_init
</UL>

<P><STRONG><a name="[35b]"></a>fatfs_flash_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fatfs_flash_drv.o(i.fatfs_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fatfs_flash_init &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_initialize
</UL>

<P><STRONG><a name="[35d]"></a>fatfs_flash_read</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fatfs_flash_drv.o(i.fatfs_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fatfs_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>

<P><STRONG><a name="[35e]"></a>fatfs_flash_write</STRONG> (Thumb, 220 bytes, Stack size 4144 bytes, fatfs_flash_drv.o(i.fatfs_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4800<LI>Call Chain = fatfs_flash_write &rArr; hal_flash_write &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[35f]"></a>fatfs_init_driver</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ff_gen_drv.o(i.fatfs_init_driver))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fatfs_init_driver &rArr; fatfs_init_driver_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_init_driver_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_fatfs_init
</UL>

<P><STRONG><a name="[360]"></a>fatfs_init_driver_ex</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, ff_gen_drv.o(i.fatfs_init_driver_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fatfs_init_driver_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_init_driver
</UL>

<P><STRONG><a name="[430]"></a>find_new_msg_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ke_task_patch.o(i.find_new_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_msg_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_to_sdk_msg_handler_patch
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
</UL>

<P><STRONG><a name="[366]"></a>finish_encryt_check_by_llcp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, llc_encrypt_patch.o(i.finish_encryt_check_by_llcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = finish_encryt_check_by_llcp &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[18]"></a>flash_initialize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_diskio.o(i.flash_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_initialize &rArr; fatfs_flash_init &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flash_diskio.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>flash_ioctl</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, flash_diskio.o(i.flash_ioctl))
<BR>[Address Reference Count : 1]<UL><LI> flash_diskio.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>flash_read</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, flash_diskio.o(i.flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_read &rArr; fatfs_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flash_diskio.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>flash_status</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash_diskio.o(i.flash_status))
<BR>[Address Reference Count : 1]<UL><LI> flash_diskio.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>flash_write</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, flash_diskio.o(i.flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4816<LI>Call Chain = flash_write &rArr; fatfs_flash_write &rArr; hal_flash_write &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flash_diskio.o(.data)
</UL>
<P><STRONG><a name="[369]"></a>fpb_enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, platform_patch.o(i.fpb_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fpb_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch_enable
</UL>

<P><STRONG><a name="[108]"></a>fpb_patch_enable</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, fpb_patch_init.o(i.fpb_patch_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fpb_patch_enable &rArr; fun_replace_by_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(i.platform_init)
</UL>
<P><STRONG><a name="[ac]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, app_log.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[5e7]"></a>fts_ecc_xor8_host</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, maxeye_touch_upgrade.o(i.fts_ecc_xor8_host))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fts_ecc_xor8_host
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[368]"></a>fun_replace_by_svc</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, platform_patch.o(i.fun_replace_by_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fun_replace_by_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_svc_cmd
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ori_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch_enable
</UL>

<P><STRONG><a name="[36f]"></a>fw_ecc_xor8_host</STRONG> (Thumb, 62 bytes, Stack size 152 bytes, maxeye_touch_upgrade.o(i.fw_ecc_xor8_host))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = fw_ecc_xor8_host &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[372]"></a>g_sensor_init_event_register</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, maxeye_sensor.o(i.g_sensor_init_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = g_sensor_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_sensor_event_register
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
</UL>

<P><STRONG><a name="[270]"></a>g_sensor_init_event_start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, maxeye_sensor.o(i.g_sensor_init_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = g_sensor_init_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
</UL>

<P><STRONG><a name="[370]"></a>g_sensor_int_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_sensor.o(i.g_sensor_int_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = g_sensor_int_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_handler
</UL>

<P><STRONG><a name="[376]"></a>g_sensor_int_event_start</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, maxeye_sensor.o(i.g_sensor_int_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = g_sensor_int_event_start &rArr; maxeye_ble_int_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_int_log
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_mcu_int_callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
</UL>

<P><STRONG><a name="[371]"></a>g_sensor_int_rep_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_sensor.o(i.g_sensor_int_rep_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = g_sensor_int_rep_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_handler
</UL>

<P><STRONG><a name="[373]"></a>g_sensor_int_rep_event_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, maxeye_sensor.o(i.g_sensor_int_rep_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = g_sensor_int_rep_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
</UL>

<P><STRONG><a name="[1e]"></a>gap_activity_stopped_ind_handler_patch</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, ble_sdk_gapm_patch.o(i.gap_activity_stopped_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gap_activity_stopped_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_per_sync_idx_by_actv_idx
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_adv_idx_by_actv_idx
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>gap_cmp_evt_handler_patch</STRONG> (Thumb, 384 bytes, Stack size 48 bytes, ble_sdk_gapc_patch.o(i.gap_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gap_cmp_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_get
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>gap_connection_req_ind_handler_patch</STRONG> (Thumb, 302 bytes, Stack size 592 bytes, ble_sdk_gapc_patch.o(i.gap_connection_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = gap_connection_req_ind_handler_patch &rArr; gatt_on_connection_func_patch &rArr; gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_on_conn_complete
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_reslv_addr
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_ral_dev_list
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gapc_role_get
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>gap_dev_bdaddr_ind_handler_patch</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ble_sdk_gapm_patch.o(i.gap_dev_bdaddr_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_dev_bdaddr_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_actv_type_by_actv_idx
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_save
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_per_sync_idx_by_actv_idx
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_adv_idx_by_actv_idx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_malloc
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>gap_disconnect_ind_handler_patch</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ble_sdk_gapc_patch.o(i.gap_disconnect_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_disconnect_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_clear_bond_info_env
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_on_disconn
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>gapc_hci_handler_patch</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gapc_hci_patch.o(i.gapc_hci_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapc_hci_handler_patch &rArr; hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>gapm_activity_create_cmd_handler_patch</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gapm_actv_patch.o(i.gapm_activity_create_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_activity_create_cmd_handler_patch &rArr; gapm_init_create_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create (via Veneer)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op (via Veneer)
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_create (via Veneer)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create (via Veneer)
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_free_idx (via Veneer)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_check_create_param (via Veneer)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[cf]"></a>gapm_adv_check_param_func_patch</STRONG> (Thumb, 364 bytes, Stack size 16 bytes, gapm_adv_patch.o(i.gapm_adv_check_param_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_check_param_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_adv_patch.o(i.gapm_adv_replace)
</UL>
<P><STRONG><a name="[297]"></a>gapm_adv_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm_adv_patch.o(i.gapm_adv_replace))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_env_init
</UL>

<P><STRONG><a name="[1d]"></a>gapm_cmp_evt_handler_patch</STRONG> (Thumb, 264 bytes, Stack size 200 bytes, ble_sdk_gapm_patch.o(i.gapm_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gapm_cmp_evt_handler_patch &rArr; gatt_on_connection_func_patch &rArr; gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_update_bond_info
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info_by_peer_irk
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_hdl
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle (via Veneer)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_get
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>gapm_hci_handler_patch</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gapm_task_patch.o(i.gapm_hci_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_hci_handler_patch &rArr; find_new_gapm_hci_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_gapm_hci_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[d3]"></a>gapm_init_connection_ind_func_patch</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, gapm_init_patch.o(i.gapm_init_connection_ind_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_init_connection_ind_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stopped (via Veneer)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd (via Veneer)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type (via Veneer)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_local_addr (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_replace)
</UL>
<P><STRONG><a name="[39f]"></a>gapm_init_create_patch</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gapm_init_patch.o(i.gapm_init_create_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_init_create_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_addr_type_valid (via Veneer)
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester (via Veneer)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created (via Veneer)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[2d0]"></a>gapm_init_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm_init_patch.o(i.gapm_init_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[d0]"></a>gapm_init_start_patch</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, gapm_init_patch.o(i.gapm_init_start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_init_start_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd (via Veneer)
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_check_param (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[d1]"></a>gapm_init_stop_patch</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gapm_init_patch.o(i.gapm_init_stop_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_init_stop_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_create_con_cancel_cmd (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[2d8]"></a>gatt_find_item_patch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ble_sdk_gatts_patch.o(i.gatt_find_item_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_find_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[37f]"></a>gatt_on_connection_func_patch</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, ble_sdk_gatts_patch.o(i.gatt_on_connection_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_on_connection_func_patch &rArr; gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_on_connection
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_recovery_cccd
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_gatt_info
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[d4]"></a>gatt_on_disconnection_func_patch</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_sdk_gatts_patch.o(i.gatt_on_disconnection_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_on_disconnection_func_patch &rArr; sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_on_disconnection
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_gatt_info
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_gatts_patch.o(i.gatt_on_disconnection_replace)
</UL>
<P><STRONG><a name="[2b0]"></a>gatt_on_disconnection_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_sdk_gatts_patch.o(i.gatt_on_disconnection_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[287]"></a>get_battery_init_status</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, maxeye_cw221x.o(i.get_battery_init_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = get_battery_init_status &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[334]"></a>get_complement_code</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, maxeye_cw221x.o(i.get_complement_code))
<BR><BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_get_current
</UL>

<P><STRONG><a name="[3bd]"></a>get_data_from_adc</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, platform_adc.o(i.get_data_from_adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = get_data_from_adc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[1c2]"></a>get_g_sensor_xyz_parameter</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, maxeye_sensor.o(i.get_g_sensor_xyz_parameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = get_g_sensor_xyz_parameter &rArr; LIS2DH12TR_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_value_notify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_calibration_value_notify
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_sensor_aging_test_handler
</UL>

<P><STRONG><a name="[554]"></a>get_mcu_sum_check</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, maxeye_mcu_upgrade.o(i.get_mcu_sum_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_mcu_sum_check
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mcu_ramcode
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgraded_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_uart_baudrate_set
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_firmware_checksum
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_tp_erase
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_programming
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_check_blank
</UL>

<P><STRONG><a name="[228]"></a>get_next_timer</STRONG> (Thumb, 136 bytes, Stack size 36 bytes, app_timer.o(i.get_next_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = get_next_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[3c1]"></a>get_touch_int</STRONG> (Thumb, 88 bytes, Stack size 112 bytes, maxeye_touch.o(i.get_touch_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = get_touch_int &rArr; srvc2_double_click_notify &rArr; srvc1_rep_dbclick_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_debug_msg
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_double_click_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_handler
</UL>

<P><STRONG><a name="[4d9]"></a>get_xorcheck</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, maxeye_ble_cli.o(i.get_xorcheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_xorcheck
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_cirel_reg
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_cirel_reg
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_reset_cirel
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_common_cli
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_mcu_firmware_version
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_downlink_status
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_decoding_status
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_start_decoding_test
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_pressure_cali
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure_cali_result
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_disable_preload
</UL>

<P><STRONG><a name="[593]"></a>hal_adc_is_using</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, platform_sdk.o(i.hal_adc_is_using))
<BR><BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[46]"></a>hal_aon_gpio_callback</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, app_gpiote.o(i.hal_aon_gpio_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_aon_gpio_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_get_wakeup_flag
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_aon_gpio.o(.data)
</UL>
<P><STRONG><a name="[1fe]"></a>hal_aon_gpio_deinit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio.o(i.hal_aon_gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_aon_gpio_deinit &rArr; hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[3c5]"></a>hal_aon_gpio_deinit_ext</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit
</UL>

<P><STRONG><a name="[201]"></a>hal_aon_gpio_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_aon_gpio.o(i.hal_aon_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_register_callback (via Veneer)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[3c8]"></a>hal_aon_gpio_init_ext</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init
</UL>

<P><STRONG><a name="[3ca]"></a>hal_aon_gpio_irq_handler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_aon_gpio_irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_br_callback (via Veneer)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_gpio_read_flag_it_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT2_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>hal_aon_wdt_alarm_callback</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, maxeye_wdt.o(i.hal_aon_wdt_alarm_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_aon_wdt_alarm_callback &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_aon_wdt.o(.data)
</UL>
<P><STRONG><a name="[3cd]"></a>hal_aon_wdt_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_aon_wdt.o(i.hal_aon_wdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_aon_wdt_init &rArr; hal_aon_wdt_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_register_callback (via Veneer)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aon_wdt_init
</UL>

<P><STRONG><a name="[3cf]"></a>hal_aon_wdt_init_ext</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, gr55xx_hal_aon_wdt_patch.o(i.hal_aon_wdt_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_aon_wdt_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init
</UL>

<P><STRONG><a name="[4d5]"></a>hal_aon_wdt_refresh</STRONG> (Thumb, 184 bytes, Stack size 28 bytes, gr55xx_hal_aon_wdt_patch.o(i.hal_aon_wdt_refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_aon_wdt_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_refresh
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aon_wdt_init
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_test
</UL>

<P><STRONG><a name="[308]"></a>hal_calendar_alarm_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_rtc.o(i.hal_calendar_alarm_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_calendar_alarm_callback &rArr; app_rtc_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_rtc_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[304]"></a>hal_calendar_get_time</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, gr55xx_hal_calendar_patch.o(i.hal_calendar_get_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_wrapcnt
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_get_timer_value
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_time2seconds
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_seconds2time
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[30a]"></a>hal_calendar_overflow_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_calendar.o(i.hal_calendar_overflow_callback))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[309]"></a>hal_calendar_tick_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_rtc.o(i.hal_calendar_tick_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_calendar_tick_callback &rArr; app_rtc_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_rtc_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[1e5]"></a>hal_dma_init</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, gr55xx_hal_dma_patch.o(i.hal_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_struct_init (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
</UL>

<P><STRONG><a name="[1a7]"></a>hal_dwt_disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gr55xx_hal_patch.o(i.hal_dwt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_info_get
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_info_get
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ramcode_run
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_enter_romboot
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_wakeup_int_set
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_control
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_package_verify
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_firmware_ecc
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_erase_falsh
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_soft_reset
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_romboot_verify
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;romboot_mode_verify
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset_reboot
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_reset
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_sleep
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_active
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_work_mode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_factory_mode
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[1a6]"></a>hal_dwt_enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gr55xx_hal_patch.o(i.hal_dwt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dwt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_info_get
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_info_get
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ramcode_run
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_enter_romboot
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_wakeup_int_set
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_control
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_package_verify
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_firmware_ecc
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_erase_falsh
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_soft_reset
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_romboot_verify
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;romboot_mode_verify
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset_reboot
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_reset
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_sleep
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_active
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_work_mode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_factory_mode
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[5d8]"></a>hal_efuse_deinit_ext</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gr55xx_hal_efuse_patch.o(i.hal_efuse_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_efuse_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[5d9]"></a>hal_efuse_init_ext</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, gr55xx_hal_efuse_patch.o(i.hal_efuse_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_efuse_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[64]"></a>hal_flash_erase</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_img_info_erase
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_info_erase
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_img_info_erase
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>hal_flash_erase_chip</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_erase_chip))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_flash_erase_chip &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[35c]"></a>hal_flash_init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hal_flash_patch.o(i.hal_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_init_ext (via Veneer)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreGetClock
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_init
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[62]"></a>hal_flash_read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_info_get
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_info_get
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_programming
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_write_touch_firmware
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fw_ecc_xor8_host
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_write
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_read
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>hal_flash_write</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = hal_flash_write &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_flash_write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_end_replace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[33a]"></a>hal_flash_write_r</STRONG> (Thumb, 110 bytes, Stack size 288 bytes, hal_flash_patch.o(i.hal_flash_write_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
</UL>

<P><STRONG><a name="[1fd]"></a>hal_gpio_deinit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gr55xx_hal_gpio.o(i.hal_gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_callback (via Veneer)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[45]"></a>hal_gpio_exti_callback</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, app_gpiote.o(i.hal_gpio_exti_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_gpio_exti_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_gpio.o(.data)
</UL>
<P><STRONG><a name="[200]"></a>hal_gpio_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gr55xx_hal_gpio.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_callback (via Veneer)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_pin_init
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_pin_init
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_pin_init
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_pin_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirel_pin_init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[59]"></a>hal_i2c_abort_cplt_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_i2c.o(i.hal_i2c_abort_cplt_callback))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[1f3]"></a>hal_i2c_deinit</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_i2c.o(i.hal_i2c_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_i2c_deinit &rArr; hal_i2c_deinit_ext &rArr; ll_i2c_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_register_callback (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
</UL>

<P><STRONG><a name="[3db]"></a>hal_i2c_deinit_ext</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_deinit_ext &rArr; ll_i2c_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_msp_deinit
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit
</UL>

<P><STRONG><a name="[58]"></a>hal_i2c_error_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_i2c.o(i.hal_i2c_error_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[43d]"></a>hal_i2c_get_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_get_state))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_prepare_for_sleep
</UL>

<P><STRONG><a name="[1f4]"></a>hal_i2c_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_i2c.o(i.hal_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_i2c_init &rArr; hal_i2c_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_register_callback (via Veneer)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
</UL>

<P><STRONG><a name="[3de]"></a>hal_i2c_init_ext</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreUpdateClock
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_msp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
</UL>

<P><STRONG><a name="[3e0]"></a>hal_i2c_irq_handler</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_i2c_irq_handler &rArr; i2c_it_error &rArr; hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[55]"></a>hal_i2c_listen_cplt_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_i2c.o(i.hal_i2c_listen_cplt_callback))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_listen_cplt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>hal_i2c_master_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_i2c.o(i.hal_i2c_master_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_master_rx_cplt_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[1fa]"></a>hal_i2c_master_transmit</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_master_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hal_i2c_master_transmit &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_sta_flag_until_timeout
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_transfer_config
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_transmit_sync
</UL>

<P><STRONG><a name="[51]"></a>hal_i2c_master_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_i2c.o(i.hal_i2c_master_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_master_tx_cplt_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[1f6]"></a>hal_i2c_mem_read</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_mem_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_active_flag_status_tfe
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_sta_flag_until_timeout
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_req_mem_read_write
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_transfer_config
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_mem_read_sync
</UL>

<P><STRONG><a name="[57]"></a>hal_i2c_mem_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_i2c.o(i.hal_i2c_mem_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_mem_rx_cplt_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>hal_i2c_mem_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_i2c.o(i.hal_i2c_mem_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_mem_tx_cplt_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[1f8]"></a>hal_i2c_mem_write</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_mem_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_active_flag_status_tfe
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_sta_flag_until_timeout
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_req_mem_read_write
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_transfer_config
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_mem_write_sync
</UL>

<P><STRONG><a name="[50]"></a>hal_i2c_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_i2c.o(i.hal_i2c_msp_deinit))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit_ext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>hal_i2c_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_i2c.o(i.hal_i2c_msp_init))
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init_ext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>hal_i2c_slave_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_i2c.o(i.hal_i2c_slave_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_slave_rx_cplt_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[1fb]"></a>hal_i2c_slave_transmit</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gr55xx_hal_i2c_patch.o(i.hal_i2c_slave_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_sta_flag_until_timeout
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_transfer_config
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_start_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_transmit_sync
</UL>

<P><STRONG><a name="[53]"></a>hal_i2c_slave_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_i2c.o(i.hal_i2c_slave_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_i2c_slave_tx_cplt_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c.o(.data)
</UL>
<P><STRONG><a name="[220]"></a>hal_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gr55xx_hal.o(i.hal_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_register_callback (via Veneer)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_wake_up_ind
</UL>

<P><STRONG><a name="[1ff]"></a>hal_msio_deinit</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_msio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[190]"></a>hal_msio_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_msio_init &rArr; ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_pin_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hw_version_pin_init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[44]"></a>hal_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal.o(i.hal_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>hal_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal.o(i.hal_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal.o(.data)
</UL>
<P><STRONG><a name="[22a]"></a>hal_pwr_config_timer_wakeup</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gr55xx_hal_pwr.o(i.hal_pwr_config_timer_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_register_timer_elaspsed_handler (via Veneer)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
</UL>

<P><STRONG><a name="[3ef]"></a>hal_rng_deinit_ext</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gr55xx_hal_rng_patch.o(i.hal_rng_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_rng_deinit_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_rng_deinit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
</UL>

<P><STRONG><a name="[3f1]"></a>hal_rng_generate_random_number</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, gr55xx_hal_rng_patch.o(i.hal_rng_generate_random_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreUpdateClock
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_rng_init (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
</UL>

<P><STRONG><a name="[5bf]"></a>hal_rng_init_ext</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gr55xx_hal_rng_patch.o(i.hal_rng_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_rng_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
</UL>

<P><STRONG><a name="[3f3]"></a>hal_timer_base_deinit</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_tim.o(i.hal_timer_base_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_timer_base_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_register_callback (via Veneer)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_deinit_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_wake_up_ind
</UL>

<P><STRONG><a name="[3f6]"></a>hal_timer_base_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_tim.o(i.hal_timer_base_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_timer_base_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_register_callback (via Veneer)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_init_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_wake_up_ind
</UL>

<P><STRONG><a name="[5c]"></a>hal_timer_base_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_tim.o(i.hal_timer_base_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_tim.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>hal_timer_base_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_tim.o(i.hal_timer_base_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_tim.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>hal_timer_period_elapsed_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_tim.o(i.hal_timer_period_elapsed_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_timer_period_elapsed_callback &rArr; app_tim_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tim_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_tim.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>hal_uart_abort_cplt_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart.o(i.hal_uart_abort_cplt_callback))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>hal_uart_abort_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_abort_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_abort_rx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>hal_uart_abort_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_abort_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_abort_tx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[23c]"></a>hal_uart_deinit</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_uart.o(i.hal_uart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_register_callback (via Veneer)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[4b]"></a>hal_uart_error_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_error_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_error_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[234]"></a>hal_uart_get_state</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_uart_patch.o(i.hal_uart_get_state))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_prepare_for_sleep
</UL>

<P><STRONG><a name="[23d]"></a>hal_uart_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_uart.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_register_callback (via Veneer)
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init_ext (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[48]"></a>hal_uart_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart.o(i.hal_uart_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>hal_uart_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart.o(i.hal_uart_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>hal_uart_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_rx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>hal_uart_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_tx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[3fc]"></a>half_product_test</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, maxeye_ft3308.o(i.half_product_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = half_product_test &rArr; TestItem_ShortTest &rArr; fts_get_raw_base &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_RawDataTest
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_CbTest
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_work_mode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_factory_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_half_product_test_resp
</UL>

<P><STRONG><a name="[3c]"></a>hci_le_add_dev_to_wlst_cmd_handler_patch</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, llm_hci_patch.o(i.hci_le_add_dev_to_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_add_dev_to_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_search
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_empty_entry
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_add
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_dev_connected
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>hci_le_clear_wlst_cmd_handler_patch</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, llm_hci_patch.o(i.hci_le_clear_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_clear_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_rem
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>hci_le_cmd_cmp_evt_init_handler_patch</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gapm_init_patch.o(i.hci_le_cmd_cmp_evt_init_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_cmd_cmp_evt_init_handler_patch &rArr; init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_stopping_handler (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_started_handler (via Veneer)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt (via Veneer)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[e3]"></a>hci_le_con_upd_cmd_handler_patch</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_con_upd_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_param_in_range (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_cmd_stat_send (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_hci_patch.o(i.llc_hci_new_handler_find)
</UL>
<P><STRONG><a name="[3f]"></a>hci_le_ext_create_con_cmd_handler_patch</STRONG> (Thumb, 806 bytes, Stack size 208 bytes, llm_hci_patch.o(i.hci_le_ext_create_con_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hci_le_ext_create_con_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_req
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_dev_connected
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_stat_send
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_addr_is_in_ral_list (via Veneer)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_bdaddr_compare (via Veneer)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>hci_le_rmv_dev_from_wlst_cmd_handler_patch</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, llm_hci_patch.o(i.hci_le_rmv_dev_from_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_rmv_dev_from_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_rem
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_search
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>hci_le_set_ext_scan_en_cmd_handler_patch</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, llm_scan_patch.o(i.hci_le_set_ext_scan_en_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_set_ext_scan_en_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_update_dbg_act_state_info
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_scan_start
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_empty
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_stop
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_params_update
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_res_list_is_empty
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_bdaddr_compare (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>hci_le_set_ext_scan_param_cmd_handler_patch</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, llm_scan_patch.o(i.hci_le_set_ext_scan_param_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_set_ext_scan_param_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>hci_nb_cmp_pkts_evt_handler_patch</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, l2cc_task_patch.o(i.hci_nb_cmp_pkts_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_nb_cmp_pkts_evt_handler_patch &rArr; get_id_by_conn_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_get_nb_buffer_available (via Veneer)
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set (via Veneer)
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conidx (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_by_conn_idx
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[148]"></a>hci_send_2_controller_patch</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, hci_patch.o(i.hci_send_2_controller_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_send_2_controller_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_free (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_look_for_cmd_desc (via Veneer)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[42a]"></a>hids_service_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hids.o(i.hids_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hids_service_init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_server_prf_add
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_char_mask_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_init
</UL>

<P><STRONG><a name="[22]"></a>host_to_sdk_msg_handler_patch</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = host_to_sdk_msg_handler_patch &rArr; find_new_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_msg_handler_func
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_msg_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[599]"></a>htole16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, utility.o(i.htole16))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
</UL>

<P><STRONG><a name="[431]"></a>i0nd_ioldo_3v_get</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, platform_sdk.o(i.i0nd_ioldo_3v_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
</UL>

<P><STRONG><a name="[446]"></a>internal_3p3_ioldo_update</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, platform_sdk.o(i.internal_3p3_ioldo_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
</UL>

<P><STRONG><a name="[14c]"></a>ke_task_schedule_patch</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, ke_task_patch.o(i.ke_task_schedule_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ke_task_schedule_patch &rArr; find_new_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_handler_get (via Veneer)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_is_free (via Veneer)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear (via Veneer)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_msg_handler
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[23]"></a>l2cc_pdu_recv_ind_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, gattc_task_patch.o(i.l2cc_pdu_recv_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = l2cc_pdu_recv_ind_handler_patch &rArr; atts_l2cc_pdu_recv_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send (via Veneer)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc (via Veneer)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_l2cc_pdu_recv_handler (via Veneer)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2ae]"></a>l2cm_l2cap_tx_handler_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace))
<BR><BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_callback_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[450]"></a>ldo_voltage_set</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, platform_sdk.o(i.ldo_voltage_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ldo_voltage_set &rArr; sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_ext_flash
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[26b]"></a>le16toh</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, utility.o(i.le16toh))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_write_att_cb
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_write_att_cb
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_write_att_cb
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_write_att_cb
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_write_att_cb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_write_att_cb
</UL>

<P><STRONG><a name="[56d]"></a>le32toh</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, utility.o(i.le32toh))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_write_att_cb
</UL>

<P><STRONG><a name="[3c9]"></a>ll_aon_gpio_init</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, gr55xx_ll_aon_gpio_patch.o(i.ll_aon_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init_ext
</UL>

<P><STRONG><a name="[e7]"></a>ll_channel_map_ind_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ll_channel_map_ind_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_ch_map_proc_continue_func (via Veneer)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg (via Veneer)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[e9]"></a>ll_connection_param_req_handler_patch</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ll_connection_param_req_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check (via Veneer)
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_param_in_range (via Veneer)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg (via Veneer)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get (via Veneer)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_le_evt_mask_check
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[e8]"></a>ll_connection_update_ind_handler_patch</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ll_connection_update_ind_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_param_in_range (via Veneer)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg (via Veneer)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set (via Veneer)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_get (via Veneer)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[3d3]"></a>ll_dma_init</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_suspend_channel
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_resume_channel
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_is_enabled_channel
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_is_empty_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[3dc]"></a>ll_i2c_deinit</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, gr55xx_ll_i2c_patch.o(i.ll_i2c_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_i2c_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit_ext
</UL>

<P><STRONG><a name="[3ec]"></a>ll_msio_init</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, gr55xx_ll_msio_patch.o(i.ll_msio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
</UL>

<P><STRONG><a name="[ea]"></a>ll_phy_req_handler_patch</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, llc_phy_upd_patch.o(i.ll_phy_req_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ll_phy_req_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check (via Veneer)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg (via Veneer)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[2d]"></a>llc_auth_payl_nearly_to_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, llc_le_ping_patch.o(i.llc_auth_payl_nearly_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_auth_payl_nearly_to_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_nearly_to_handler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>llc_auth_payl_real_to_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, llc_le_ping_patch.o(i.llc_auth_payl_real_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_auth_payl_real_to_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_real_to_handler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2aa]"></a>llc_con_upd_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, llc_con_upd_patch.o(i.llc_con_upd_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[2ac]"></a>llc_encrypt_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, llc_encrypt_patch.o(i.llc_encrypt_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[21]"></a>llc_hci_command_handler_patch</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, llc_hci_patch.o(i.llc_hci_command_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_hci_command_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_new_handler_find
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[464]"></a>llc_hci_new_handler_find</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, llc_hci_patch.o(i.llc_hci_new_handler_find))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_command_handler_patch
</UL>

<P><STRONG><a name="[46f]"></a>llc_loc_con_upd_proc_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, llc_con_upd_patch.o(i.llc_loc_con_upd_proc_stop))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>

<P><STRONG><a name="[24]"></a>llc_loc_llcp_rsp_to_handler_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_loc_llcp_rsp_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_loc_llcp_rsp_to_handler_patch &rArr; llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[46e]"></a>llc_loc_phy_upd_proc_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, llc_phy_upd_patch.o(i.llc_loc_phy_upd_proc_stop))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>

<P><STRONG><a name="[2f]"></a>llc_op_dl_upd_ind_handler_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, llc_dl_upd_patch.o(i.llc_op_dl_upd_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llc_op_dl_upd_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_op_dl_upd_ind_handler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[456]"></a>llc_proc_collision_check_slave</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, llc_patch.o(i.llc_proc_collision_check_slave))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get (via Veneer)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_loc_phy_upd_proc_stop
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_loc_con_upd_proc_stop
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_instant_proc_type_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch
</UL>

<P><STRONG><a name="[e0]"></a>llc_rem_con_upd_proc_continue_patch</STRONG> (Thumb, 466 bytes, Stack size 48 bytes, llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = llc_rem_con_upd_proc_continue_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_tx_len_update_for_intv
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_update
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_connection_param_rsp_pdu_send (via Veneer)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_con_upd_info_send (via Veneer)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_con_param_req_evt_send (via Veneer)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_unreg (via Veneer)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_set (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set (via Veneer)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_get (via Veneer)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get (via Veneer)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_reject_ind_pdu_send (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_con_upd_patch.o(i.llc_con_upd_replace)
</UL>
<P><STRONG><a name="[e1]"></a>llc_rem_encrypt_proc_continue_patch</STRONG> (Thumb, 672 bytes, Stack size 32 bytes, llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = llc_rem_encrypt_proc_continue_patch &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_le_evt_mask_check
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_tx_enc
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_rx_enc
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_enc_key_load
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_data_flow_set
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_sk_gen (via Veneer)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_set (via Veneer)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_pause_set (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set (via Veneer)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_get (via Veneer)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get (via Veneer)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_state_set (via Veneer)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_start_enc_rsp_pdu_send (via Veneer)
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_start_enc_req_pdu_send (via Veneer)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_reject_ind_pdu_send (via Veneer)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_pause_enc_rsp_pdu_send (via Veneer)
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_enc_rsp_pdu_send (via Veneer)
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_iv_skd_rand_gen (via Veneer)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_ltk_request_evt_send (via Veneer)
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_disconnect (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_encrypt_replace)
</UL>
<P><STRONG><a name="[25]"></a>llc_rem_llcp_rsp_to_handler_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_rem_llcp_rsp_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_rem_llcp_rsp_to_handler_patch &rArr; llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2ad]"></a>llcp_pdu_handler_tab_replace</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[28]"></a>lld_acl_rx_ind_handler_patch</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, llc_task_patch.o(i.lld_acl_rx_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_acl_rx_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler (via Veneer)
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_rx_free (via Veneer)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[eb]"></a>lld_adv_frm_cbk_func_patch</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lld_adv_patch.o(i.lld_adv_frm_cbk_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lld_adv_frm_cbk_func_patch &rArr; lld_adv_frm_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_skip_isr (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_adv_patch.o(i.lld_adv_replace)
</UL>
<P><STRONG><a name="[489]"></a>lld_adv_frm_isr_patch</STRONG> (Thumb, 878 bytes, Stack size 48 bytes, lld_adv_patch.o(i.lld_adv_frm_isr_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lld_adv_frm_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_scan_rsp_data_set (via Veneer)
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_pkt_rx (via Veneer)
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_ext_chain_construct (via Veneer)
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_end (via Veneer)
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_aux_ch_idx_set (via Veneer)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_adv_data_set (via Veneer)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_remove
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_free
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_try_to_free_old_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[296]"></a>lld_adv_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_adv_patch.o(i.lld_adv_replace))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_env_init
</UL>

<P><STRONG><a name="[f7]"></a>lld_adv_start_func_patch</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lld_scan_patch.o(i.lld_adv_start_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_adv_start_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_start_func (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
</UL>
<P><STRONG><a name="[2a]"></a>lld_ch_map_upd_cfm_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_chmap_upd_patch.o(i.lld_ch_map_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_ch_map_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[466]"></a>lld_con_env_is_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_env_is_free))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler_patch
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler_patch
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler_patch
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler_patch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>

<P><STRONG><a name="[46d]"></a>lld_con_instant_proc_type_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_instant_proc_type_reset))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>

<P><STRONG><a name="[2c]"></a>lld_con_offset_upd_ind_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_con_upd_patch.o(i.lld_con_offset_upd_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_con_offset_upd_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>lld_con_param_upd_cfm_handler_patch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, llc_con_upd_patch.o(i.lld_con_param_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_con_param_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2ab]"></a>lld_con_replace</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[ed]"></a>lld_con_start_patch</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lld_con_patch.o(i.lld_con_start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_con_start_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_start_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[ef]"></a>lld_con_tx_prog_patch</STRONG> (Thumb, 636 bytes, Stack size 48 bytes, lld_con_patch.o(i.lld_con_tx_prog_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lld_con_tx_prog_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[4a1]"></a>lld_con_ultra_link_update</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lld_con_patch.o(i.lld_con_ultra_link_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_con_ultra_link_update
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[f1]"></a>lld_init_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lld_patch.o(i.lld_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_init_patch &rArr; lld_scan_discard_last_rx_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_func
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_discard_last_rx_buff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_patch.o(i.lld_init_replace)
</UL>
<P><STRONG><a name="[2cd]"></a>lld_init_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_patch.o(i.lld_init_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[f4]"></a>lld_init_start_patch</STRONG> (Thumb, 1986 bytes, Stack size 192 bytes, lld_init_patch.o(i.lld_init_start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = lld_init_start_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_read_clock
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ral_search
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_connect_req_pack
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_aa_gen (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_init_patch.o(i.lld_init_start_replace)
</UL>
<P><STRONG><a name="[2cf]"></a>lld_init_start_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_init_patch.o(i.lld_init_start_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[26]"></a>lld_llcp_rx_ind_handler_patch</STRONG> (Thumb, 218 bytes, Stack size 80 bytes, llc_llcp_patch.o(i.lld_llcp_rx_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lld_llcp_rx_ind_handler_patch &rArr; finish_encryt_check_by_llcp &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_rx_free (via Veneer)
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_ultra_link_update
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_encryt_check_by_llcp
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>lld_llcp_tx_cfm_handler_patch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, llc_llcp_patch.o(i.lld_llcp_tx_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_llcp_tx_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>lld_phy_upd_cfm_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_phy_upd_patch.o(i.lld_phy_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_phy_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[49b]"></a>lld_scan_discard_last_rx_buff</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, lld_scan_patch.o(i.lld_scan_discard_last_rx_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_scan_discard_last_rx_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract (via Veneer)
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_find (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_patch
</UL>

<P><STRONG><a name="[2ce]"></a>lld_scan_frm_cbk_replace</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lld_scan_patch.o(i.lld_scan_frm_cbk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[f6]"></a>lld_scan_start_func_patch</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lld_scan_patch.o(i.lld_scan_start_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_scan_start_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_start_func
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
</UL>
<P><STRONG><a name="[20]"></a>llm_hci_command_handler_patch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, llm_hci_patch.o(i.llm_hci_command_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llm_hci_command_handler_patch &rArr; find_new_hci_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_hci_cmd_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[52f]"></a>logConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_log.o(i.logConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_event_handler
</UL>

<P><STRONG><a name="[1d8]"></a>logX</STRONG> (Thumb, 70 bytes, Stack size 288 bytes, user_log.o(i.logX))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_rcv_enc_ind_cb
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_scan_req_ind_cb
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_540500_srvc_init
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_180933_srvc_init
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_18092D_srvc_init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_adv_start
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_msg_queue_init
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_wlc_init
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_log_notify
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_charge_notify
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_capacity_notify
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_start
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_start
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_register
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_handler
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_char1_notify
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_write_att_cb
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_read_att_cb
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_ntf_ind_cb
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_event_handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_db_create
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_cccd_set_cb
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char3_notify
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char2_notify
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char1_notify
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_write_att_cb
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_read_att_cb
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_ntf_ind_cb
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_event_handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_db_create
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_cccd_set_cb
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_write_attr_parse
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_write_att_cb
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_read_att_cb
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_ntf_ind_cb
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_event_handler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_db_create
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_cccd_set_cb
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_double_click_notify
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_wdt_rst_ack_notify
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_to_sleep_ack_notify
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_voltage_notify
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_touch_version_notify
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_temp_notify
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_set_mmi_flag_notify
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_rst_voltameter_notify
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_value_notify
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_test_notify
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_result_notify
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_notify
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pencil_status_notify
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_mmi_flag_notify
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_value_notify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_calibration_value_notify
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_disable_preload_notify
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_result_notify
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_ack_notify
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_decoding_test_notify
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_dbclick_notify
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_current_notify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_coding_rate_notify
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_charge_coefficient_notify
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_result_notify
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_ack_notify
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_number_notify
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_flag_notify
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_ack_notify
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_product_sn_notify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_model_id_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_hw_version_notify
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fw_version_notify
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fp24_version_notify
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_charge_notify
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_capacity_notify
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_start
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[312]"></a>logXX</STRONG> (Thumb, 120 bytes, Stack size 288 bytes, user_log.o(i.logXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = logXX &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_start
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_handler
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_wlc_ack_match
</UL>

<P><STRONG><a name="[4ac]"></a>logX_raw</STRONG> (Thumb, 62 bytes, Stack size 288 bytes, user_log.o(i.logX_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = logX_raw &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_event_handler
</UL>

<P><STRONG><a name="[186]"></a>$Super$$main</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = $Super$$main &rArr; maxeye_aging_event_register &rArr; qfy_maxeye_pcba_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_register
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_event_register
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_refresh
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_init
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_event_register
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_register
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_nvds_init
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_msg_queue_init
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_sensor_event_register
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_fatfs_init
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_idle_event_register
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_battery_event_register
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aon_wdt_init
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_register
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_schedule
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disc_cmp_evt_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>main_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_gr55xx.o(i.main_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = main_init &rArr; pwr_mgmt_warm_boot &rArr; warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(.text)
</UL>
<P><STRONG><a name="[4c1]"></a>maxeye_18092D_srvc_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, maxeye_18092d_services.o(i.maxeye_18092D_srvc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = maxeye_18092D_srvc_init &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[4c3]"></a>maxeye_180933_srvc_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, maxeye_180933_services.o(i.maxeye_180933_srvc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = maxeye_180933_srvc_init &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[4c5]"></a>maxeye_540500_srvc_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, maxeye_540500_services.o(i.maxeye_540500_srvc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = maxeye_540500_srvc_init &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[4ba]"></a>maxeye_aging_event_register</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, maxeye_product_test.o(i.maxeye_aging_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = maxeye_aging_event_register &rArr; qfy_maxeye_pcba_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_register
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4cf]"></a>maxeye_aging_event_start</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, maxeye_product_test.o(i.maxeye_aging_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = maxeye_aging_event_start &rArr; ble_idle_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mmi_aging_test_start
</UL>

<P><STRONG><a name="[4cd]"></a>maxeye_aging_event_stop</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, maxeye_product_test.o(i.maxeye_aging_event_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264<LI>Call Chain = maxeye_aging_event_stop &rArr; maxeye_write_product_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_product_test
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_pcba_test
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_aging_test
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test_number
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_aging_test_number
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[4ad]"></a>maxeye_aon_wdt_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, maxeye_wdt.o(i.maxeye_aon_wdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = maxeye_aon_wdt_init &rArr; hal_aon_wdt_refresh
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_refresh
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4b4]"></a>maxeye_battery_event_register</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_battery.o(i.maxeye_battery_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = maxeye_battery_event_register &rArr; batt_charge_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_init_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1e0]"></a>maxeye_ble_adv_start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, user_app.o(i.maxeye_ble_adv_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = maxeye_ble_adv_start &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_handler
</UL>

<P><STRONG><a name="[4b3]"></a>maxeye_ble_idle_event_register</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_sleep.o(i.maxeye_ble_idle_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = maxeye_ble_idle_event_register &rArr; ble_idle_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[275]"></a>maxeye_ble_int_log</STRONG> (Thumb, 64 bytes, Stack size 104 bytes, maxeye_ble_cli.o(i.maxeye_ble_int_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = maxeye_ble_int_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_handler
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_start
</UL>

<P><STRONG><a name="[24b]"></a>maxeye_ble_log</STRONG> (Thumb, 76 bytes, Stack size 112 bytes, maxeye_ble_cli.o(i.maxeye_ble_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_register
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_SetChargeVoltage
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_handler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_handler
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_sleep
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_handler
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_aging_test_handler
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_sensor_aging_test_handler
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asic_aging_test_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_time1s_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[fd]"></a>maxeye_charge_int_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_charge_int_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_charge_int_callback &rArr; batt_charge_int_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_io_it.o(i.maxeye_charge_int_cfg)
</UL>
<P><STRONG><a name="[20f]"></a>maxeye_charge_int_cfg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, maxeye_io_it.o(i.maxeye_charge_int_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = maxeye_charge_int_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_charge_int_disable
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[4d7]"></a>maxeye_charge_int_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_charge_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_charge_int_cfg
</UL>

<P><STRONG><a name="[278]"></a>maxeye_charge_int_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_charge_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_register
</UL>

<P><STRONG><a name="[4d8]"></a>maxeye_cli_cb</STRONG> (Thumb, 2236 bytes, Stack size 352 bytes, maxeye_ble_cli.o(i.maxeye_cli_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560<LI>Call Chain = maxeye_cli_cb &rArr; maxeye_write_product_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_register
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerup
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerdown
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_firmware_version
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_info_get
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_register
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_product_test
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_pcba_test
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_device_sn
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_cirel_reg
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_cirel_reg
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_to_sleep
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_reset_cirel
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_common_cli
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_mcu_firmware_version
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_downlink_status
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_decoding_status
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_status
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_enable
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_disable
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_system_reset
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin (via Veneer)
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_read_pin (via Veneer)
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read_pin (via Veneer)
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_read_pin (via Veneer)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_img_info_erase
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_info_get
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_info_erase
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_get
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_img_info_erase
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_EnableCharge
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connection_parameter_set
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_chip_type
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_enable
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_SetChargeCurrent
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_DisableCharge
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_SetChargeVoltage
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_stop
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_event_handler
</UL>

<P><STRONG><a name="[214]"></a>maxeye_code_uart_init</STRONG> (Thumb, 86 bytes, Stack size 96 bytes, maxeye_uart.o(i.maxeye_code_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = maxeye_code_uart_init &rArr; app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[217]"></a>maxeye_dfu_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_dfu.o(i.maxeye_dfu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = maxeye_dfu_init &rArr; dfu_port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[4f1]"></a>maxeye_dfu_service_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_dfu.o(i.maxeye_dfu_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = maxeye_dfu_service_init &rArr; dfu_service_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_service_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[4f2]"></a>maxeye_disable_preload</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, maxeye_mcu_stylus.o(i.maxeye_disable_preload))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_disable_preload &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[4b1]"></a>maxeye_fatfs_init</STRONG> (Thumb, 136 bytes, Stack size 528 bytes, maxeye_fatfs.o(i.maxeye_fatfs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = maxeye_fatfs_init &rArr; f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fatfs_init_driver
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[ff]"></a>maxeye_g_int_callback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_g_int_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = maxeye_g_int_callback &rArr; g_sensor_int_event_start &rArr; maxeye_ble_int_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_io_it.o(i.maxeye_g_int_cfg)
</UL>
<P><STRONG><a name="[210]"></a>maxeye_g_int_cfg</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, maxeye_io_it.o(i.maxeye_g_int_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = maxeye_g_int_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_disable
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[4ef]"></a>maxeye_g_int_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_g_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_cfg
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[2c2]"></a>maxeye_g_int_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_g_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_handler
</UL>

<P><STRONG><a name="[374]"></a>maxeye_g_int_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_g_int_get))
<BR><BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_read_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
</UL>

<P><STRONG><a name="[2c1]"></a>maxeye_g_int_status</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_g_int_status))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_handler
</UL>

<P><STRONG><a name="[4b6]"></a>maxeye_g_sensor_event_register</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_sensor.o(i.maxeye_g_sensor_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = maxeye_g_sensor_event_register &rArr; g_sensor_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4ea]"></a>maxeye_get_decoding_status</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, maxeye_mcu_stylus.o(i.maxeye_get_decoding_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_get_decoding_status &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_coding_rate_notify
</UL>

<P><STRONG><a name="[4ec]"></a>maxeye_get_downlink_status</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.maxeye_get_downlink_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxeye_get_downlink_status &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_handler
</UL>

<P><STRONG><a name="[4e6]"></a>maxeye_get_mcu_firmware_version</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, maxeye_mcu_stylus.o(i.maxeye_get_mcu_firmware_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxeye_get_mcu_firmware_version &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_handler
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fp24_version_notify
</UL>

<P><STRONG><a name="[4eb]"></a>maxeye_get_pressure</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, maxeye_mcu_stylus.o(i.maxeye_get_pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_get_pressure &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_value_notify
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_sensor_aging_test_handler
</UL>

<P><STRONG><a name="[4f4]"></a>maxeye_get_pressure_cali_result</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, maxeye_mcu_stylus.o(i.maxeye_get_pressure_cali_result))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_get_pressure_cali_result &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[192]"></a>maxeye_i2c0_read</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, maxeye_i2c0.o(i.maxeye_i2c0_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_mem_read_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_ReadRegister
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read_nbyte
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_ReadRegister
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_ReadRegister
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cPlatformRead
</UL>

<P><STRONG><a name="[194]"></a>maxeye_i2c0_transmit</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, maxeye_i2c0.o(i.maxeye_i2c0_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_transmit_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cPlatformWrite
</UL>

<P><STRONG><a name="[198]"></a>maxeye_i2c0_write</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, maxeye_i2c0.o(i.maxeye_i2c0_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_mem_write_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_write
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_WriteRegister
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_WriteRegister
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_WriteRegister
</UL>

<P><STRONG><a name="[4ee]"></a>maxeye_mcu_common_cli</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, maxeye_mcu_stylus.o(i.maxeye_mcu_common_cli))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = maxeye_mcu_common_cli &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[4f5]"></a>maxeye_mcu_pressure_cali</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, maxeye_mcu_stylus.o(i.maxeye_mcu_pressure_cali))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxeye_mcu_pressure_cali &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[4ed]"></a>maxeye_mcu_reset_cirel</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.maxeye_mcu_reset_cirel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxeye_mcu_reset_cirel &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[100]"></a>maxeye_meter_int_callback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_meter_int_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = maxeye_meter_int_callback &rArr; batt_meter_event_start &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_io_it.o(i.maxeye_meter_int_cfg)
</UL>
<P><STRONG><a name="[212]"></a>maxeye_meter_int_cfg</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, maxeye_io_it.o(i.maxeye_meter_int_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = maxeye_meter_int_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_meter_int_disable
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[4f6]"></a>maxeye_meter_int_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_meter_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_meter_int_cfg
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[288]"></a>maxeye_meter_int_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_meter_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[4f7]"></a>maxeye_mmi_aging_test_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, maxeye_product_test.o(i.maxeye_mmi_aging_test_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = maxeye_mmi_aging_test_start &rArr; maxeye_aging_event_start &rArr; ble_idle_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_start
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_ack_notify
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_ack_notify
</UL>

<P><STRONG><a name="[1df]"></a>maxeye_msg_queue_clean</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_notify.o(i.maxeye_msg_queue_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_msg_queue_clean &rArr; app_queue_clean
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
</UL>

<P><STRONG><a name="[4bc]"></a>maxeye_msg_queue_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, maxeye_notify.o(i.maxeye_msg_queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = maxeye_msg_queue_init &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4ae]"></a>maxeye_nvds_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_nvds.o(i.maxeye_nvds_init))
<BR><BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4fa]"></a>maxeye_pcba_test_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, maxeye_product_test.o(i.maxeye_pcba_test_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = maxeye_pcba_test_start &rArr; qfy_maxeye_pcba_event_start &rArr; ble_idle_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_pcba_event_start
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[2c0]"></a>maxeye_pencil_sleep</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, maxeye_sleep.o(i.maxeye_pencil_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = maxeye_pencil_sleep &rArr; maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerdown
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_rst_control
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_to_sleep
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_handler
</UL>

<P><STRONG><a name="[4dd]"></a>maxeye_pencil_to_sleep</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, maxeye_sleep.o(i.maxeye_pencil_to_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = maxeye_pencil_to_sleep &rArr; maxeye_pencil_sleep &rArr; maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_stop
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_enable
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[1db]"></a>maxeye_pencil_wakeup</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, maxeye_sleep.o(i.maxeye_pencil_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = maxeye_pencil_wakeup &rArr; maxeye_stylus_wakeup &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerup
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_rst_control
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_handler
</UL>

<P><STRONG><a name="[4ff]"></a>maxeye_product_test_handler</STRONG> (Thumb, 402 bytes, Stack size 96 bytes, maxeye_product_test.o(i.maxeye_product_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = maxeye_product_test_handler &rArr; maxeye_write_device_sn &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_device_sn
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_to_sleep
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_stop
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mcu_pressure_cali
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure_cali_result
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_disable_preload
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_meter_int_disable
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_rst_voltameter_notify
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_result_notify
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_notify
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_disable_preload_notify
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_product_sn_notify
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_active
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_test_start
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_event_handler
</UL>

<P><STRONG><a name="[505]"></a>maxeye_read_aging_test</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, maxeye_nvds.o(i.maxeye_read_aging_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_read_aging_test
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_tag_length
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_result_notify
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_result_notify
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_flag_notify
</UL>

<P><STRONG><a name="[4d0]"></a>maxeye_read_aging_test_number</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, maxeye_nvds.o(i.maxeye_read_aging_test_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_read_aging_test_number
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_tag_length
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_number_notify
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
</UL>

<P><STRONG><a name="[24a]"></a>maxeye_read_cirel_reg</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.maxeye_read_cirel_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxeye_read_cirel_reg &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asic_aging_test_handler
</UL>

<P><STRONG><a name="[508]"></a>maxeye_read_device_sn</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, maxeye_nvds.o(i.maxeye_read_device_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = maxeye_read_device_sn &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_tag_length
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_product_sn_notify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
</UL>

<P><STRONG><a name="[509]"></a>maxeye_read_pcba_test</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, maxeye_nvds.o(i.maxeye_read_pcba_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_read_pcba_test
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_tag_length
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_mmi_flag_notify
</UL>

<P><STRONG><a name="[50a]"></a>maxeye_read_product_test</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, maxeye_nvds.o(i.maxeye_read_product_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_read_product_test
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_tag_length
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_mmi_flag_notify
</UL>

<P><STRONG><a name="[4b9]"></a>maxeye_srv_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_notify.o(i.maxeye_srv_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = maxeye_srv_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[513]"></a>maxeye_srv_event_start</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, maxeye_notify.o(i.maxeye_srv_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = maxeye_srv_event_start &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_write_attr_parse
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[4c2]"></a>maxeye_srvc1_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = maxeye_srvc1_init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_server_prf_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_18092D_srvc_init
</UL>

<P><STRONG><a name="[530]"></a>maxeye_srvc1_notify</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_wdt_rst_ack_notify
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_to_sleep_ack_notify
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_voltage_notify
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_touch_version_notify
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_temp_notify
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_set_mmi_flag_notify
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_rst_voltameter_notify
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_value_notify
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_test_notify
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_result_notify
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_cali_notify
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pencil_status_notify
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_mmi_flag_notify
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_value_notify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_calibration_value_notify
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_disable_preload_notify
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_result_notify
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_ack_notify
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_decoding_test_notify
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_dbclick_notify
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_current_notify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_coding_rate_notify
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_charge_coefficient_notify
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_result_notify
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_ack_notify
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_number_notify
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_flag_notify
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_ack_notify
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_product_sn_notify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_model_id_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_hw_version_notify
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fw_version_notify
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fp24_version_notify
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_charge_notify
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_capacity_notify
</UL>

<P><STRONG><a name="[531]"></a>maxeye_srvc2_char1_notify</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, maxeye_180933_services.o(i.maxeye_srvc2_char1_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc2_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_capacity_notify
</UL>

<P><STRONG><a name="[532]"></a>maxeye_srvc2_char2_notify</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, maxeye_180933_services.o(i.maxeye_srvc2_char2_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc2_char2_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_double_click_notify
</UL>

<P><STRONG><a name="[533]"></a>maxeye_srvc2_char3_notify</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, maxeye_180933_services.o(i.maxeye_srvc2_char3_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc2_char3_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_charge_notify
</UL>

<P><STRONG><a name="[4ab]"></a>maxeye_srvc2_char4_notify</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, maxeye_180933_services.o(i.maxeye_srvc2_char4_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_log_notify
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_int_log
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
</UL>

<P><STRONG><a name="[4c4]"></a>maxeye_srvc2_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maxeye_180933_services.o(i.maxeye_srvc2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = maxeye_srvc2_init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_server_prf_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_180933_srvc_init
</UL>

<P><STRONG><a name="[534]"></a>maxeye_srvc3_char1_notify</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, maxeye_540500_services.o(i.maxeye_srvc3_char1_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
</UL>

<P><STRONG><a name="[4c6]"></a>maxeye_srvc3_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maxeye_540500_services.o(i.maxeye_srvc3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = maxeye_srvc3_init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_server_prf_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_540500_srvc_init
</UL>

<P><STRONG><a name="[536]"></a>maxeye_start_decoding_test</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, maxeye_mcu_stylus.o(i.maxeye_start_decoding_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_start_decoding_test &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_decoding_test_notify
</UL>

<P><STRONG><a name="[4e0]"></a>maxeye_stylus_sleep</STRONG> (Thumb, 234 bytes, Stack size 112 bytes, maxeye_mcu_stylus.o(i.maxeye_stylus_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_sleep
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
</UL>

<P><STRONG><a name="[4df]"></a>maxeye_stylus_wakeup</STRONG> (Thumb, 226 bytes, Stack size 96 bytes, maxeye_mcu_stylus.o(i.maxeye_stylus_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = maxeye_stylus_wakeup &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_wakeup_int_set
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_control
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_uart_set_baud_rate
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
</UL>

<P><STRONG><a name="[535]"></a>maxeye_touch_cli_cb</STRONG> (Thumb, 350 bytes, Stack size 16 bytes, maxeye_touch_cli.o(i.maxeye_touch_cli_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = maxeye_touch_cli_cb &rArr; maxeye_touch_product_no_pressure_test_resp &rArr; product_no_pressure_test &rArr; TestItem_ShortTest &rArr; fts_get_raw_base &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_char1_notify
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_pressure_test_resp
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_no_pressure_test_resp
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_half_product_test_resp
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_write_resp
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset_reboot
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_read_resp
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_err_resp
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_algo
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_event_handler
</UL>

<P><STRONG><a name="[53b]"></a>maxeye_touch_cli_err_resp</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, maxeye_touch_cli.o(i.maxeye_touch_cli_err_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = maxeye_touch_cli_err_resp &rArr; maxeye_touch_cli_resp &rArr; maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[53f]"></a>maxeye_touch_cli_read_resp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, maxeye_touch_cli.o(i.maxeye_touch_cli_read_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_touch_cli_read_resp &rArr; maxeye_touch_cli_resp &rArr; maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[540]"></a>maxeye_touch_cli_reset</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, maxeye_touch_cli.o(i.maxeye_touch_cli_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = maxeye_touch_cli_reset &rArr; maxeye_touch_cli_resp &rArr; maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[541]"></a>maxeye_touch_cli_reset_reboot</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, maxeye_touch_cli.o(i.maxeye_touch_cli_reset_reboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = maxeye_touch_cli_reset_reboot &rArr; maxeye_touch_cli_resp &rArr; maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[545]"></a>maxeye_touch_cli_resp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, maxeye_touch_cli.o(i.maxeye_touch_cli_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_touch_cli_resp &rArr; maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_char1_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_pressure_test_resp
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_no_pressure_test_resp
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_half_product_test_resp
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_write_resp
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset_reboot
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_read_resp
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_err_resp
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_debug_msg
</UL>

<P><STRONG><a name="[53c]"></a>maxeye_touch_cli_write_resp</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, maxeye_touch_cli.o(i.maxeye_touch_cli_write_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = maxeye_touch_cli_write_resp &rArr; maxeye_touch_cli_resp &rArr; maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[3c3]"></a>maxeye_touch_debug_msg</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, maxeye_touch_cli.o(i.maxeye_touch_debug_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = maxeye_touch_debug_msg &rArr; maxeye_touch_cli_resp &rArr; maxeye_srvc3_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_touch_int
</UL>

<P><STRONG><a name="[4b8]"></a>maxeye_touch_event_register</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_touch.o(i.maxeye_touch_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = maxeye_touch_event_register &rArr; touch_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[542]"></a>maxeye_touch_half_product_test_resp</STRONG> (Thumb, 110 bytes, Stack size 328 bytes, maxeye_touch_cli.o(i.maxeye_touch_half_product_test_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = maxeye_touch_half_product_test_resp &rArr; half_product_test &rArr; TestItem_ShortTest &rArr; fts_get_raw_base &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_product_test
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[4b0]"></a>maxeye_touch_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, maxeye_touch.o(i.maxeye_touch_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = maxeye_touch_init &rArr; maxeye_touch_int_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_cfg
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerup
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_pin_init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[102]"></a>maxeye_touch_int_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_touch_int_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_touch_int_callback &rArr; touch_int_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_io_it.o(i.maxeye_touch_int_cfg)
</UL>
<P><STRONG><a name="[211]"></a>maxeye_touch_int_cfg</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, maxeye_io_it.o(i.maxeye_touch_int_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = maxeye_touch_int_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_disable
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[54a]"></a>maxeye_touch_int_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_touch_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_cfg
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
</UL>

<P><STRONG><a name="[5e2]"></a>maxeye_touch_int_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_touch_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
</UL>

<P><STRONG><a name="[543]"></a>maxeye_touch_product_no_pressure_test_resp</STRONG> (Thumb, 94 bytes, Stack size 328 bytes, maxeye_touch_cli.o(i.maxeye_touch_product_no_pressure_test_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = maxeye_touch_product_no_pressure_test_resp &rArr; product_no_pressure_test &rArr; TestItem_ShortTest &rArr; fts_get_raw_base &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_no_pressure_test
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[544]"></a>maxeye_touch_product_pressure_test_resp</STRONG> (Thumb, 110 bytes, Stack size 248 bytes, maxeye_touch_cli.o(i.maxeye_touch_product_pressure_test_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = maxeye_touch_product_pressure_test_resp &rArr; product_pressure_test &rArr; TestItem_TouchDiffTest &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_pressure_test
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_resp
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
</UL>

<P><STRONG><a name="[213]"></a>maxeye_wakeup_ble_pin_cfg</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, maxeye_gpio.o(i.maxeye_wakeup_ble_pin_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = maxeye_wakeup_ble_pin_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[4b2]"></a>maxeye_wdt_event_register</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, maxeye_wdt.o(i.maxeye_wdt_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = maxeye_wdt_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_start
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[54d]"></a>maxeye_wdt_event_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_wdt.o(i.maxeye_wdt_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_wdt_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_handler
</UL>

<P><STRONG><a name="[4be]"></a>maxeye_wdt_refresh</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_wdt.o(i.maxeye_wdt_refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = maxeye_wdt_refresh &rArr; hal_aon_wdt_refresh
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[528]"></a>maxeye_wdt_test</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, maxeye_wdt.o(i.maxeye_wdt_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = maxeye_wdt_test &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[4b5]"></a>maxeye_wlc_event_register</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, maxeye_wlc.o(i.maxeye_wlc_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = maxeye_wlc_event_register &rArr; wlc_prop_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_prop_event_register
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[105]"></a>maxeye_wlc_int_callback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_wlc_int_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = maxeye_wlc_int_callback &rArr; wlc_int_event_start &rArr; logXX &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_io_it.o(i.maxeye_wlc_int_cfg)
</UL>
<P><STRONG><a name="[20e]"></a>maxeye_wlc_int_cfg</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, maxeye_io_it.o(i.maxeye_wlc_int_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = maxeye_wlc_int_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[4d2]"></a>maxeye_write_aging_test</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_nvds.o(i.maxeye_write_aging_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = maxeye_write_aging_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_ack_notify
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_ack_notify
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
</UL>

<P><STRONG><a name="[4d1]"></a>maxeye_write_aging_test_number</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_nvds.o(i.maxeye_write_aging_test_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = maxeye_write_aging_test_number &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
</UL>

<P><STRONG><a name="[4e9]"></a>maxeye_write_cirel_reg</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.maxeye_write_cirel_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxeye_write_cirel_reg &rArr; get_xorcheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[4f0]"></a>maxeye_write_device_sn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_nvds.o(i.maxeye_write_device_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = maxeye_write_device_sn &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[4d3]"></a>maxeye_write_pcba_test</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_nvds.o(i.maxeye_write_pcba_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = maxeye_write_pcba_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
</UL>

<P><STRONG><a name="[4d4]"></a>maxeye_write_product_test</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_nvds.o(i.maxeye_write_product_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = maxeye_write_product_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_set_mmi_flag_notify
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
</UL>

<P><STRONG><a name="[552]"></a>mcu_enter_romboot</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, maxeye_mcu_upgrade.o(i.mcu_enter_romboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_enter_romboot &rArr; mcu_reset_control &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_control
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_rest_pin_test_handler
</UL>

<P><STRONG><a name="[553]"></a>mcu_flash_check_blank</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, maxeye_mcu_upgrade.o(i.mcu_flash_check_blank))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mcu_flash_check_blank &rArr; get_mcu_sum_check
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_sum_check
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[555]"></a>mcu_flash_erase</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, maxeye_mcu_upgrade.o(i.mcu_flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mcu_flash_erase &rArr; mcu_flash_tp_erase &rArr; get_mcu_sum_check
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_tp_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[557]"></a>mcu_flash_programming</STRONG> (Thumb, 208 bytes, Stack size 184 bytes, maxeye_mcu_upgrade.o(i.mcu_flash_programming))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mcu_flash_programming &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_sum_check
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[556]"></a>mcu_flash_tp_erase</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, maxeye_mcu_upgrade.o(i.mcu_flash_tp_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mcu_flash_tp_erase &rArr; get_mcu_sum_check
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_sum_check
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_erase
</UL>

<P><STRONG><a name="[558]"></a>mcu_get_firmware_checksum</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, maxeye_mcu_upgrade.o(i.mcu_get_firmware_checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mcu_get_firmware_checksum &rArr; get_mcu_sum_check
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_sum_check
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[4b7]"></a>mcu_init_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.mcu_init_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = mcu_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[285]"></a>mcu_init_event_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_mcu_stylus.o(i.mcu_init_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcu_init_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[215]"></a>mcu_pin_init</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, maxeye_gpio.o(i.mcu_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcu_pin_init &rArr; hal_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[55a]"></a>mcu_ramcode_run</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, maxeye_mcu_upgrade.o(i.mcu_ramcode_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mcu_ramcode_run &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[539]"></a>mcu_reset_control</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.mcu_reset_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mcu_reset_control &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_enter_romboot
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_rest_pin_test_handler
</UL>

<P><STRONG><a name="[4cc]"></a>mcu_rest_pin_test_handler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, maxeye_product_test.o(i.mcu_rest_pin_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mcu_rest_pin_test_handler &rArr; mcu_enter_romboot &rArr; mcu_reset_control &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_enter_romboot
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_control
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_uart_set_baud_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[55c]"></a>mcu_uart_baudrate_set</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, maxeye_mcu_upgrade.o(i.mcu_uart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mcu_uart_baudrate_set &rArr; get_mcu_sum_check
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_sum_check
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_uart_set_baud_rate
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[4e1]"></a>mcu_upgrade_event_register</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, maxeye_mcu_stylus.o(i.mcu_upgrade_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = mcu_upgrade_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[559]"></a>mcu_upgrade_handle</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, maxeye_mcu_upgrade.o(i.mcu_upgrade_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mcu_upgrade_handle &rArr; mcu_flash_programming &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_refresh
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mcu_ramcode
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgraded_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_uart_baudrate_set
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ramcode_run
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_firmware_checksum
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_programming
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_erase
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_check_blank
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_enter_romboot
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_uart_set_baud_rate
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_control
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_handler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_handler
</UL>

<P><STRONG><a name="[55f]"></a>mcu_upgraded_reset</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, maxeye_mcu_upgrade.o(i.mcu_upgraded_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mcu_upgraded_reset &rArr; get_mcu_sum_check
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_sum_check
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[538]"></a>mcu_wakeup_int_set</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, maxeye_mcu_stylus.o(i.mcu_wakeup_int_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcu_wakeup_int_set &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_handler
</UL>

<P><STRONG><a name="[560]"></a>mem_pwr_mgmt_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sram.o(i.mem_pwr_mgmt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mem_pwr_mgmt_init &rArr; mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[289]"></a>meter_low_power_int_enable</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, maxeye_battery.o(i.meter_low_power_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = meter_low_power_int_enable &rArr; cw2215_write_byte &rArr; cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw2215_write_byte
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw2215_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[299]"></a>nvds_put</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, sdk_nvds_patch.o(i.nvds_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_hdr_checksum
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_product_test
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_pcba_test
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_device_sn
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_aging_test
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_aging_test_number
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_put
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
</UL>

<P><STRONG><a name="[2e5]"></a>otas_notify_tx_data</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, otas.o(i.otas_notify_tx_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = otas_notify_tx_data &rArr; prf_find_handle_by_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_handle_by_idx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_data
</UL>

<P><STRONG><a name="[340]"></a>otas_service_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, otas.o(i.otas_service_init))
<BR><BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_server_prf_add
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_service_init
</UL>

<P><STRONG><a name="[4c9]"></a>p_sensor_aging_test_handler</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, maxeye_product_test.o(i.p_sensor_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = p_sensor_aging_test_handler &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[1e6]"></a>pencil_idle_connection_parameter_set</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, maxeye_ble.o(i.pencil_idle_connection_parameter_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pencil_idle_connection_parameter_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connection_update_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_handler
</UL>

<P><STRONG><a name="[216]"></a>pencil_pin_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, maxeye_gpio.o(i.pencil_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pencil_pin_init &rArr; Hw_version_pin_init &rArr; hal_msio_init &rArr; ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_pin_init
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_pin_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirel_pin_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hw_version_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[20b]"></a>pencil_run_connection_parameter_set</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, maxeye_ble.o(i.pencil_run_connection_parameter_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pencil_run_connection_parameter_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_paring_succeed_handler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_program_start_callback
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_voltage_notify
</UL>

<P><STRONG><a name="[52c]"></a>pencil_status_rsp_handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, maxeye_sensor.o(i.pencil_status_rsp_handler))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[570]"></a>platform_clock_init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, platform_clock.o(i.platform_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clk_mgmt_init
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[575]"></a>platform_disable_sleep_timer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, platform_clock.o(i.platform_disable_sleep_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_disable_sleep_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[578]"></a>platform_flash_enable_quad</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_exflash.o(i.platform_flash_enable_quad))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = platform_flash_enable_quad &rArr; platform_exflash_enable_quad &rArr; enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[57a]"></a>platform_flash_protection</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, platform_exflash.o(i.platform_flash_protection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_flash_protection &rArr; hal_exflash_operation_protection
</UL>
<BR>[Calls]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_operation_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[57c]"></a>platform_init</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, platform_gr55xx.o(i.platform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_set_exflash_readid_delay
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_deinit
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_table_register
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_rtc_crystal_delay
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init_push
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init_pop
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_register_patch_init_func
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakeup_osc_time_set
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakeup_osc_time_get
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_io_pull_config
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[58b]"></a>platform_init_pop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, platform_sdk.o(i.platform_init_pop))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[580]"></a>platform_init_push</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, platform_sdk.o(i.platform_init_push))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[58c]"></a>platform_param_adjust</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, platform_sdk.o(i.platform_param_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = platform_param_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_set
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[584]"></a>platform_sdk_init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, platform_sdk.o(i.platform_sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = platform_sdk_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration_handler_register
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_init
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_init
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_param_adjust
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_init
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_low_power_set
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[581]"></a>platform_set_rtc_crystal_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, platform_clock.o(i.platform_set_rtc_crystal_delay))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[126]"></a>pmu_calibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pmu_calibration.o(i.pmu_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = pmu_calibration &rArr; pmu_calibration_handler &rArr; vbatt_calibrations &rArr; update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pmu_calibration.o(i.system_pmu_calibration_init)
</UL>
<P><STRONG><a name="[588]"></a>pmu_calibration_handler</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, platform_sdk.o(i.pmu_calibration_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = pmu_calibration_handler &rArr; vbatt_calibrations &rArr; update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_get_recalibration_flag
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_lp_clk
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_is_using
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration
</UL>

<P><STRONG><a name="[260]"></a>prf_find_handle_by_idx</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ble_prf_utils.o(i.prf_find_handle_by_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prf_find_handle_by_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_char1_notify
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char3_notify
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char2_notify
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char1_notify
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_batt_lvl_update
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_notify_tx_data
</UL>

<P><STRONG><a name="[263]"></a>prf_find_idx_by_handle</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, ble_prf_utils.o(i.prf_find_idx_by_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = prf_find_idx_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_write_att_cb
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_read_att_cb
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_cccd_set_cb
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_write_att_cb
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_read_att_cb
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_cccd_set_cb
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_write_att_cb
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_read_att_cb
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_cccd_set_cb
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_write_att_cb
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_read_att_cb
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_cccd_set_cb
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_read_att_cb
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_write_att_cb
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_read_att_cb
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_cccd_set_cb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_write_att_cb
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_read_att_cb
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_cccd_set_cb
</UL>

<P><STRONG><a name="[262]"></a>prf_is_cccd_value_valid</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_prf_utils.o(i.prf_is_cccd_value_valid))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc3_cccd_set_cb
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_cccd_set_cb
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_cccd_set_cb
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_cccd_set_cb
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_cccd_set_cb
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_cccd_set_cb
</UL>

<P><STRONG><a name="[268]"></a>prf_pack_char_pres_fmt</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ble_prf_utils.o(i.prf_pack_char_pres_fmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prf_pack_char_pres_fmt
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htole16
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_read_att_cb
</UL>

<P><STRONG><a name="[54b]"></a>product_no_pressure_test</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, maxeye_ft3308.o(i.product_no_pressure_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = product_no_pressure_test &rArr; TestItem_ShortTest &rArr; fts_get_raw_base &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_RawDataTest
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_CbTest
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_factory_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_no_pressure_test_resp
</UL>

<P><STRONG><a name="[54c]"></a>product_pressure_test</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, maxeye_ft3308.o(i.product_pressure_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = product_pressure_test &rArr; TestItem_TouchDiffTest &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_TouchUinformityTest
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_TouchDiffTest
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_work_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_product_pressure_test_resp
</UL>

<P><STRONG><a name="[59d]"></a>public_service_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, maxeye_public_services.o(i.public_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = public_service_init &rArr; dis_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_init
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[10f]"></a>pwr_enter_sleep_check</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_pwr_mgmt.o(i.pwr_enter_sleep_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwr_enter_sleep_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwr_mgmt.o(i.pwr_register_sleep_cb)
</UL>
<P><STRONG><a name="[319]"></a>pwr_mgmt_shutdown_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[4c0]"></a>pwr_mgmt_warm_boot</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sdk.o(i.pwr_mgmt_warm_boot))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwr_mgmt_warm_boot &rArr; warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_init
</UL>

<P><STRONG><a name="[1e2]"></a>pwr_register_sleep_cb</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, app_pwr_mgmt.o(i.pwr_register_sleep_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_set_callback
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
</UL>

<P><STRONG><a name="[103]"></a>qfy_maxeye_mcu_int_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_gpio.o(i.qfy_maxeye_mcu_int_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = qfy_maxeye_mcu_int_callback &rArr; g_sensor_int_event_start &rArr; maxeye_ble_int_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_gpio.o(i.maxeye_wakeup_ble_pin_cfg)
</UL>
<P><STRONG><a name="[375]"></a>qfy_maxeye_mcu_int_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_gpio.o(i.qfy_maxeye_mcu_int_get))
<BR><BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_read_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_handler
</UL>

<P><STRONG><a name="[4ce]"></a>qfy_maxeye_pcba_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_product_test.o(i.qfy_maxeye_pcba_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = qfy_maxeye_pcba_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_register
</UL>

<P><STRONG><a name="[4fb]"></a>qfy_maxeye_pcba_event_start</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, maxeye_product_test.o(i.qfy_maxeye_pcba_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = qfy_maxeye_pcba_event_start &rArr; ble_idle_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_test_start
</UL>

<P><STRONG><a name="[4bb]"></a>qfy_maxeye_time1s_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_product_test.o(i.qfy_maxeye_time1s_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = qfy_maxeye_time1s_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5a2]"></a>qfy_maxeye_time1s_event_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, maxeye_product_test.o(i.qfy_maxeye_time1s_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = qfy_maxeye_time1s_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_ack_notify
</UL>

<P><STRONG><a name="[2de]"></a>rand_seed_gen</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ble_sdk_patch.o(i.rand_seed_gen))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = rand_seed_gen &rArr; rng_rand_get &rArr; hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_srand
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl1_srand (via Veneer)
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_clk_enable_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_init_patch
</UL>

<P><STRONG><a name="[325]"></a>read_adc_value</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, platform_adc.o(i.read_adc_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[2d3]"></a>reg_gapm_hci_evt_patch_tab</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm_task_patch.o(i.reg_gapm_hci_evt_patch_tab))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[2d2]"></a>reg_hci_cmd_patch_tab</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, llm_hci_patch.o(i.reg_hci_cmd_patch_tab))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[2d1]"></a>reg_msg_patch_tab</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ke_task_patch.o(i.reg_msg_patch_tab))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[5a9]"></a>retention_mem_set</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, platform_sdk.o(i.retention_mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = retention_mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[34e]"></a>rf_SX_disable</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.rf_SX_disable))
<BR><BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[34b]"></a>rf_SX_enable_and_reset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.rf_SX_enable_and_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_SX_enable_and_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_reset
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[595]"></a>rf_calibration_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sdk.o(i.rf_calibration_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_calibration_set
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_set_recalibration_flag
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[2a8]"></a>rf_communication_core_init_patch</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.rf_communication_core_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>

<P><STRONG><a name="[2a1]"></a>rf_gdx_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.rf_gdx_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[5ad]"></a>rf_hp_gain_offset_cfg</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rf_gdx_patch.o(i.rf_hp_gain_offset_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf_hp_gain_offset_cfg &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_freq_table_init
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_vcobias_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[5b3]"></a>rf_modulation_accuracy_calibration_patch</STRONG> (Thumb, 238 bytes, Stack size 192 bytes, rf_gdx_patch.o(i.rf_modulation_accuracy_calibration_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = rf_modulation_accuracy_calibration_patch &rArr; round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_Tune
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_lp_gain_offset_2m_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_disable
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_F_value_patch
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[5b0]"></a>rf_rx_vcobias_reset</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, rf_gdx_patch.o(i.rf_rx_vcobias_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_rx_vcobias_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
</UL>

<P><STRONG><a name="[23b]"></a>ring_buffer_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ring_buffer.o(i.ring_buffer_init))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[235]"></a>ring_buffer_items_count_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ring_buffer.o(i.ring_buffer_items_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[238]"></a>ring_buffer_read</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ring_buffer.o(i.ring_buffer_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[243]"></a>ring_buffer_write</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ring_buffer.o(i.ring_buffer_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ring_buffer_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_async
</UL>

<P><STRONG><a name="[58a]"></a>rng_calibration</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, system_sdk_patch.o(i.rng_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rng_calibration &rArr; __aeabi_ul2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_wdt_get_counter
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration
</UL>

<P><STRONG><a name="[5a6]"></a>rng_clk_enable_ex</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ble_sdk_patch.o(i.rng_clk_enable_ex))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>

<P><STRONG><a name="[5a3]"></a>rng_rand_get</STRONG> (Thumb, 86 bytes, Stack size 64 bytes, ble_sdk_patch.o(i.rng_rand_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rng_rand_get &rArr; hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_init_ext
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>

<P><STRONG><a name="[31c]"></a>rom_callback_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.rom_callback_replace))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[5c0]"></a>romboot_mode_verify</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, maxeye_touch_upgrade.o(i.romboot_mode_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = romboot_mode_verify &rArr; Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[5c1]"></a>romboot_run</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, maxeye_touch_upgrade.o(i.romboot_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = romboot_run &rArr; Touch_Send_nByte &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[34d]"></a>round</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, round.o(i.round))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[589]"></a>rtc_calibration</STRONG> (Thumb, 494 bytes, Stack size 48 bytes, system_sdk_patch.o(i.rtc_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rtc_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_set_clock_div
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_reload_counter
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_counter
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_clear_flag_alarm
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[293]"></a>rwble_abort_recovery</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sch_prog_patch.o(i.rwble_abort_recovery))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
</UL>

<P><STRONG><a name="[2a0]"></a>rwble_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwble_patch.o(i.rwble_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[294]"></a>rwble_reset_recovery</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, sch_prog_patch.o(i.rwble_reset_recovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_req
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rx_desc_rx_done_clean
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_recovery_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[29e]"></a>rwip_sleep_func_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rwip_sleep_patch.o(i.rwip_sleep_func_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[318]"></a>rwip_sleep_without_stack_init_replace</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwip_sleep_without_stack_init_replace &rArr; ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[29f]"></a>sch_arb_replace</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sch_arb_patch.o(i.sch_arb_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[2a4]"></a>sch_prog_frm_cbk_replace</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sch_prog_patch.o(i.sch_prog_frm_cbk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[5c7]"></a>sch_prog_recovery_patch</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, sch_prog_patch.o(i.sch_prog_recovery_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sch_prog_recovery_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
</UL>

<P><STRONG><a name="[1ab]"></a>sdk_init</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, sdk_ram_init_patch.o(i.sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sdk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2b1]"></a>sdk_prf_msg_handler_tab_replace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_sdk_prf_patch.o(i.sdk_prf_msg_handler_tab_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[2db]"></a>sec_check_conn_bond_patch</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ble_sdk_sec_patch.o(i.sec_check_conn_bond_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[36]"></a>sec_rcv_encrypt_req_ind_handler_patch</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, ble_sdk_sec_patch.o(i.sec_rcv_encrypt_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = sec_rcv_encrypt_req_ind_handler_patch &rArr; find_ltk_again &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gapc_auth_get
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_msg_send
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_msg_alloc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ltk_again
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>sec_rcv_sec_req_ind_handler_patch</STRONG> (Thumb, 200 bytes, Stack size 72 bytes, ble_sdk_sec_patch.o(i.sec_rcv_sec_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = sec_rcv_sec_req_ind_handler_patch &rArr; sec_bond_info_miss_check
</UL>
<BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_send_pair_req
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_enc_link
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_bond_info_miss_check
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[4e7]"></a>second_boot_info_get</STRONG> (Thumb, 144 bytes, Stack size 72 bytes, maxeye_dfu.o(i.second_boot_info_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = second_boot_info_get &rArr; log_fw_img_info &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_fw_img_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[a5]"></a>set_msp</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, system_gr55xx.o(i.set_msp))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(.text)
</UL>
<P><STRONG><a name="[34a]"></a>set_sx_frequence</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.set_sx_frequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_sx_frequence
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[27f]"></a>ship_mode_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, maxeye_gpio.o(i.ship_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = ship_mode_enable &rArr; maxeye_pencil_to_sleep &rArr; maxeye_pencil_sleep &rArr; maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_to_sleep
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_shipmode_notify
</UL>

<P><STRONG><a name="[56e]"></a>ship_mode_pin_init</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, maxeye_gpio.o(i.ship_mode_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ship_mode_pin_init &rArr; hal_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pin_init
</UL>

<P><STRONG><a name="[4c8]"></a>sleep_wakeup_aging_test_handler</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, maxeye_product_test.o(i.sleep_wakeup_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = sleep_wakeup_aging_test_handler &rArr; maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerup
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerdown
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_sleep
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_rst_control
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[124]"></a>smpc_handle_enc_change_evt_func_patch</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, smpc_patch.o(i.smpc_handle_enc_change_evt_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpc_handle_enc_change_evt_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task (via Veneer)
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_start
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_start
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state (via Veneer)
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt (via Veneer)
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_link_encrypted (via Veneer)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_patch.o(i.smpc_handle_enc_change_evt_func_replace)
</UL>
<P><STRONG><a name="[2b2]"></a>smpc_handle_enc_change_evt_func_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_patch.o(i.smpc_handle_enc_change_evt_func_replace))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[50d]"></a>srvc1_battery_capacity_notify</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, maxeye_notify.o(i.srvc1_battery_capacity_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = srvc1_battery_capacity_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[50b]"></a>srvc1_battery_charge_notify</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_battery_charge_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = srvc1_battery_charge_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[511]"></a>srvc1_fp24_version_notify</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_fp24_version_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_fp24_version_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_mcu_firmware_version
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[50c]"></a>srvc1_fw_version_notify</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_fw_version_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_fw_version_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[514]"></a>srvc1_hw_version_notify</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_hw_version_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_hw_version_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[521]"></a>srvc1_mmi_sn_notify</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, maxeye_notify.o(i.srvc1_mmi_sn_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = srvc1_mmi_sn_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_device_sn
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[515]"></a>srvc1_model_id_notify</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_model_id_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_model_id_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[516]"></a>srvc1_oppo_sn_notify</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, maxeye_notify.o(i.srvc1_oppo_sn_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = srvc1_oppo_sn_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_device_sn
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[500]"></a>srvc1_product_sn_notify</STRONG> (Thumb, 224 bytes, Stack size 128 bytes, maxeye_notify.o(i.srvc1_product_sn_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = srvc1_product_sn_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_device_sn
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[5d4]"></a>srvc1_refresh_battery_paramenter</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, maxeye_notify.o(i.srvc1_refresh_battery_paramenter))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = srvc1_refresh_battery_paramenter &rArr; battery_charging_strategy &rArr; battery_SetChargeVoltage &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_strategy
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_voltage_notify
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_temp_notify
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_current_notify
</UL>

<P><STRONG><a name="[51b]"></a>srvc1_rep_ack_notify</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_ack_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_ack_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[522]"></a>srvc1_rep_aging_flag_notify</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_aging_flag_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_aging_flag_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[526]"></a>srvc1_rep_aging_number_notify</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_aging_number_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_aging_number_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test_number
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[525]"></a>srvc1_rep_aging_test_ack_notify</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, maxeye_notify.o(i.srvc1_rep_aging_test_ack_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = srvc1_rep_aging_test_ack_notify &rArr; maxeye_write_aging_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_start
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_aging_test
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mmi_aging_test_start
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[523]"></a>srvc1_rep_aging_test_result_notify</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_aging_test_result_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_aging_test_result_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[520]"></a>srvc1_rep_charge_coefficient_notify</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_rep_charge_coefficient_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = srvc1_rep_charge_coefficient_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[519]"></a>srvc1_rep_coding_rate_notify</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_coding_rate_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_coding_rate_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_decoding_status
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[50e]"></a>srvc1_rep_current_notify</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_rep_current_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = srvc1_rep_current_notify &rArr; srvc1_refresh_battery_paramenter &rArr; battery_charging_strategy &rArr; battery_SetChargeVoltage &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_refresh_battery_paramenter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[5d5]"></a>srvc1_rep_dbclick_notify</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_rep_dbclick_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = srvc1_rep_dbclick_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_double_click_notify
</UL>

<P><STRONG><a name="[51a]"></a>srvc1_rep_decoding_test_notify</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_rep_decoding_test_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = srvc1_rep_decoding_test_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_start_decoding_test
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[529]"></a>srvc1_rep_device_check_ack_notify</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_device_check_ack_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = srvc1_rep_device_check_ack_notify &rArr; maxeye_write_aging_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_chip_type
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_aging_test
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_mmi_aging_test_start
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[52a]"></a>srvc1_rep_device_check_result_notify</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_device_check_result_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_device_check_result_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_aging_test
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[503]"></a>srvc1_rep_disable_preload_notify</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_disable_preload_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_disable_preload_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[51c]"></a>srvc1_rep_g_sensor_calibration_value_notify</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_g_sensor_calibration_value_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_g_sensor_calibration_value_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_sensor_xyz_parameter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[51d]"></a>srvc1_rep_g_sensor_value_notify</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_g_sensor_value_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_g_sensor_value_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_sensor_xyz_parameter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[517]"></a>srvc1_rep_mmi_flag_notify</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_mmi_flag_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_mmi_flag_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_product_test
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_pcba_test
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[377]"></a>srvc1_rep_pencil_status_notify</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_pencil_status_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_pencil_status_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_handler
</UL>

<P><STRONG><a name="[501]"></a>srvc1_rep_pressure_cali_notify</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_pressure_cali_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_pressure_cali_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[502]"></a>srvc1_rep_pressure_cali_result_notify</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_pressure_cali_result_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_pressure_cali_result_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[51e]"></a>srvc1_rep_pressure_test_notify</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_pressure_test_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_pressure_test_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[51f]"></a>srvc1_rep_pressure_value_notify</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_pressure_value_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_pressure_value_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_pressure
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[504]"></a>srvc1_rep_rst_voltameter_notify</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_rst_voltameter_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_rst_voltameter_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
</UL>

<P><STRONG><a name="[518]"></a>srvc1_rep_set_mmi_flag_notify</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_set_mmi_flag_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = srvc1_rep_set_mmi_flag_notify &rArr; maxeye_write_product_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_product_test
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[524]"></a>srvc1_rep_shipmode_notify</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_notify.o(i.srvc1_rep_shipmode_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = srvc1_rep_shipmode_notify &rArr; ship_mode_enable &rArr; maxeye_pencil_to_sleep &rArr; maxeye_pencil_sleep &rArr; maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[50f]"></a>srvc1_rep_temp_notify</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_rep_temp_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = srvc1_rep_temp_notify &rArr; srvc1_refresh_battery_paramenter &rArr; battery_charging_strategy &rArr; battery_SetChargeVoltage &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_refresh_battery_paramenter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[52b]"></a>srvc1_rep_touch_version_notify</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, maxeye_notify.o(i.srvc1_rep_touch_version_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc1_rep_touch_version_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_firmware_version
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[510]"></a>srvc1_rep_voltage_notify</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_rep_voltage_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = srvc1_rep_voltage_notify &rArr; srvc1_refresh_battery_paramenter &rArr; battery_charging_strategy &rArr; battery_SetChargeVoltage &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_refresh_battery_paramenter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[512]"></a>srvc1_to_sleep_ack_notify</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_to_sleep_ack_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = srvc1_to_sleep_ack_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[527]"></a>srvc1_wdt_rst_ack_notify</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, maxeye_notify.o(i.srvc1_wdt_rst_ack_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = srvc1_wdt_rst_ack_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_handler
</UL>

<P><STRONG><a name="[52d]"></a>srvc1_write_attr_parse</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, maxeye_notify.o(i.srvc1_write_attr_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = srvc1_write_attr_parse &rArr; maxeye_srv_event_start &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_push
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_start
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc1_event_handler
</UL>

<P><STRONG><a name="[280]"></a>srvc2_battery_capacity_notify</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, maxeye_notify.o(i.srvc2_battery_capacity_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = srvc2_battery_capacity_notify &rArr; maxeye_srvc2_char1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char1_notify
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_batt_lvl_update
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_handler
</UL>

<P><STRONG><a name="[28d]"></a>srvc2_battery_charge_notify</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, maxeye_notify.o(i.srvc2_battery_charge_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = srvc2_battery_charge_notify &rArr; maxeye_srvc2_char3_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char3_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_start
</UL>

<P><STRONG><a name="[3c2]"></a>srvc2_double_click_notify</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, maxeye_notify.o(i.srvc2_double_click_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = srvc2_double_click_notify &rArr; srvc1_rep_dbclick_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char2_notify
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_dbclick_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_touch_int
</UL>

<P><STRONG><a name="[28e]"></a>srvc2_log_notify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, maxeye_notify.o(i.srvc2_log_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = srvc2_log_notify &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srvc2_char4_notify
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_meter_log
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
</UL>

<P><STRONG><a name="[286]"></a>start_wlc_init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, maxeye_wlc.o(i.start_wlc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = start_wlc_init &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[594]"></a>sys_adc_trim_get</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, system_sdk_patch.o(i.sys_adc_trim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_adc_trim_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[349]"></a>sys_device_lp_gain_offset_2m_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_lp_gain_offset_2m_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_lp_gain_offset_2m_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[5ae]"></a>sys_device_package_get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_package_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_ext_flash
</UL>

<P><STRONG><a name="[5d7]"></a>sys_device_sram_get</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_sram_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>

<P><STRONG><a name="[385]"></a>sys_device_uid_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, system_sdk_patch.o(i.sys_device_uid_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_device_uid_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[5d6]"></a>sys_efuse_info_sync</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, system_sdk_patch.o(i.sys_efuse_info_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_read (via Veneer)
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_init_ext
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_trim_sum_get
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_sram_get
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_lp_gain_offset_2m_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
</UL>

<P><STRONG><a name="[432]"></a>sys_get_efuse_io_ldo</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, system_sdk_patch.o(i.sys_get_efuse_io_ldo))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_init
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_deinit
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_read (via Veneer)
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
</UL>

<P><STRONG><a name="[453]"></a>sys_is_use_ext_flash</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, platform_sdk.o(i.sys_is_use_ext_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_is_use_ext_flash &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[452]"></a>sys_is_use_internal_3p3_ioldo</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, platform_sdk.o(i.sys_is_use_internal_3p3_ioldo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[451]"></a>sys_pmu_trim_get</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_pmu_trim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_pmu_trim_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[2c4]"></a>sys_sdk_verison_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, platform_sdk.o(i.sys_sdk_verison_get))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[386]"></a>sys_trim_sum_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_trim_sum_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_trim_sum_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[31a]"></a>system_conf_correction</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cold_patch.o(i.system_conf_correction))
<BR><BR>[Calls]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_cfg_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[590]"></a>system_low_power_set</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, platform_sdk.o(i.system_low_power_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_low_power_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[185]"></a>system_platform_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system_gr55xx.o(i.system_platform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = system_platform_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_protection
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_enable_quad
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[585]"></a>system_pmu_calibration_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pmu_calibration.o(i.system_pmu_calibration_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = system_pmu_calibration_init &rArr; app_timer_delete &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[586]"></a>system_pmu_deinit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, platform_sdk.o(i.system_pmu_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = system_pmu_deinit &rArr; system_pmu_init &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[587]"></a>system_pmu_init</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, platform_sdk.o(i.system_pmu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = system_pmu_init &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_deinit
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[58e]"></a>system_priority_init</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, platform_sdk.o(i.system_priority_init))
<BR><BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[2a2]"></a>system_sdk_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_sdk_patch.o(i.system_sdk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[5de]"></a>ton_value_set</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, platform_sdk.o(i.ton_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ton_value_set &rArr; get_ton_value_for_2p2uH
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_2p2uH
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_1p5uH
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
</UL>

<P><STRONG><a name="[4ca]"></a>touch_aging_test_handler</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, maxeye_product_test.o(i.touch_aging_test_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = touch_aging_test_handler &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_firmware_version
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[547]"></a>touch_init_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_touch.o(i.touch_init_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = touch_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_event_register
</UL>

<P><STRONG><a name="[284]"></a>touch_init_event_start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, maxeye_touch.o(i.touch_init_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touch_init_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_handler
</UL>

<P><STRONG><a name="[5e1]"></a>touch_int_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_touch.o(i.touch_int_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = touch_int_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
</UL>

<P><STRONG><a name="[549]"></a>touch_int_event_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_touch.o(i.touch_int_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touch_int_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_callback
</UL>

<P><STRONG><a name="[36c]"></a>touch_read</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, maxeye_ft3308.o(i.touch_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cPlatformRead
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_firmware_version
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_chip_type
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_touch_int
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_reg
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_rawdata
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_cb
</UL>

<P><STRONG><a name="[5df]"></a>touch_read_chip_type</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, maxeye_touch.o(i.touch_read_chip_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touch_read_chip_type &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
</UL>

<P><STRONG><a name="[4e8]"></a>touch_read_firmware_version</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, maxeye_touch.o(i.touch_read_firmware_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touch_read_firmware_version &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_touch_version_notify
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_aging_test_handler
</UL>

<P><STRONG><a name="[1a8]"></a>touch_read_reg</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, maxeye_ft3308.o(i.touch_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_work_mode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_factory_mode
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
</UL>

<P><STRONG><a name="[5e3]"></a>touch_romboot_verify</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, maxeye_touch_upgrade.o(i.touch_romboot_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = touch_romboot_verify &rArr; Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[548]"></a>touch_sensor_pin_init</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, maxeye_gpio.o(i.touch_sensor_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touch_sensor_pin_init &rArr; hal_msio_init &rArr; ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin (via Veneer)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_init
</UL>

<P><STRONG><a name="[4db]"></a>touch_sensor_powerdown</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, maxeye_touch.o(i.touch_sensor_powerdown))
<BR><BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_sleep
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
</UL>

<P><STRONG><a name="[4dc]"></a>touch_sensor_powerup</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, maxeye_touch.o(i.touch_sensor_powerup))
<BR><BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_init
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
</UL>

<P><STRONG><a name="[546]"></a>touch_sensor_reset</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, maxeye_touch.o(i.touch_sensor_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touch_sensor_reset &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_init
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset_reboot
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_reset
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[4fc]"></a>touch_sensor_rst_control</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, maxeye_touch.o(i.touch_sensor_rst_control))
<BR><BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_sleep
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
</UL>

<P><STRONG><a name="[5e4]"></a>touch_soft_reset</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, maxeye_touch_upgrade.o(i.touch_soft_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touch_soft_reset &rArr; Touch_Send_nByte &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[4de]"></a>touch_upgrade_event_register</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, maxeye_touch.o(i.touch_upgrade_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = touch_upgrade_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_start
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>

<P><STRONG><a name="[5e5]"></a>touch_upgrade_event_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_touch.o(i.touch_upgrade_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touch_upgrade_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_register
</UL>

<P><STRONG><a name="[5e0]"></a>touch_upgrade_handle</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, maxeye_touch_upgrade.o(i.touch_upgrade_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = touch_upgrade_handle &rArr; upgrade_write_touch_firmware &rArr; upgrade_package_verify &rArr; Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_refresh
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_touch_romboot
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_write_touch_firmware
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_reset
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_firmware_ecc
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_erase_falsh
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_soft_reset
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_romboot_verify
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;romboot_run
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;romboot_mode_verify
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fw_ecc_xor8_host
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_ecc_xor8_host
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_romboot_mode
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_event_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_handler
</UL>

<P><STRONG><a name="[5ec]"></a>touch_write</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, maxeye_ft3308.o(i.touch_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touch_write &rArr; I2cPlatformWrite &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cPlatformWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write_reg
</UL>

<P><STRONG><a name="[1a5]"></a>touch_write_reg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, maxeye_ft3308.o(i.touch_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touch_write_reg &rArr; touch_write &rArr; I2cPlatformWrite &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_rawdata
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_cb
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_work_mode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_enter_factory_mode
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
</UL>

<P><STRONG><a name="[5ee]"></a>update_io_ldo_to_prevent_leakage</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, platform_sdk.o(i.update_io_ldo_to_prevent_leakage))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
</UL>

<P><STRONG><a name="[598]"></a>update_lp_clk</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, platform_clock.o(i.update_lp_clk))
<BR><BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[5e8]"></a>upgrade_erase_falsh</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, maxeye_touch_upgrade.o(i.upgrade_erase_falsh))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = upgrade_erase_falsh &rArr; Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[5ea]"></a>upgrade_get_firmware_ecc</STRONG> (Thumb, 348 bytes, Stack size 56 bytes, maxeye_touch_upgrade.o(i.upgrade_get_firmware_ecc))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = upgrade_get_firmware_ecc &rArr; Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[5ef]"></a>upgrade_package_verify</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, maxeye_touch_upgrade.o(i.upgrade_package_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = upgrade_package_verify &rArr; Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Recv_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_write_touch_firmware
</UL>

<P><STRONG><a name="[5eb]"></a>upgrade_reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, maxeye_touch_upgrade.o(i.upgrade_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = upgrade_reset &rArr; Touch_Send_nByte &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[5e9]"></a>upgrade_write_touch_firmware</STRONG> (Thumb, 114 bytes, Stack size 168 bytes, maxeye_touch_upgrade.o(i.upgrade_write_touch_firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = upgrade_write_touch_firmware &rArr; upgrade_package_verify &rArr; Touch_Recv_nByte &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_package_verify
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[5dd]"></a>warm_boot_cfg_patch</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, boot_patch.o(i.warm_boot_cfg_patch))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_conf_correction
</UL>

<P><STRONG><a name="[57d]"></a>warm_boot_set_exflash_readid_delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, warm_boot_patch.o(i.warm_boot_set_exflash_readid_delay))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[4cb]"></a>wlc_aging_test_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_product_test.o(i.wlc_aging_test_handler))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pcba_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_handler
</UL>

<P><STRONG><a name="[2c7]"></a>wlc_ask_data_generate</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, maxeye_wlc.o(i.wlc_ask_data_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = wlc_ask_data_generate
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[54f]"></a>wlc_int_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_wlc.o(i.wlc_int_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = wlc_int_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_event_register
</UL>

<P><STRONG><a name="[551]"></a>wlc_int_event_start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, maxeye_wlc.o(i.wlc_int_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = wlc_int_event_start &rArr; logXX &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_int_callback
</UL>

<P><STRONG><a name="[315]"></a>wlc_interrupt_clear</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, maxeye_ra9520.o(i.wlc_interrupt_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = wlc_interrupt_clear &rArr; RA9520_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_wlc_int
</UL>

<P><STRONG><a name="[56f]"></a>wlc_pin_init</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, maxeye_gpio.o(i.wlc_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wlc_pin_init &rArr; hal_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pin_init
</UL>

<P><STRONG><a name="[54e]"></a>wlc_prop_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_wlc.o(i.wlc_prop_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = wlc_prop_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_event_register
</UL>

<P><STRONG><a name="[276]"></a>wlc_read_chip_type</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, maxeye_ra9520.o(i.wlc_read_chip_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = wlc_read_chip_type &rArr; RA9520_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_handler
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_ack_notify
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[311]"></a>wlc_read_prop_data_in</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, maxeye_ra9520.o(i.wlc_read_prop_data_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = wlc_read_prop_data_in &rArr; RA9520_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_wlc_ack_match
</UL>

<P><STRONG><a name="[5a7]"></a>wlc_read_system_interruput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, maxeye_ra9520.o(i.wlc_read_system_interruput))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = wlc_read_system_interruput &rArr; RA9520_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_wlc_int
</UL>

<P><STRONG><a name="[290]"></a>wlc_send_prop_data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, maxeye_ra9520.o(i.wlc_send_prop_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = wlc_send_prop_data &rArr; RA9520_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[28f]"></a>wlc_write_prop_data_out</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, maxeye_ra9520.o(i.wlc_write_prop_data_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = wlc_write_prop_data_out &rArr; RA9520_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA9520_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[55e]"></a>write_mcu_ramcode</STRONG> (Thumb, 236 bytes, Stack size 160 bytes, maxeye_mcu_upgrade.o(i.write_mcu_ramcode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = write_mcu_ramcode &rArr; get_mcu_sum_check
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_sum_check
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_sync
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[5e6]"></a>write_touch_romboot</STRONG> (Thumb, 154 bytes, Stack size 168 bytes, maxeye_touch_upgrade.o(i.write_touch_romboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = write_touch_romboot &rArr; Touch_Send_nByte &rArr; maxeye_i2c0_transmit &rArr; app_i2c_transmit_sync &rArr; hal_i2c_slave_transmit &rArr; i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Send_nByte
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
</UL>

<P><STRONG><a name="[67f]"></a>ble_is_ready</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_sdk_patch.o(TINY_RAM_SPACE))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get (via Veneer)
</UL>

<P><STRONG><a name="[680]"></a>pwr_mgmt_ble_wakeup</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pwr_mgmt_ble_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_IRQHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get (via Veneer)
</UL>

<P><STRONG><a name="[69a]"></a>pwr_mgmt_switch_dig_core_mode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer
</UL>

<P><STRONG><a name="[698]"></a>pwr_mgmt_check_ext_timer</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pwr_mgmt_check_ext_timer &rArr; hal_pwr_get_timer_current_value
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value (via Veneer)
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpcycles_2_hus (via Veneer)
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_switch_dig_core_mode
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remain_sleep_dur (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch
</UL>

<P><STRONG><a name="[69f]"></a>pwr_mgmt_ultra_sleep</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles (via Veneer)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_locker (via Veneer)
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch (via Veneer)
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy (via Veneer)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command (via Veneer)
</UL>

<P><STRONG><a name="[4bf]"></a>pwr_mgmt_schedule</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pwr_mgmt_schedule &rArr; mem_pwr_mgmt_check_processs &rArr; mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_context_and_enter_sleep (via Veneer)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_unlocker (via Veneer)
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_save_ctx_lvl_two (via Veneer)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_locker (via Veneer)
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_get (via Veneer)
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_suspend (via Veneer)
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1ca]"></a>adv_params_init</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, user_app.o(i.adv_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = adv_params_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_param_set
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[2c9]"></a>gap_params_init</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, user_app.o(i.gap_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = gap_params_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_params_set
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_privacy_params_set
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_pair_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_set
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[2c8]"></a>services_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_app.o(i.services_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = services_init &rArr; public_service_init &rArr; dis_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;public_service_init
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_dfu_service_init
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_540500_srvc_init
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_180933_srvc_init
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_18092D_srvc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[12d]"></a>app_gap_adv_start_cb</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, user_gap_callback.o(i.app_gap_adv_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_gap_adv_start_cb &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>app_gap_adv_stop_cb</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, user_gap_callback.o(i.app_gap_adv_stop_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_gap_adv_stop_cb &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>app_gap_connect_cb</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, user_gap_callback.o(i.app_gap_connect_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = app_gap_connect_cb &rArr; app_connected_handler &rArr; maxeye_pencil_wakeup &rArr; maxeye_stylus_wakeup &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>app_gap_connection_update_cb</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, user_gap_callback.o(i.app_gap_connection_update_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_gap_connection_update_cb &rArr; pencil_idle_connection_parameter_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_idle_connection_parameter_set
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>app_gap_connection_update_req_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_gap_callback.o(i.app_gap_connection_update_req_cb))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_reply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>app_gap_disconnect_cb</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, user_gap_callback.o(i.app_gap_disconnect_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = app_gap_disconnect_cb &rArr; app_disconnected_handler &rArr; maxeye_ble_adv_start &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>app_gap_scan_req_ind_cb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, user_gap_callback.o(i.app_gap_scan_req_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = app_gap_scan_req_ind_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>app_sec_rcv_enc_ind_cb</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, user_sm_callback.o(i.app_sec_rcv_enc_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = app_sec_rcv_enc_ind_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_paring_succeed_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_sm_callback.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>app_sec_rcv_enc_req_cb</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, user_sm_callback.o(i.app_sec_rcv_enc_req_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_sec_rcv_enc_req_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_enc_cfm
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_sm_callback.o(.constdata)
</UL>
<P><STRONG><a name="[1]"></a>hci_disc_cmp_evt_handler_patch</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, app_gapc_hci_patch.o(i.hci_disc_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_disc_cmp_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup (via Veneer)
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt (via Veneer)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_disconect_ind (via Veneer)
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gapc_hci_patch.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>maxeye_srvc1_cccd_set_cb</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_cccd_set_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc1_cccd_set_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_is_cccd_value_valid
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_18092d_services.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>maxeye_srvc1_db_create</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_db_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = maxeye_srvc1_db_create &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_srvc_db_create
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_18092d_services.o(.data)
</UL>
<P><STRONG><a name="[f9]"></a>maxeye_srvc1_event_handler</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = maxeye_srvc1_event_handler &rArr; maxeye_product_test_handler &rArr; maxeye_write_device_sn &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_write_attr_parse
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_product_test_handler
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX_raw
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logConfig
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_18092d_services.o(i.maxeye_18092D_srvc_init)
</UL>
<P><STRONG><a name="[9]"></a>maxeye_srvc1_ntf_ind_cb</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_ntf_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc1_ntf_ind_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_18092d_services.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>maxeye_srvc1_read_att_cb</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_read_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = maxeye_srvc1_read_att_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_18092d_services.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>maxeye_srvc1_write_att_cb</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, maxeye_18092d_services.o(i.maxeye_srvc1_write_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc1_write_att_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le16toh
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_18092d_services.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>maxeye_srvc2_cccd_set_cb</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, maxeye_180933_services.o(i.maxeye_srvc2_cccd_set_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc2_cccd_set_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_is_cccd_value_valid
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_180933_services.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>maxeye_srvc2_db_create</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, maxeye_180933_services.o(i.maxeye_srvc2_db_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = maxeye_srvc2_db_create &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_srvc_db_create
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_180933_services.o(.data)
</UL>
<P><STRONG><a name="[fa]"></a>maxeye_srvc2_event_handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, maxeye_180933_services.o(i.maxeye_srvc2_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = maxeye_srvc2_event_handler &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_180933_services.o(i.maxeye_180933_srvc_init)
</UL>
<P><STRONG><a name="[e]"></a>maxeye_srvc2_ntf_ind_cb</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, maxeye_180933_services.o(i.maxeye_srvc2_ntf_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc2_ntf_ind_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_180933_services.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>maxeye_srvc2_read_att_cb</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, maxeye_180933_services.o(i.maxeye_srvc2_read_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = maxeye_srvc2_read_att_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_180933_services.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>maxeye_srvc2_write_att_cb</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, maxeye_180933_services.o(i.maxeye_srvc2_write_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = maxeye_srvc2_write_att_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le16toh
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_180933_services.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>maxeye_srvc3_cccd_set_cb</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, maxeye_540500_services.o(i.maxeye_srvc3_cccd_set_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc3_cccd_set_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_is_cccd_value_valid
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_540500_services.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>maxeye_srvc3_db_create</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, maxeye_540500_services.o(i.maxeye_srvc3_db_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = maxeye_srvc3_db_create &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_srvc_db_create
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_540500_services.o(.data)
</UL>
<P><STRONG><a name="[fb]"></a>maxeye_srvc3_event_handler</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, maxeye_540500_services.o(i.maxeye_srvc3_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1568<LI>Call Chain = maxeye_srvc3_event_handler &rArr; maxeye_cli_cb &rArr; maxeye_write_product_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_cli_cb
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_540500_services.o(i.maxeye_540500_srvc_init)
</UL>
<P><STRONG><a name="[13]"></a>maxeye_srvc3_ntf_ind_cb</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, maxeye_540500_services.o(i.maxeye_srvc3_ntf_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc3_ntf_ind_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_540500_services.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>maxeye_srvc3_read_att_cb</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, maxeye_540500_services.o(i.maxeye_srvc3_read_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc3_read_att_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_540500_services.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>maxeye_srvc3_write_att_cb</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, maxeye_540500_services.o(i.maxeye_srvc3_write_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = maxeye_srvc3_write_att_cb &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le16toh
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_540500_services.o(.data)
</UL>
<P><STRONG><a name="[b2]"></a>batt_charge_init_event_handler</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, maxeye_battery.o(i.batt_charge_init_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = batt_charge_init_event_handler &rArr; batt_meter_init_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_start
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_charge_int_event_register
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_set_chg_cc_to_target
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_battery.o(i.batt_charge_init_event_register)
</UL>
<P><STRONG><a name="[b3]"></a>batt_charge_int_event_handler</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, maxeye_battery.o(i.batt_charge_int_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = batt_charge_int_event_handler &rArr; maxeye_ble_int_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_chip_type
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_int_log
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_GetEvent
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_battery.o(i.batt_charge_int_event_register)
</UL>
<P><STRONG><a name="[b4]"></a>batt_meter_event_handler</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, maxeye_battery.o(i.batt_meter_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = batt_meter_event_handler &rArr; ship_mode_enable &rArr; maxeye_pencil_to_sleep &rArr; maxeye_pencil_sleep &rArr; maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc2_battery_capacity_notify
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_mode_enable
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_int_log
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_update_data
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw2215_read_byte
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_meter_log
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_strategy
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_battery.o(i.batt_meter_event_register)
</UL>
<P><STRONG><a name="[b5]"></a>batt_meter_init_event_handler</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, maxeye_battery.o(i.batt_meter_init_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = batt_meter_init_event_handler &rArr; batt_meter_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_adv_start
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init_event_start
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_wlc_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_start
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_meter_int_enable
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_init_status
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_start
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_init
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_low_power_int_enable
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_event_register
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_battery.o(i.batt_meter_init_event_register)
</UL>
<P><STRONG><a name="[17]"></a>dfu_program_end_callback</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, maxeye_dfu.o(i.dfu_program_end_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dfu_program_end_callback &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_dfu.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>dfu_program_start_callback</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, maxeye_dfu.o(i.dfu_program_start_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dfu_program_start_callback &rArr; pencil_run_connection_parameter_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_dfu.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>dfu_programing_callback</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, maxeye_dfu.o(i.dfu_programing_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dfu_programing_callback &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_dfu.o(.data)
</UL>
<P><STRONG><a name="[2fd]"></a>log_boot_info</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, maxeye_dfu.o(i.log_boot_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = log_boot_info &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_info_get
</UL>

<P><STRONG><a name="[2fe]"></a>log_fw_img_info</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, maxeye_dfu.o(i.log_fw_img_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = log_fw_img_info &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_info_get
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_info_get
</UL>

<P><STRONG><a name="[537]"></a>ll_uart_set_baud_rate</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, maxeye_mcu_stylus.o(i.ll_uart_set_baud_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_uart_set_baud_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_stylus_wakeup
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_event_handler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_init_event_handler
</UL>

<P><STRONG><a name="[106]"></a>mcu_init_event_handler</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.mcu_init_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = mcu_init_event_handler &rArr; mcu_upgrade_handle &rArr; mcu_flash_programming &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_mcu_firmware_version
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_wakeup_int_set
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_uart_set_baud_rate
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_mcu_stylus.o(i.mcu_init_event_register)
</UL>
<P><STRONG><a name="[107]"></a>mcu_upgrade_event_handler</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, maxeye_mcu_stylus.o(i.mcu_upgrade_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = mcu_upgrade_event_handler &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_uart_set_baud_rate
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_mcu_stylus.o(i.mcu_upgrade_event_register)
</UL>
<P><STRONG><a name="[55d]"></a>ll_uart_set_baud_rate</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, maxeye_mcu_upgrade.o(i.ll_uart_set_baud_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_uart_set_baud_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_uart_baudrate_set
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_upgrade_handle
</UL>

<P><STRONG><a name="[101]"></a>maxeye_srv_event_handler</STRONG> (Thumb, 556 bytes, Stack size 16 bytes, maxeye_notify.o(i.maxeye_srv_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = maxeye_srv_event_handler &rArr; srvc1_rep_aging_test_ack_notify &rArr; maxeye_write_aging_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_to_sleep
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_status_rsp_handler
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_test
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_push
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_pop
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_items_count_get
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_wdt_rst_ack_notify
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_to_sleep_ack_notify
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_voltage_notify
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_touch_version_notify
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_temp_notify
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_shipmode_notify
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_set_mmi_flag_notify
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_value_notify
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pressure_test_notify
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_mmi_flag_notify
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_value_notify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_g_sensor_calibration_value_notify
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_result_notify
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_device_check_ack_notify
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_decoding_test_notify
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_current_notify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_coding_rate_notify
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_charge_coefficient_notify
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_result_notify
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_test_ack_notify
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_number_notify
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_aging_flag_notify
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_ack_notify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_oppo_sn_notify
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_model_id_notify
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_mmi_sn_notify
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_hw_version_notify
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fw_version_notify
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_fp24_version_notify
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_charge_notify
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_battery_capacity_notify
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_srv_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_notify.o(i.maxeye_srv_event_register)
</UL>
<P><STRONG><a name="[264]"></a>bas_init</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, maxeye_public_services.o(i.bas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = bas_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_service_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;public_service_init
</UL>

<P><STRONG><a name="[341]"></a>dis_init</STRONG> (Thumb, 106 bytes, Stack size 96 bytes, maxeye_public_services.o(i.dis_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = dis_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_service_init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;public_service_init
</UL>

<P><STRONG><a name="[d7]"></a>hid_service_event_process</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_public_services.o(i.hid_service_event_process))
<BR>[Address Reference Count : 1]<UL><LI> maxeye_public_services.o(i.hids_init)
</UL>
<P><STRONG><a name="[429]"></a>hids_init</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, maxeye_public_services.o(i.hids_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hids_init &rArr; hids_service_init
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_service_init
</UL>
<BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;public_service_init
</UL>

<P><STRONG><a name="[cc]"></a>g_sensor_init_event_handler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, maxeye_sensor.o(i.g_sensor_init_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = g_sensor_init_event_handler &rArr; g_sensor_int_rep_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_enable
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS2DH12TR_MoveIntInit
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_register
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_register
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_sensor.o(i.g_sensor_init_event_register)
</UL>
<P><STRONG><a name="[cd]"></a>g_sensor_int_event_handler</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, maxeye_sensor.o(i.g_sensor_int_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = g_sensor_int_event_handler &rArr; maxeye_pencil_wakeup &rArr; maxeye_stylus_wakeup &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_run_connection_parameter_set
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_adv_start
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_get
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_event_start
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_mcu_int_get
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_int_rep_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_sensor.o(i.g_sensor_int_event_register)
</UL>
<P><STRONG><a name="[ce]"></a>g_sensor_int_rep_event_handler</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, maxeye_sensor.o(i.g_sensor_int_rep_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = g_sensor_int_rep_event_handler &rArr; srvc1_rep_pencil_status_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srvc1_rep_pencil_status_notify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_sensor.o(i.g_sensor_int_rep_event_register)
</UL>
<P><STRONG><a name="[b6]"></a>ble_idle_event_handler</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, maxeye_sleep.o(i.ble_idle_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = ble_idle_event_handler &rArr; maxeye_pencil_sleep &rArr; maxeye_stylus_sleep &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_idle_connection_parameter_set
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_status
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_g_int_enable
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_sleep
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_sleep.o(i.ble_idle_event_register)
</UL>
<P><STRONG><a name="[128]"></a>touch_init_event_handler</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, maxeye_touch.o(i.touch_init_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = touch_init_event_handler &rArr; touch_int_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerup
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerdown
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_firmware_version
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_enable
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_chip_type
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_int_event_register
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_touch.o(i.touch_init_event_register)
</UL>
<P><STRONG><a name="[129]"></a>touch_int_event_handler</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, maxeye_touch.o(i.touch_int_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = touch_int_event_handler &rArr; get_touch_int &rArr; srvc2_double_click_notify &rArr; srvc1_rep_dbclick_notify &rArr; maxeye_srvc1_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_downlink_status
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_touch_int
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_touch.o(i.touch_int_event_register)
</UL>
<P><STRONG><a name="[12a]"></a>touch_upgrade_event_handler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, maxeye_touch.o(i.touch_upgrade_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = touch_upgrade_event_handler &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerup
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_sensor_powerdown
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_enable
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_touch_int_disable
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_upgrade_handle
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_touch.o(i.touch_upgrade_event_register)
</UL>
<P><STRONG><a name="[104]"></a>maxeye_wdt_event_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, maxeye_wdt.o(i.maxeye_wdt_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_wdt_event_handler &rArr; maxeye_wdt_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_wdt.o(i.maxeye_wdt_event_register)
</UL>
<P><STRONG><a name="[310]"></a>check_wlc_ack_match</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, maxeye_wlc.o(i.check_wlc_ack_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = check_wlc_ack_match &rArr; logXX &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_prop_data_in
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[314]"></a>clear_wlc_int</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, maxeye_wlc.o(i.clear_wlc_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = clear_wlc_int &rArr; wlc_interrupt_clear &rArr; RA9520_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_interrupt_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[125]"></a>maxeye_wlc_init_proc</STRONG> (Thumb, 494 bytes, Stack size 48 bytes, maxeye_wlc.o(i.maxeye_wlc_init_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = maxeye_wlc_init_proc &rArr; check_wlc_ack_match &rArr; logXX &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logX
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_write_prop_data_out
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_send_prop_data
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_chip_type
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_discharge
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_start
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_wlc_int
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_wlc_int
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_wlc_ack_match
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_wlc.o(i.start_wlc_init)
</UL>
<P><STRONG><a name="[550]"></a>read_wlc_int</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, maxeye_wlc.o(i.read_wlc_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = read_wlc_int &rArr; wlc_read_system_interruput &rArr; RA9520_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_system_interruput
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wlc_init_proc
</UL>

<P><STRONG><a name="[12c]"></a>wlc_ask_task_handler</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, maxeye_wlc.o(i.wlc_ask_task_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = wlc_ask_task_handler &rArr; logXX &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_pencil_wakeup
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_adv_start
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_write_prop_data_out
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_send_prop_data
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_read_chip_type
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_wlc.o(i.wlc_prop_event_register)
</UL>
<P><STRONG><a name="[5f0]"></a>wlc_ask_task_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, maxeye_wlc.o(i.wlc_ask_task_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = wlc_ask_task_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_int_event_handler
</UL>

<P><STRONG><a name="[12b]"></a>wlc_int_event_handler</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, maxeye_wlc.o(i.wlc_int_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = wlc_int_event_handler &rArr; check_wlc_ack_match &rArr; logXX &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_start
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_init_event_register
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;g_sensor_init_event_register
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logXX
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_ask_task_start
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_wlc_int
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_wlc_int
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_wlc_ack_match
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_wlc.o(i.wlc_int_event_register)
</UL>
<P><STRONG><a name="[55b]"></a>ll_uart_set_baud_rate</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, maxeye_product_test.o(i.ll_uart_set_baud_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_uart_set_baud_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_rest_pin_test_handler
</UL>

<P><STRONG><a name="[fc]"></a>maxeye_aging_event_handler</STRONG> (Thumb, 458 bytes, Stack size 96 bytes, maxeye_product_test.o(i.maxeye_aging_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = maxeye_aging_event_handler &rArr; maxeye_aging_event_stop &rArr; maxeye_write_product_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_idle_event_start
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_aging_test_handler
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_aging_test_handler
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_wakeup_aging_test_handler
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_sensor_aging_test_handler
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_rest_pin_test_handler
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_aging_test_handler
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_aging_test_handler
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_aging_test_handler
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_aging_test_handler
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asic_aging_test_handler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_sensor_aging_test_handler
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_product_test.o(i.maxeye_aging_event_register)
</UL>
<P><STRONG><a name="[110]"></a>maxeye_pcba_event_handler</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, maxeye_product_test.o(i.maxeye_pcba_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = maxeye_pcba_event_handler &rArr; maxeye_aging_event_stop &rArr; maxeye_write_product_test &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlc_aging_test_handler
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_aging_test_handler
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_sensor_aging_test_handler
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aging_event_stop
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_aging_test_handler
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_aging_test_handler
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_meter_aging_test_handler
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_aging_test_handler
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asic_aging_test_handler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_sensor_aging_test_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_product_test.o(i.qfy_maxeye_pcba_event_register)
</UL>
<P><STRONG><a name="[111]"></a>maxeye_time1s_event_handler</STRONG> (Thumb, 150 bytes, Stack size 112 bytes, maxeye_product_test.o(i.maxeye_time1s_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = maxeye_time1s_event_handler &rArr; maxeye_ble_log &rArr; maxeye_srvc2_char4_notify &rArr; logX &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_ble_log
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_product_test.o(i.qfy_maxeye_time1s_event_register)
</UL>
<P><STRONG><a name="[32e]"></a>cw221x_config_start_ic</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_config_start_ic))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = cw221x_config_start_ic &rArr; cw221x_sleep &rArr; cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_write
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_sleep
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_write_profile
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_profile_verify
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_active
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_init
</UL>

<P><STRONG><a name="[335]"></a>cw221x_get_state</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_get_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = cw221x_get_state &rArr; cw221x_profile_verify &rArr; cw_read &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_read
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_profile_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_init
</UL>

<P><STRONG><a name="[330]"></a>cw221x_write_profile</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, maxeye_cw221x.o(i.cw221x_write_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cw221x_write_profile &rArr; cw_write &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw_write
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cw221x_config_start_ic
</UL>

<P><STRONG><a name="[1a4]"></a>StartScan</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, maxeye_ft3308.o(i.StartScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write_reg
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_RawDataTest
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_rawdata
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_raw_base
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_cb
</UL>

<P><STRONG><a name="[36a]"></a>fts_enter_factory_mode</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, maxeye_ft3308.o(i.fts_enter_factory_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = fts_enter_factory_mode &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write_reg
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_no_pressure_test
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_product_test
</UL>

<P><STRONG><a name="[36b]"></a>fts_enter_work_mode</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, maxeye_ft3308.o(i.fts_enter_work_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = fts_enter_work_mode &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write_reg
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_pressure_test
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_product_test
</UL>

<P><STRONG><a name="[1ae]"></a>fts_get_cb</STRONG> (Thumb, 88 bytes, Stack size 88 bytes, maxeye_ft3308.o(i.fts_get_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = fts_get_cb &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write_reg
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_CbTest
</UL>

<P><STRONG><a name="[1b2]"></a>fts_get_raw_base</STRONG> (Thumb, 92 bytes, Stack size 96 bytes, maxeye_ft3308.o(i.fts_get_raw_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = fts_get_raw_base &rArr; fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_rawdata
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_ShortTest
</UL>

<P><STRONG><a name="[1b0]"></a>fts_get_rawdata</STRONG> (Thumb, 88 bytes, Stack size 88 bytes, maxeye_ft3308.o(i.fts_get_rawdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = fts_get_rawdata &rArr; StartScan &rArr; touch_read_reg &rArr; touch_read &rArr; I2cPlatformRead &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_read
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_write_reg
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartScan
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_TouchDiffTest
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestItem_RawDataTest
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fts_get_raw_base
</UL>

<P><STRONG><a name="[b1]"></a>app_i2c0_evt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_i2c0.o(i.app_i2c0_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> maxeye_i2c0.o(i.app_i2c0_master_init)
</UL>
<P><STRONG><a name="[19f]"></a>MP2662_GenerateCc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, maxeye_mp2662.o(i.MP2662_GenerateCc))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_SetChargeCurrent
</UL>

<P><STRONG><a name="[1a0]"></a>MP2662_GenerateTerm</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, maxeye_mp2662.o(i.MP2662_GenerateTerm))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_SetChargeCurrent
</UL>

<P><STRONG><a name="[18d]"></a>MP2662_ReadRegister</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_mp2662.o(i.MP2662_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MP2662_ReadRegister &rArr; maxeye_i2c0_read &rArr; app_i2c_mem_read_sync &rArr; hal_i2c_mem_read &rArr; i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_read
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_GetEvent
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_I2C_Address
</UL>

<P><STRONG><a name="[19a]"></a>MP2662_WriteRegister</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, maxeye_mp2662.o(i.MP2662_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MP2662_WriteRegister &rArr; maxeye_i2c0_write &rArr; app_i2c_mem_write_sync &rArr; hal_i2c_mem_write &rArr; i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_i2c0_write
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_EnableCharge
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_SetChargeVoltage
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_SetChargeCurrent
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP2662_DisableCharge
</UL>

<P><STRONG><a name="[30c]"></a>check_fs</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[359]"></a>clear_lock</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, ff.o(i.clear_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = clear_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[35a]"></a>find_volume</STRONG> (Thumb, 642 bytes, Stack size 40 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_lock
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>

<P><STRONG><a name="[350]"></a>get_ldnumber</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[365]"></a>ld_dword</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ff.o(i.ld_dword))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[30e]"></a>ld_word</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ff.o(i.ld_word))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[30f]"></a>mem_cmp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[354]"></a>mem_cpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(i.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[353]"></a>mem_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ff.o(i.mem_set))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[30d]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[356]"></a>st_dword</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_dword))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[355]"></a>st_word</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ff.o(i.st_word))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[563]"></a>sync_window</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sync_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[346]"></a>exflash_io_pull_config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, platform_gr55xx.o(i.exflash_io_pull_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exflash_io_pull_config &rArr; ll_gpio_set_pin_pull
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_gpio_set_pin_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[347]"></a>ll_gpio_set_pin_pull</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, platform_gr55xx.o(i.ll_gpio_set_pin_pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_gpio_set_pin_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_io_pull_config
</UL>

<P><STRONG><a name="[567]"></a>nvds_setup</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, platform_gr55xx.o(i.nvds_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nvds_setup &rArr; hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get_start_addr
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_sector_size
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[138]"></a>dma_wake_up_ind</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_dma.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_resume_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>dma_prepare_for_sleep</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_dma.o(i.dma_prepare_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_prepare_for_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_suspend_reg (via Veneer)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_get_state (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>dma_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dma.o(i.dma_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>gpiote_wake_up_ind</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpiote_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gpiote.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>gpiote_prepare_for_sleep</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_gpiote.o(i.gpiote_prepare_for_sleep))
<BR>[Address Reference Count : 1]<UL><LI> app_gpiote.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>gpiote_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_gpiote.o(i.gpiote_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_gpiote.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>uart_wake_up_ind</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_uart.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_resume_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[230]"></a>app_uart_config_dma</STRONG> (Thumb, 216 bytes, Stack size 104 bytes, app_uart.o(i.app_uart_config_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_get_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[231]"></a>app_uart_event_call</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, app_uart.o(i.app_uart_event_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_cplt_callback
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_rx_cplt_callback
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_error_callback
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_tx_cplt_callback
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_rx_cplt_callback
</UL>

<P><STRONG><a name="[232]"></a>app_uart_start_transmit_async</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, app_uart.o(i.app_uart_start_transmit_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_items_count_get
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_it (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_async
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>

<P><STRONG><a name="[23a]"></a>uart_gpio_config</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, app_uart.o(i.uart_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = uart_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[13c]"></a>uart_prepare_for_sleep</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, app_uart.o(i.uart_prepare_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_prepare_for_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_suspend_reg (via Veneer)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_get_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>uart_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_uart.o(i.uart_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[141]"></a>systick_wake_up_ind</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_systick.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systick_wake_up_ind &rArr; hal_init
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_systick.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>systick_prepare_for_sleep</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_systick.o(i.systick_prepare_for_sleep))
<BR>[Address Reference Count : 1]<UL><LI> app_systick.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>systick_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_systick.o(i.systick_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_systick.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>i2c_wake_up_ind</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_i2c.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_resume_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_i2c.o(.constdata)
</UL>
<P><STRONG><a name="[1ef]"></a>app_i2c_config_dma</STRONG> (Thumb, 220 bytes, Stack size 104 bytes, app_i2c.o(i.app_i2c_config_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_i2c_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_get_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
</UL>

<P><STRONG><a name="[3dd]"></a>app_i2c_event_call</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, app_i2c.o(i.app_i2c_event_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_i2c_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_tx_cplt_callback
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_rx_cplt_callback
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_tx_cplt_callback
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_rx_cplt_callback
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_master_tx_cplt_callback
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_master_rx_cplt_callback
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_error_callback
</UL>

<P><STRONG><a name="[1f2]"></a>i2c_gpio_config</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_i2c.o(i.i2c_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = i2c_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_i2c_init
</UL>

<P><STRONG><a name="[142]"></a>i2c_prepare_for_sleep</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_i2c.o(i.i2c_prepare_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_prepare_for_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_get_state
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_suspend_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_i2c.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>i2c_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_i2c.o(i.i2c_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_i2c.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>tim_wake_up_ind</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, app_tim.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tim_wake_up_ind &rArr; hal_timer_base_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_init
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_base_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_tim.o(.constdata)
</UL>
<P><STRONG><a name="[3f8]"></a>app_tim_event_call</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_tim.o(i.app_tim_event_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_tim_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_period_elapsed_callback
</UL>

<P><STRONG><a name="[145]"></a>tim_prepare_for_sleep</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_tim.o(i.tim_prepare_for_sleep))
<BR>[Address Reference Count : 1]<UL><LI> app_tim.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>tim_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_tim.o(i.tim_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_tim.o(.constdata)
</UL>
<P><STRONG><a name="[22f]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[222]"></a>__NVIC_GetPriority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_GetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[223]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[227]"></a>app_timer_drv_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_drv_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer_drv_stop &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
</UL>

<P><STRONG><a name="[203]"></a>__NVIC_GetPriority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_log.o(i.__NVIC_GetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
</UL>

<P><STRONG><a name="[208]"></a>app_log_data_trans</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_log.o(i.app_log_data_trans))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
</UL>

<P><STRONG><a name="[204]"></a>app_log_is_fmt_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_log.o(i.app_log_is_fmt_set))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[205]"></a>app_log_strcpy</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, app_log.o(i.app_log_strcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_log_strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[1d2]"></a>app_assert_info_output</STRONG> (Thumb, 114 bytes, Stack size 1048 bytes, app_assert.o(i.app_assert_info_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
</UL>

<P><STRONG><a name="[61]"></a>ble_send_data</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dfu_port.o(i.ble_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_send_data &rArr; otas_notify_tx_data &rArr; prf_find_handle_by_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_notify_tx_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(.data)
</UL>
<P><STRONG><a name="[cb]"></a>otas_evt_process</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dfu_port.o(i.otas_evt_process))
<BR><BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_cmd_parse_state_reset
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_ble_send_data_cmpl_process
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_ble_receive_data_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(i.dfu_service_init)
</UL>
<P><STRONG><a name="[ca]"></a>program_end_replace</STRONG> (Thumb, 226 bytes, Stack size 80 bytes, dfu_port.o(i.program_end_replace))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = program_end_replace &rArr; hal_flash_write &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_get_security
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_system_reset
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_ms
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_send_frame
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_program_end
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_changed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_port.o(i.dfu_port_init)
</UL>
<P><STRONG><a name="[3d0]"></a>app_rtc_event_call</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_rtc.o(i.app_rtc_event_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_rtc_event_call
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_tick_callback
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_alarm_callback
</UL>

<P><STRONG><a name="[21a]"></a>__NVIC_GetPriority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_queue.o(i.__NVIC_GetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_push
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_pop
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_items_count_get
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_clean
</UL>

<P><STRONG><a name="[21b]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_queue.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_push
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_pop
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_items_count_get
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_queue_clean
</UL>

<P><STRONG><a name="[42b]"></a>hids_cccd_check</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hids.o(i.hids_cccd_check))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_on_cccd_write
</UL>

<P><STRONG><a name="[6c]"></a>hids_cccd_set_cb</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, hids.o(i.hids_cccd_set_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hids_cccd_set_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_is_cccd_value_valid
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_on_cccd_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hids.o(.data)
</UL>
<P><STRONG><a name="[42c]"></a>hids_char_mask_init</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, hids.o(i.hids_char_mask_init))
<BR><BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_service_init
</UL>

<P><STRONG><a name="[69]"></a>hids_init</STRONG> (Thumb, 76 bytes, Stack size 64 bytes, hids.o(i.hids_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hids_init
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_srvc_db_create
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hids.o(.data)
</UL>
<P><STRONG><a name="[428]"></a>hids_on_cccd_write</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, hids.o(i.hids_on_cccd_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hids_on_cccd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_cccd_check
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_write_att_cb
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_cccd_set_cb
</UL>

<P><STRONG><a name="[42e]"></a>hids_on_control_point_write</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hids.o(i.hids_on_control_point_write))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_write_att_cb
</UL>

<P><STRONG><a name="[42d]"></a>hids_on_protocol_mode_write</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hids.o(i.hids_on_protocol_mode_write))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_write_att_cb
</UL>

<P><STRONG><a name="[6a]"></a>hids_read_att_cb</STRONG> (Thumb, 374 bytes, Stack size 32 bytes, hids.o(i.hids_read_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hids_read_att_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hids.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>hids_write_att_cb</STRONG> (Thumb, 498 bytes, Stack size 48 bytes, hids.o(i.hids_write_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hids_write_att_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le16toh
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_on_protocol_mode_write
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_on_control_point_write
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_on_cccd_write
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hids.o(.data)
</UL>
<P><STRONG><a name="[70]"></a>bas_cccd_set_cb</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, bas.o(i.bas_cccd_set_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bas_cccd_set_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_is_cccd_value_valid
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>bas_init</STRONG> (Thumb, 114 bytes, Stack size 80 bytes, bas.o(i.bas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bas_init
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_srvc_db_create
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.data)
</UL>
<P><STRONG><a name="[6e]"></a>bas_read_att_cb</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, bas.o(i.bas_read_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bas_read_att_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>bas_write_att_cb</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, bas.o(i.bas_write_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bas_write_att_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le16toh
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>dis_init</STRONG> (Thumb, 74 bytes, Stack size 64 bytes, dis.o(i.dis_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = dis_init
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_srvc_db_create
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dis.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>dis_read_att_cb</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, dis.o(i.dis_read_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = dis_read_att_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dis.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>otas_cccd_set_cb</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, otas.o(i.otas_cccd_set_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = otas_cccd_set_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_is_cccd_value_valid
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> otas.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>otas_gatts_cmpl_cb</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, otas.o(i.otas_gatts_cmpl_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = otas_gatts_cmpl_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> otas.o(.data)
</UL>
<P><STRONG><a name="[73]"></a>otas_init</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, otas.o(i.otas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = otas_init
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_srvc_db_create
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> otas.o(.data)
</UL>
<P><STRONG><a name="[74]"></a>otas_read_att_cb</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, otas.o(i.otas_read_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = otas_read_att_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> otas.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>otas_write_att_cb</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, otas.o(i.otas_write_att_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = otas_write_att_cb &rArr; prf_find_idx_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_find_idx_by_handle
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le16toh
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le32toh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> otas.o(.data)
</UL>
<P><STRONG><a name="[4a9]"></a>find_new_hci_cmd_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llm_hci_patch.o(i.find_new_hci_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_hci_cmd_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_hci_command_handler_patch
</UL>

<P><STRONG><a name="[401]"></a>llm_is_wl_accessible_patch</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, llm_hci_patch.o(i.llm_is_wl_accessible_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llm_is_wl_accessible_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[df]"></a>llc_pref_param_compute_func_patch</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, llc_con_upd_patch.o(i.llc_pref_param_compute_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = llc_pref_param_compute_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_chk
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_req
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_get
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_activity_offset_compute
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pref_period
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_con_upd_patch.o(i.llc_con_upd_replace)
</UL>
<P><STRONG><a name="[465]"></a>llc_llcp_rsp_to</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_llcp_rsp_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_disconnect (via Veneer)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_llcp_rsp_to_handler_patch
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_loc_llcp_rsp_to_handler_patch
</UL>

<P><STRONG><a name="[423]"></a>get_id_by_conn_idx</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, l2cc_task_patch.o(i.get_id_by_conn_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_id_by_conn_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
</UL>

<P><STRONG><a name="[409]"></a>init_hci_le_cmd_cmp_evt_starting_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gapm_init_patch.o(i.init_hci_le_cmd_cmp_evt_starting_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stopped (via Veneer)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[3a4]"></a>find_new_gapm_hci_evt_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gapm_task_patch.o(i.find_new_gapm_hci_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_gapm_hci_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_hci_handler_patch
</UL>

<P><STRONG><a name="[3c6]"></a>ll_aon_gpio_reset_output_pin</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.ll_aon_gpio_reset_output_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit_ext
</UL>

<P><STRONG><a name="[300]"></a>calendar_cover_seconds2time</STRONG> (Thumb, 254 bytes, Stack size 80 bytes, gr55xx_hal_calendar_patch.o(i.calendar_cover_seconds2time))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[305]"></a>calendar_cover_time2seconds</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, gr55xx_hal_calendar_patch.o(i.calendar_cover_time2seconds))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calendar_cover_time2seconds
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[301]"></a>calendar_get_timer_value</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gr55xx_hal_calendar_patch.o(i.calendar_get_timer_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calendar_get_timer_value
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_counter
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[306]"></a>ll_calendar_get_alarm</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_get_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[302]"></a>ll_calendar_get_counter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_get_timer_value
</UL>

<P><STRONG><a name="[3d1]"></a>ll_calendar_get_wrapcnt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_get_wrapcnt))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
</UL>

<P><STRONG><a name="[307]"></a>ll_calendar_reload_alarm</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_reload_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_irq_handler
</UL>

<P><STRONG><a name="[604]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_disable_ext_wakeup
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_ext_wakeup
</UL>

<P><STRONG><a name="[d9]"></a>i2c_dma_abort</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.i2c_dma_abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = i2c_dma_abort &rArr; hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_abort_cplt_callback
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_error_callback
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_get_source_address
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_get_destination_address
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c_patch.o(i.i2c_it_error)
</UL>
<P><STRONG><a name="[3e1]"></a>i2c_it_error</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, gr55xx_hal_i2c_patch.o(i.i2c_it_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = i2c_it_error &rArr; hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_abort_cplt_callback
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_error_callback
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort_it (via Veneer)
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_enabled_dma_req_tx
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_enabled_dma_req_rx
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_active_flag_status_rfne
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_irq_handler
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
</UL>

<P><STRONG><a name="[439]"></a>i2c_it_listen_cplt</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.i2c_it_listen_cplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_it_listen_cplt
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_listen_cplt_callback
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_active_flag_status_rfne
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
</UL>

<P><STRONG><a name="[43a]"></a>i2c_it_slave_cplt</STRONG> (Thumb, 418 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.i2c_it_slave_cplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = i2c_it_slave_cplt &rArr; i2c_it_error &rArr; hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_listen_cplt_callback
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_tx_cplt_callback
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_rx_cplt_callback
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort_it (via Veneer)
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_enabled_dma_req_tx
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_enabled_dma_req_rx
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_i2c_is_active_flag_status_rfne
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_get_source_address
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_get_destination_address
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_listen_cplt
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_isr_it
</UL>

<P><STRONG><a name="[43f]"></a>i2c_it_slave_sequential_cplt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.i2c_it_slave_sequential_cplt))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_isr_it
</UL>

<P><STRONG><a name="[43b]"></a>i2c_master_check_error</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, gr55xx_hal_i2c_patch.o(i.i2c_master_check_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_master_check_error
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_transmit
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_receive
</UL>

<P><STRONG><a name="[3e7]"></a>i2c_master_start_receive</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, gr55xx_hal_i2c_patch.o(i.i2c_master_start_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = i2c_master_start_receive &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_sta_flag_until_timeout
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_raw_flag_until_timeout
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_check_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_read
</UL>

<P><STRONG><a name="[3e4]"></a>i2c_master_start_transmit</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gr55xx_hal_i2c_patch.o(i.i2c_master_start_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = i2c_master_start_transmit &rArr; i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_sta_flag_until_timeout
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_raw_flag_until_timeout
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_check_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_write
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_master_transmit
</UL>

<P><STRONG><a name="[3e3]"></a>i2c_master_transfer_config</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gr55xx_hal_i2c_patch.o(i.i2c_master_transfer_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_master_transfer_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_write
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_read
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_master_transmit
</UL>

<P><STRONG><a name="[3e6]"></a>i2c_req_mem_read_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.i2c_req_mem_read_write))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_write
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_read
</UL>

<P><STRONG><a name="[441]"></a>i2c_slave_check_error</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gr55xx_hal_i2c_patch.o(i.i2c_slave_check_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_slave_check_error
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_start_transmit
</UL>

<P><STRONG><a name="[da]"></a>i2c_slave_isr_it</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.i2c_slave_isr_it))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = i2c_slave_isr_it &rArr; i2c_it_slave_cplt &rArr; i2c_it_error &rArr; hal_i2c_error_callback &rArr; app_i2c_event_call
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_sequential_cplt
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_i2c_patch.o(i.i2c_it_error)
</UL>
<P><STRONG><a name="[3e9]"></a>i2c_slave_start_transmit</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, gr55xx_hal_i2c_patch.o(i.i2c_slave_start_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = i2c_slave_start_transmit &rArr; i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreUpdateClock
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_until_timeout
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_raw_flag_until_timeout
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_check_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_transmit
</UL>

<P><STRONG><a name="[3e8]"></a>i2c_slave_transfer_config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gr55xx_hal_i2c_patch.o(i.i2c_slave_transfer_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_slave_transfer_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_transmit
</UL>

<P><STRONG><a name="[442]"></a>i2c_wait_on_flag_until_timeout</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, gr55xx_hal_i2c_patch.o(i.i2c_wait_on_flag_until_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreUpdateClock
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_sta_flag_until_timeout
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_raw_flag_until_timeout
</UL>

<P><STRONG><a name="[43c]"></a>i2c_wait_on_raw_flag_until_timeout</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.i2c_wait_on_raw_flag_until_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = i2c_wait_on_raw_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_flag_until_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_start_transmit
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_transmit
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_receive
</UL>

<P><STRONG><a name="[3e2]"></a>i2c_wait_on_sta_flag_until_timeout</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gr55xx_hal_i2c_patch.o(i.i2c_wait_on_sta_flag_until_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = i2c_wait_on_sta_flag_until_timeout &rArr; i2c_wait_on_flag_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_wait_on_flag_until_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_slave_transmit
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_write
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_read
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_master_transmit
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_transmit
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_start_receive
</UL>

<P><STRONG><a name="[440]"></a>i2c_wait_until_timeout</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gr55xx_hal_i2c_patch.o(i.i2c_wait_until_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_wait_until_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_start_transmit
</UL>

<P><STRONG><a name="[434]"></a>ll_dma_get_destination_address</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.ll_dma_get_destination_address))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_abort
</UL>

<P><STRONG><a name="[433]"></a>ll_dma_get_source_address</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.ll_dma_get_source_address))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_abort
</UL>

<P><STRONG><a name="[438]"></a>ll_i2c_is_active_flag_status_rfne</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.ll_i2c_is_active_flag_status_rfne))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_listen_cplt
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error
</UL>

<P><STRONG><a name="[3e5]"></a>ll_i2c_is_active_flag_status_tfe</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.ll_i2c_is_active_flag_status_tfe))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_write
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_mem_read
</UL>

<P><STRONG><a name="[435]"></a>ll_i2c_is_enabled_dma_req_rx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.ll_i2c_is_enabled_dma_req_rx))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error
</UL>

<P><STRONG><a name="[437]"></a>ll_i2c_is_enabled_dma_req_tx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gr55xx_hal_i2c_patch.o(i.ll_i2c_is_enabled_dma_req_tx))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_slave_cplt
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_it_error
</UL>

<P><STRONG><a name="[609]"></a>xqspi_receive_patch</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_set_qspi_datasize
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
</UL>

<P><STRONG><a name="[60a]"></a>ll_xqspi_set_qspi_datasize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[60e]"></a>xqspi_receive_align_word</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_set_qspi_datasize
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
</UL>

<P><STRONG><a name="[398]"></a>hci_le_ltk_request_evt_handler_patch</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gapc_hci_patch.o(i.hci_le_ltk_request_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_stk
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation (via Veneer)
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conidx (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_hci_handler_patch
</UL>

<P><STRONG><a name="[127]"></a>BLE_SDK_Handler_patch</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_sdk_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BLE_SDK_Handler_patch &rArr; pwr_mgmt_ble_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state (via Veneer)
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_schedule (via Veneer)
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_ready
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ble_wakeup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.system_sdk_replace)
</UL>
<P><STRONG><a name="[5be]"></a>ll_aon_wdt_get_counter</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_aon_wdt_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
</UL>

<P><STRONG><a name="[5c5]"></a>ll_calendar_clear_flag_alarm</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_clear_flag_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[5c3]"></a>ll_calendar_get_counter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[5c4]"></a>ll_calendar_reload_counter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_reload_counter))
<BR><BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[5c2]"></a>ll_calendar_set_clock_div</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_set_clock_div))
<BR><BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[363]"></a>find_ltk_again</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_sdk_sec_patch.o(i.find_ltk_again))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = find_ltk_again &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[5c9]"></a>sec_bond_info_miss_check</STRONG> (Thumb, 70 bytes, Stack size 192 bytes, ble_sdk_sec_patch.o(i.sec_bond_info_miss_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sec_bond_info_miss_check
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[24c]"></a>attm_update_max_len</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ble_sdk_gapm_patch.o(i.attm_update_max_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = attm_update_max_len
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[bb]"></a>gap_device_config_params_init_patch</STRONG> (Thumb, 340 bytes, Stack size 72 bytes, ble_sdk_gapm_patch.o(i.gap_device_config_params_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = gap_device_config_params_init_patch &rArr; init_ltk_list
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_build_rand16
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_get
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_trim_sum_get
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
</UL>
<P><STRONG><a name="[bc]"></a>gap_init_fsm_next_func_patch</STRONG> (Thumb, 448 bytes, Stack size 48 bytes, ble_sdk_gapm_patch.o(i.gap_init_fsm_next_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gap_init_fsm_next_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_hdl
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_initiating
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_initiating
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_delete_initiating
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_create_initiating
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_opera_end
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
</UL>
<P><STRONG><a name="[388]"></a>init_ltk_list</STRONG> (Thumb, 206 bytes, Stack size 264 bytes, ble_sdk_gapm_patch.o(i.init_ltk_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = init_ltk_list
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_bond_devs
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[6a2]"></a>ll_pwr_req_excute_psc_command</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[69e]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[6a1]"></a>ll_pwr_is_active_flag_psc_cmd_busy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[10d]"></a>pwr_mgmt_shutdown_patch</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pwr_mgmt_shutdown_patch &rArr; hal_exflash_wakeup_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_set_wakeup_flag (via Veneer)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_enter_chip_deepsleep (via Veneer)
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set (via Veneer)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set (via Veneer)
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch (via Veneer)
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch (via Veneer)
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_on (via Veneer)
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_off (via Veneer)
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace)
</UL>
<P><STRONG><a name="[245]"></a>append_item</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.append_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[247]"></a>compact_nvds</STRONG> (Thumb, 500 bytes, Stack size 64 bytes, sdk_nvds_patch.o(i.compact_nvds))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_clean
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cp_hdr_incr
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[31f]"></a>cp_hdr_incr</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.cp_hdr_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cp_hdr_incr
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[31e]"></a>dec_flash_read</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.dec_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dec_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[339]"></a>dec_flash_write</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.dec_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[361]"></a>find_item</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, sdk_nvds_patch.o(i.find_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = find_item &rArr; tags_cache_rec_find
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_find
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[5f3]"></a>gen_hdr_checksum</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.gen_hdr_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
</UL>

<P><STRONG><a name="[5f4]"></a>gen_value_checksum</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, sdk_nvds_patch.o(i.gen_value_checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gen_value_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
</UL>

<P><STRONG><a name="[447]"></a>is_item_same</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.is_item_same))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = is_item_same &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[320]"></a>read_incr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.read_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_incr &rArr; dec_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[566]"></a>replace_item</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, sdk_nvds_patch.o(i.replace_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[31d]"></a>tags_cache_clean</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.tags_cache_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tags_cache_clean
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[5f2]"></a>tags_cache_rec_add</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.tags_cache_rec_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tags_cache_rec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
</UL>

<P><STRONG><a name="[5a8]"></a>tags_cache_rec_del</STRONG> (Thumb, 302 bytes, Stack size 328 bytes, sdk_nvds_patch.o(i.tags_cache_rec_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = tags_cache_rec_del &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[362]"></a>tags_cache_rec_find</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.tags_cache_rec_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tags_cache_rec_find
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
</UL>

<P><STRONG><a name="[565]"></a>verify_hdr_checksum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.verify_hdr_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[321]"></a>write_compacted_items</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, sdk_nvds_patch.o(i.write_compacted_items))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[5f1]"></a>write_incr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.write_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
</UL>

<P><STRONG><a name="[248]"></a>write_item</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, sdk_nvds_patch.o(i.write_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = write_item &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_add
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_value_checksum
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_hdr_checksum
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[2b8]"></a>sdk_gatt_check_conidx</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_sdk_gattc_patch.o(i.sdk_gatt_check_conidx))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_get
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_cfm
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_cfm
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_noti_ind
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>

<P><STRONG><a name="[61e]"></a>ll_pwr_get_ext_wakeup_status</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[61d]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[327]"></a>cpll_renew_vco_base</STRONG> (Thumb, 416 bytes, Stack size 64 bytes, platform_sdk.o(i.cpll_renew_vco_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreGetClock
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>

<P><STRONG><a name="[3bf]"></a>get_ton_value_for_1p5uH</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, platform_sdk.o(i.get_ton_value_for_1p5uH))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_ton_value_for_1p5uH
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
</UL>

<P><STRONG><a name="[3c0]"></a>get_ton_value_for_2p2uH</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, platform_sdk.o(i.get_ton_value_for_2p2uH))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_ton_value_for_2p2uH
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
</UL>

<P><STRONG><a name="[61f]"></a>ll_aon_gpio_is_enabled_it</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, platform_sdk.o(i.ll_aon_gpio_is_enabled_it))
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[596]"></a>temperature_calibrations</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, platform_sdk.o(i.temperature_calibrations))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = temperature_calibrations &rArr; ldo_voltage_set &rArr; sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retention_mem_set
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_shape_set
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_period_1V_set
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_voltage_set
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[597]"></a>vbatt_calibrations</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, platform_sdk.o(i.vbatt_calibrations))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = vbatt_calibrations &rArr; update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[577]"></a>ll_pwr_req_excute_psc_command</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
</UL>

<P><STRONG><a name="[576]"></a>ll_pwr_is_active_flag_psc_cmd_busy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
</UL>

<P><STRONG><a name="[573]"></a>platform_set_ble_rtc_clk</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, platform_clock.o(i.platform_set_ble_rtc_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248<LI>Call Chain = platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[574]"></a>platform_set_psc_clk</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, platform_clock.o(i.platform_set_psc_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_set_psc_clk
</UL>
<BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_set
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[572]"></a>rf_xo_offset_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, platform_clock.o(i.rf_xo_offset_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = rf_xo_offset_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[571]"></a>system_clk_mgmt_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, platform_clock.o(i.system_clk_mgmt_init))
<BR><BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[367]"></a>llc_rem_encrypt_proc_finish</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, llc_encrypt_patch.o(i.llc_rem_encrypt_proc_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_data_flow_set
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_unreg (via Veneer)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_pause_set (via Veneer)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get (via Veneer)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_state_set (via Veneer)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_le_ping_restart (via Veneer)
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_enc_evt_send (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_encryt_check_by_llcp
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[f8]"></a>lld_scan_evt_start_cbk_patch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_evt_start_cbk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_start_func_patch)
</UL>
<P><STRONG><a name="[647]"></a>lld_scan_process_pkt_rx_patch</STRONG> (Thumb, 2664 bytes, Stack size 80 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_sync_info_unpack
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_sync_accept
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_get_adv_data_len
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_free
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_calc_aux_rx
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_rx_isr_patch
</UL>

<P><STRONG><a name="[64d]"></a>lld_scan_frm_rx_isr_patch</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = lld_scan_frm_rx_isr_patch &rArr; lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[64e]"></a>lld_scan_frm_eof_isr_patch</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lld_scan_frm_eof_isr_patch &rArr; lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_remove
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_trunc_ind
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_end
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_free
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[f5]"></a>lld_scan_frm_cbk_func_patch</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lld_scan_frm_cbk_func_patch &rArr; lld_scan_frm_eof_isr_patch &rArr; lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_skip_isr
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_rx_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
</UL>
<P><STRONG><a name="[154]"></a>atts_read_mult_req_patch</STRONG> (Thumb, 376 bytes, Stack size 56 bytes, atts_patch.o(i.atts_read_mult_req_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = atts_read_mult_req_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu (via Veneer)
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_size (via Veneer)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_pdu (via Veneer)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error (via Veneer)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm (via Veneer)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache (via Veneer)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc (via Veneer)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[44e]"></a>get_conn_idx_by_id</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, l2cm_patch.o(i.get_conn_idx_by_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_conn_idx_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch
</UL>

<P><STRONG><a name="[db]"></a>l2cm_l2cap_tx_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, l2cm_patch.o(i.l2cm_l2cap_tx_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = l2cm_l2cap_tx_handler_patch &rArr; get_conn_idx_by_id
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set (via Veneer)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear (via Veneer)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace)
</UL>
<P><STRONG><a name="[454]"></a>ll_aon_gpio_set_pin_mode</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gr55xx_ll_aon_gpio_patch.o(i.ll_aon_gpio_set_pin_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_aon_gpio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_init
</UL>

<P><STRONG><a name="[45f]"></a>ll_dma_is_empty_fifo</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_is_empty_fifo))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[45d]"></a>ll_dma_is_enabled_channel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_is_enabled_channel))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[460]"></a>ll_dma_resume_channel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_resume_channel))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[45e]"></a>ll_dma_suspend_channel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_suspend_channel))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[665]"></a>ll_xqspi_disable_cache</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gr55xx_ll_xqspi_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_init_patch
</UL>

<P><STRONG><a name="[461]"></a>ll_msio_set_pin_mode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gr55xx_ll_msio_patch.o(i.ll_msio_set_pin_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_msio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_init
</UL>

<P><STRONG><a name="[113]"></a>rf_wakeup_init_patch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rf_gdx_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_wakeup_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_timing_cfg
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_perform_enhance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_gdx_replace)
</UL>
<P><STRONG><a name="[34c]"></a>get_F_value_patch</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.get_F_value_patch))
<BR><BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[112]"></a>rf_init_patch</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.rf_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = rf_init_patch &rArr; rf_modulation_accuracy_calibration_patch &rArr; round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_trim_calibration
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_misc_init
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_em_init
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_api_init
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_agc_init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_timing_cfg
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_perform_enhance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_gdx_replace)
</UL>
<P><STRONG><a name="[5bc]"></a>rf_tx_pw_conv_tbl_get</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.rf_tx_pw_conv_tbl_get))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_dbm_get_patch
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_cs_get_patch
</UL>

<P><STRONG><a name="[115]"></a>rf_txpwr_cs_get_patch</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, rf_gdx_patch.o(i.rf_txpwr_cs_get_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_txpwr_cs_get_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_mode_get
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_mat_cir_get
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_pw_conv_tbl_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_init_patch)
</UL>
<P><STRONG><a name="[114]"></a>rf_txpwr_dbm_get_patch</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, rf_gdx_patch.o(i.rf_txpwr_dbm_get_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_txpwr_dbm_get_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_mode_get
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_mat_cir_get
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_pw_conv_tbl_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_init_patch)
</UL>
<P><STRONG><a name="[3b5]"></a>gatt_remove_item_patch</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ble_sdk_gatts_patch.o(i.gatt_remove_item_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
</UL>

<P><STRONG><a name="[36d]"></a>get_ori_cmd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, platform_patch.o(i.get_ori_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
</UL>

<P><STRONG><a name="[36e]"></a>get_svc_cmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_patch.o(i.get_svc_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
</UL>

<P><STRONG><a name="[1c4]"></a>ll_adc_disable_clock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, platform_adc.o(i.ll_adc_disable_clock))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
</UL>

<P><STRONG><a name="[490]"></a>lld_try_to_free_old_buffer</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lld_adv_patch.o(i.lld_try_to_free_old_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_adv_tx_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[c9]"></a>get_info</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dfu_cmd_handler_patch.o(i.get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_send_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace)
</UL>
<P><STRONG><a name="[123]"></a>gattc_write_req_ind_handler_patch</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, ble_sdk_prf_patch.o(i.gattc_write_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattc_write_req_ind_handler_patch &rArr; sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_prf_cb_by_task_id
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_prf_get_id_from_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_attmdb_uuid16_comp
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_attmdb_get_attribute
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_get_bond_dev_addr
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_bond_cccd
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_gatt_info
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_prf_patch.o(i.sdk_prf_msg_handler_tab_replace)
</UL>
<P><STRONG><a name="[1bc]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1b8]"></a>_printf_core</STRONG> (Thumb, 1704 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[1bf]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1be]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ad]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0snprintf)
<LI> printfa.o(i.__0vsnprintf)
</UL>
<P><STRONG><a name="[ae]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[aa]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
