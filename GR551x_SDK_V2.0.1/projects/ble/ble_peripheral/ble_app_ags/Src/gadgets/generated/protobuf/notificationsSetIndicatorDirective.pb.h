/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_NOTIFICATIONS_NOTIFICATIONSSETINDICATORDIRECTIVE_PB_H_INCLUDED
#define PB_NOTIFICATIONS_NOTIFICATIONSSETINDICATORDIRECTIVE_PB_H_INCLUDED
#include <pb.h>
#include "directiveHeader.pb.h"
#include "notificationsSetIndicatorDirectivePayload.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _notifications_SetIndicatorDirectiveProto_Directive {
    bool has_header;
    header_DirectiveHeaderProto header;
    bool has_payload;
    notifications_SetIndicatorDirectivePayloadProto payload;
} notifications_SetIndicatorDirectiveProto_Directive;

typedef struct _notifications_SetIndicatorDirectiveProto {
    bool has_directive;
    notifications_SetIndicatorDirectiveProto_Directive directive;
} notifications_SetIndicatorDirectiveProto;


/* Initializer values for message structs */
#define notifications_SetIndicatorDirectiveProto_init_default {false, notifications_SetIndicatorDirectiveProto_Directive_init_default}
#define notifications_SetIndicatorDirectiveProto_Directive_init_default {false, header_DirectiveHeaderProto_init_default, false, notifications_SetIndicatorDirectivePayloadProto_init_default}
#define notifications_SetIndicatorDirectiveProto_init_zero {false, notifications_SetIndicatorDirectiveProto_Directive_init_zero}
#define notifications_SetIndicatorDirectiveProto_Directive_init_zero {false, header_DirectiveHeaderProto_init_zero, false, notifications_SetIndicatorDirectivePayloadProto_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define notifications_SetIndicatorDirectiveProto_Directive_header_tag 1
#define notifications_SetIndicatorDirectiveProto_Directive_payload_tag 2
#define notifications_SetIndicatorDirectiveProto_directive_tag 1

/* Struct field encoding specification for nanopb */
#define notifications_SetIndicatorDirectiveProto_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  directive,         1)
#define notifications_SetIndicatorDirectiveProto_CALLBACK NULL
#define notifications_SetIndicatorDirectiveProto_DEFAULT NULL
#define notifications_SetIndicatorDirectiveProto_directive_MSGTYPE notifications_SetIndicatorDirectiveProto_Directive

#define notifications_SetIndicatorDirectiveProto_Directive_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  payload,           2)
#define notifications_SetIndicatorDirectiveProto_Directive_CALLBACK NULL
#define notifications_SetIndicatorDirectiveProto_Directive_DEFAULT NULL
#define notifications_SetIndicatorDirectiveProto_Directive_header_MSGTYPE header_DirectiveHeaderProto
#define notifications_SetIndicatorDirectiveProto_Directive_payload_MSGTYPE notifications_SetIndicatorDirectivePayloadProto

extern const pb_msgdesc_t notifications_SetIndicatorDirectiveProto_msg;
extern const pb_msgdesc_t notifications_SetIndicatorDirectiveProto_Directive_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define notifications_SetIndicatorDirectiveProto_fields &notifications_SetIndicatorDirectiveProto_msg
#define notifications_SetIndicatorDirectiveProto_Directive_fields &notifications_SetIndicatorDirectiveProto_Directive_msg

/* Maximum encoded size of messages (where known) */
#define notifications_SetIndicatorDirectiveProto_size (152 + header_DirectiveHeaderProto_size)
#define notifications_SetIndicatorDirectiveProto_Directive_size (146 + header_DirectiveHeaderProto_size)

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
