/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_ACCESSORIES_PB_H_INCLUDED
#define PB_ACCESSORIES_PB_H_INCLUDED
#include <pb.h>
#include "common.pb.h"
#include "device.pb.h"
#include "firmware.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Command {
    Command_NONE = 0,
    Command_GET_DEVICE_INFORMATION = 20,
    Command_GET_DEVICE_FEATURES = 28,
    Command_UPDATE_COMPONENT_SEGMENT = 94,
    Command_APPLY_FIRMWARE = 95
} Command;

/* Struct definitions */
typedef struct _Response {
    ErrorCode error_code;
    pb_size_t which_payload;
    union {
        FirmwareComponent firmware_component;
        DeviceInformation device_information;
        DeviceFeatures device_features;
    } payload;
} Response;

typedef struct _ControlEnvelope {
    Command command;
    pb_size_t which_payload;
    union {
        Response response;
        GetDeviceInformation get_device_information;
        GetDeviceFeatures get_device_features;
        UpdateComponentSegment update_component_segment;
        ApplyFirmware apply_firmware;
    } payload;
} ControlEnvelope;


/* Helper constants for enums */
#define _Command_MIN Command_NONE
#define _Command_MAX Command_APPLY_FIRMWARE
#define _Command_ARRAYSIZE ((Command)(Command_APPLY_FIRMWARE+1))


/* Initializer values for message structs */
#define Response_init_default                    {_ErrorCode_MIN, 0, {FirmwareComponent_init_default}}
#define ControlEnvelope_init_default             {_Command_MIN, 0, {Response_init_default}}
#define Response_init_zero                       {_ErrorCode_MIN, 0, {FirmwareComponent_init_zero}}
#define ControlEnvelope_init_zero                {_Command_MIN, 0, {Response_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define Response_error_code_tag                  1
#define Response_firmware_component_tag          2
#define Response_device_information_tag          3
#define Response_device_features_tag             28
#define ControlEnvelope_command_tag              1
#define ControlEnvelope_response_tag             9
#define ControlEnvelope_get_device_information_tag 20
#define ControlEnvelope_get_device_features_tag  28
#define ControlEnvelope_update_component_segment_tag 94
#define ControlEnvelope_apply_firmware_tag       95

/* Struct field encoding specification for nanopb */
#define Response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,firmware_component,payload.firmware_component),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,device_information,payload.device_information),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,device_features,payload.device_features),  28)
#define Response_CALLBACK NULL
#define Response_DEFAULT NULL
#define Response_payload_firmware_component_MSGTYPE FirmwareComponent
#define Response_payload_device_information_MSGTYPE DeviceInformation
#define Response_payload_device_features_MSGTYPE DeviceFeatures

#define ControlEnvelope_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    command,           1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,response,payload.response),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,get_device_information,payload.get_device_information),  20) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,get_device_features,payload.get_device_features),  28) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,update_component_segment,payload.update_component_segment),  94) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,apply_firmware,payload.apply_firmware),  95)
#define ControlEnvelope_CALLBACK NULL
#define ControlEnvelope_DEFAULT NULL
#define ControlEnvelope_payload_response_MSGTYPE Response
#define ControlEnvelope_payload_get_device_information_MSGTYPE GetDeviceInformation
#define ControlEnvelope_payload_get_device_features_MSGTYPE GetDeviceFeatures
#define ControlEnvelope_payload_update_component_segment_MSGTYPE UpdateComponentSegment
#define ControlEnvelope_payload_apply_firmware_MSGTYPE ApplyFirmware

extern const pb_msgdesc_t Response_msg;
extern const pb_msgdesc_t ControlEnvelope_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Response_fields &Response_msg
#define ControlEnvelope_fields &ControlEnvelope_msg

/* Maximum encoded size of messages (where known) */
#define Response_size                            99
#define ControlEnvelope_size                     158

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
